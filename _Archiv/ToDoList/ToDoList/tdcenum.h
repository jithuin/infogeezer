#if !defined(AFX_TDCENUM_H__5951FDE6_508A_4A9D_A55D_D16EB026AEF7__INCLUDED_)
#define AFX_TDCENUM_H__5951FDE6_508A_4A9D_A55D_D16EB026AEF7__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

// tdcenum.h : header file
//

#include <afxtempl.h>

// startup options
enum 
{
	TDL_STARTUP,
};

// creation flags
enum
{
	TLD_FORCEVISIBLE		= 0x01,
    TLD_PASSWORDPROMPTING	= 0x02,
    TLD_LOGGING				= 0x04,
	TLD_IMPORTFILE			= 0x08,
	TLD_NEWTASK				= 0x10,
	TLD_STARTEMPTY			= 0x20,
	TLD_TASKLINK			= 0x40,
};

enum TDC_TITLERECT 
{ 
	TDCTR_LABEL, 
	TDCTR_ICON, 
	TDCTR_CHECKBOX, 
	TDCTR_BOUNDS,
	TDCTR_EDIT,
};

enum TDC_INSERTWHERE
{
	TDC_INSERTATTOP,
	TDC_INSERTATBOTTOM,
	TDC_INSERTATTOPOFSELTASKPARENT,
	TDC_INSERTATBOTTOMOFSELTASKPARENT,
	TDC_INSERTAFTERSELTASK,
	TDC_INSERTBEFORESELTASK,
	TDC_INSERTATTOPOFSELTASK, // subtask
	TDC_INSERTATBOTTOMOFSELTASK, // subtask
};

enum TDC_ARCHIVE
{
	TDC_REMOVENONE,
	TDC_REMOVEALL,
	TDC_REMOVEIFSIBLINGSANDSUBTASKSCOMPLETE,
};

enum TDC_STYLE
{
	TDCS_FIRST,

	TDCS_SHOWINFOTIPS = TDCS_FIRST,					
	TDCS_COLORTEXTBYPRIORITY,			
	TDCS_COLORTEXTBYATTRIBUTE,	
	TDCS_COLORTEXTBYNONE,
	TDCS_SHOWCOMMENTSINLIST,				
	TDCS_SHOWFIRSTCOMMENTLINEINLIST,				
	TDCS_TREATSUBCOMPLETEDASDONE,		
	TDCS_HIDEPERCENTFORDONETASKS,		
	TDCS_CONFIRMDELETE,					
	TDCS_AVERAGEPERCENTSUBCOMPLETION,	
	TDCS_INCLUDEDONEINAVERAGECALC,		
	TDCS_TREECHECKBOXES,					
	TDCS_TREETASKICONS,					
	TDCS_USEEARLIESTDUEDATE,
	TDCS_USELATESTDUEDATE,			
	TDCS_USEEARLIESTSTARTDATE,
	TDCS_USELATESTSTARTDATE,			
	TDCS_USEPERCENTDONEINTIMEEST,		
	TDCS_SHOWCTRLSASCOLUMNS,				
	TDCS_SHOWCOMMENTSALWAYS,				
	TDCS_AUTOREPOSCTRLS,					
	TDCS_HIDEZEROTIMECOST,				
	TDCS_HIDESTARTDUEFORDONETASKS,		
	TDCS_SHOWPERCENTASPROGRESSBAR,		
	TDCS_READONLY,						
	TDCS_ENABLESOURCECONTROL,			 
	TDCS_CHECKOUTONLOAD,					 
	TDCS_SHOWPATHINHEADER,				
	TDCS_STRIKETHOUGHDONETASKS,			
	TDCS_FULLROWSELECTION,				
	TDCS_SORTVISIBLETASKSONLY,			
	TDCS_SHAREDCOMMENTSHEIGHT,
	TDCS_TASKCOLORISBACKGROUND,			
	TDCS_COMMENTSUSETREEFONT,
	TDCS_SHOWDATESINISO,
	TDCS_USEHIGHESTPRIORITY,
	TDCS_AUTOCALCTIMEESTIMATES,
	TDCS_SHOWWEEKDAYINDATES,
	TDCS_ROUNDTIMEFRACTIONS,
	TDCS_SHOWNONFILEREFSASTEXT,
	TDCS_INCLUDEDONEINPRIORITYCALC,		
	TDCS_WEIGHTPERCENTCALCBYNUMSUB,
	TDCS_SHOWPARENTSASFOLDERS,
	TDCS_FOCUSTREEONENTER,
	TDCS_AUTOCALCPERCENTDONE,
	TDCS_TRACKSELECTEDTASKONLY,
	TDCS_HIDEPRIORITYNUMBER,
	TDCS_PAUSETIMETRACKINGONSCRNSAVER,
	TDCS_DISPLAYHMSTIMEFORMAT,
	TDCS_SORTDONETASKSATBOTTOM,
	TDCS_USEHIGHESTRISK,
	TDCS_INCLUDEDONEINRISKCALC,		
	TDCS_SHOWPROJECTNAME,
	TDCS_LOGTIMETRACKING,
	TDCS_LOGTASKTIMESEPARATELY,
	TDCS_WARNADDDELETEARCHIVE,
	TDCS_SHOWSUBTASKCOMPLETION,
	TDCS_ALLOWPARENTTIMETRACKING,
	TDCS_REFILTERONMODIFY,
	TDCS_AUTOADJUSTDEPENDENCYDATES,
	TDCS_RIGHTSIDECOLUMNS,
	TDCS_HIDEDUETIMEFIELD,
	TDCS_USES3RDPARTYSOURCECONTROL,
	TDCS_DUEHAVEHIGHESTPRIORITY,
	TDCS_DONEHAVELOWESTPRIORITY,
	TDCS_DONEHAVELOWESTRISK,
	TDCS_HIDESTARTTIMEFIELD,
	TDCS_NODUEDATEISDUETODAY,
	TDCS_HIDEDONETIMEFIELD,
	TDCS_CALCREMAININGTIMEBYDUEDATE,
	TDCS_CALCREMAININGTIMEBYSPENT,
	TDCS_CALCREMAININGTIMEBYPERCENT,
	TDCS_SHOWTREELISTBAR,
	TDCS_INCLUDEUSERINCHECKOUT,
	TDCS_SHOWDEFAULTTASKICONS,
	TDCS_ALWAYSHIDELISTPARENTS,
	TDCS_RESTOREFILTERS,
	TDCS_ALLOWREFERENCEEDITING,
	TDCS_RESORTONMODIFY,

//	TDCS_,
    TDCS_LAST
};

enum TDC_UILOCATION
{
	TDCUIL_BOTTOM,
	TDCUIL_RIGHT,
	TDCUIL_LEFT,
};

enum TDC_COLUMN
{
	TDCC_CLIENT = 0xffff, // NCG_CLIENTCOLUMNID
	TDCC_FIRST = 0,

	TDCC_PRIORITY = TDCC_FIRST,
	TDCC_PERCENT,
	TDCC_TIMEEST,
	TDCC_TIMESPENT,
	TDCC_STARTDATE,
	TDCC_DUEDATE,
	TDCC_DONEDATE,
	TDCC_ALLOCTO,
	TDCC_ALLOCBY,
	TDCC_STATUS,
	TDCC_CATEGORY,
	TDCC_FILEREF,
	TDCC_POSITION,
	TDCC_ID,
	TDCC_DONE,
	TDCC_TRACKTIME,
	TDCC_FLAG,
	TDCC_CREATIONDATE,
	TDCC_CREATEDBY,
	TDCC_LASTMOD,
	TDCC_RISK,
	TDCC_EXTERNALID,
	TDCC_COST,
	TDCC_DEPENDENCY,
	TDCC_RECURRENCE,
	TDCC_VERSION,
	TDCC_RECENTEDIT,
	TDCC_REMAINING,
	TDCC_ICON,
	TDCC_REMINDER,
	TDCC_PARENTID,
	TDCC_PATH,
	TDCC_TAGS,
	TDCC_COLOR,

//	TDCC_,

	TDCC_CUSTOMCOLUMN_FIRST,
	TDCC_CUSTOMCOLUMN_LAST = TDCC_CUSTOMCOLUMN_FIRST + 128,

	TDCC_LAST,
	TDCC_NONE = TDCC_LAST,
}; 

typedef CArray<TDC_COLUMN, TDC_COLUMN> CTDCColumnIDArray;

enum TDC_GOTO
{
	TDCG_NEXT,
	TDCG_PREV,
};

enum TDC_FILEFMT
{
    TDCFF_OLDER,
    TDCFF_SAME,
    TDCFF_NEWER
};

enum TDC_FILE
{
	TDCO_UNSET = -1,
	TDCO_SUCCESS,
	TDCO_NOTEXIST,
	TDCO_NOTTASKLIST,
	TDCO_NOTALLOWED,
	TDCO_CANCELLED,
	TDCO_BADMSXML,
	TDCO_NOENCRYPTIONDLL,
	TDCO_UNKNOWNENCRYPTION,
	TDCO_INUSE,
	TDCO_NOTCHECKEDOUT,
	TDCO_OTHER, // always the last value
};

enum // TDL_SAVETASKLIST
{
	TDLS_INCLUDEUNSAVED		= 0x01, 
	TDLS_CLOSINGTASKLISTS	= 0x02, 
	TDLS_CLOSINGWINDOWS		= 0x04, 
	TDLS_FLUSH				= 0x08,
	TDLS_AUTOSAVE			= 0x10,
};
 
enum TDC_GETTASKS
{
	TDCGT_NONE,			// not very useful except to assist coding
	TDCGT_ALL,
	TDCGT_DUE,			// due today
	TDCGT_DUETOMORROW,
	TDCGT_DUETHISWEEK,
	TDCGT_DUENEXTWEEK,
	TDCGT_DUETHISMONTH,
	TDCGT_DUENEXTMONTH,
	TDCGT_DONE,
	TDCGT_NOTDONE,
};

enum TDC_RESETIDS
{
	TDCR_YES,
	TDCR_NO,
	TDCR_CHECK
};

enum TDC_PASTE
{
	TDCP_ONSELTASK,
	TDCP_BELOWSELTASK,
	TDCP_ATBOTTOM
};

enum TDC_MOVETASK	
{
	TDCM_DOWN,
	TDCM_UP,
	TDCM_LEFT,
	TDCM_RIGHT,
};

enum // CToDoCtrl::GetTasks()
{
	TDCGTF_PARENTTITLECOMMENTSONLY	= 0x0001,
	TDCGTF_TITLESONLY				= 0x0002,
	TDCGTF_HTMLCOMMENTS 			= 0x0004,
	TDCGTF_KEEPFLAGGED				= 0x0008,
	TDCGTF_TRANSFORM				= 0x0010,
	TDCGTF_USERCOLUMNS 				= 0x0020,
	TDCGTF_FILENAME 				= 0x0040,
};

enum // CToDoCtrl::GetSelectedTasks()
{
	TDCGSTF_IMMEDIATEPARENT			= 0x0001,
	TDCGSTF_ALLPARENTS				= 0x0002,
	TDCGSTF_NOTSUBTASKS				= 0x0004,
	TDCGSTF_RESOLVEREFERENCES		= 0x0008,
};

enum TDC_DATE
{
	TDCD_CREATE,
	TDCD_START,		// getting only (date+time)
	TDCD_STARTDATE,	// setting or getting (date only)
	TDCD_STARTTIME,	// setting or getting (time only)
	TDCD_DUE,		// getting only (date+time)
	TDCD_DUEDATE,	// setting or getting (date only)
	TDCD_DUETIME,	// setting or getting (time only)
	TDCD_DONE,		// getting only (date+time)
	TDCD_DONEDATE,	// setting or getting (date only)
	TDCD_DONETIME,	// setting or getting (time only)
	TDCD_LASTMOD,
	TDCD_CUSTOM,
};

// control ids
enum 
{
	IDC_FIRST			= 100,
		
	IDC_TASKLIST,		
	IDC_PROJECTLABEL,	
	IDC_PROJECTNAME,	
	IDC_ALLOCTOLABEL,	
	IDC_ALLOCTO,		
	IDC_ALLOCBYLABEL,	
	IDC_ALLOCBY,		
	IDC_STATUSLABEL,	
	IDC_STATUS,		
	IDC_CATEGORYLABEL,	
	IDC_CATEGORY,		
	IDC_PRIORITYLABEL,	
	IDC_PRIORITY,		
	IDC_STARTLABEL,		
	IDC_STARTDATE,		
	IDC_STARTTIMELABEL,		
	IDC_STARTTIME,		
	IDC_DUELABEL,		
	IDC_DUEDATE,		
	IDC_DUETIMELABEL,		
	IDC_DUETIME,		
	IDC_PERCENTLABEL,	
	IDC_PERCENT,		
	IDC_PERCENTSPIN,	
	IDC_DONELABEL,		
	IDC_DONEDATE,		
	IDC_DONETIMELABEL,		
	IDC_DONETIME,		
	IDC_FILEPATHLABEL,	
	IDC_FILEPATH,		
	IDC_TIMEESTLABEL,	
	IDC_TIMEEST,		
	IDC_TIMESPENTLABEL,	
	IDC_TIMESPENT,		
	IDC_RISKLABEL,		
	IDC_RISK,			
	IDC_EXTERNALIDLABEL,
	IDC_EXTERNALID,		
	IDC_COSTLABEL,
	IDC_COST,		
	IDC_DEPENDSLABEL,
	IDC_DEPENDS,		
	IDC_RECURRENCE,		
	IDC_RECURRENCELABEL,		
	IDC_COLOUR,		
	IDC_COLOURLABEL,		
	IDC_VERSION,		
	IDC_VERSIONLABEL,		
	IDC_COMMENTSLABEL,	
	IDC_COMMENTSTYPE,	
	IDC_SPLITTER,		
	IDC_COMMENTS,	
	IDC_TAGSLABEL,
	IDC_TAGS,
	
	IDC_FIRST_CUSTOMDATAFIELD,
	IDC_LAST_CUSTOMDATAFIELD = IDC_FIRST_CUSTOMDATAFIELD + 256,
	
	IDC_FTC_TABCTRL,
	IDC_FTC_TASKLIST,
	IDC_FTC_EDIT,

	IDC_FTC_EXTENSIONWINDOW1,
	IDC_FTC_EXTENSIONWINDOW2,
	IDC_FTC_EXTENSIONWINDOW3,
	IDC_FTC_EXTENSIONWINDOW4,
	IDC_FTC_EXTENSIONWINDOW5,
	IDC_FTC_EXTENSIONWINDOW6,
	IDC_FTC_EXTENSIONWINDOW7,
	IDC_FTC_EXTENSIONWINDOW8,
	IDC_FTC_EXTENSIONWINDOW9,
	IDC_FTC_EXTENSIONWINDOW10,
	IDC_FTC_EXTENSIONWINDOW11,
	IDC_FTC_EXTENSIONWINDOW12,
	IDC_FTC_EXTENSIONWINDOW13,
	IDC_FTC_EXTENSIONWINDOW14,
	IDC_FTC_EXTENSIONWINDOW15,
	IDC_FTC_EXTENSIONWINDOW16,
		
	IDC_LAST,
};

enum TDC_ATTRIBUTE
{
	TDCA_NONE = -1,

	TDCA_FIRSTATTRIBUTE = 0,
	TDCA_TASKNAME = TDCA_FIRSTATTRIBUTE,
	TDCA_DONEDATE,
	TDCA_DUEDATE,
	TDCA_STARTDATE,
	TDCA_PRIORITY,
	TDCA_COLOR,
	TDCA_ALLOCTO,
	TDCA_ALLOCBY,
	TDCA_STATUS,
	TDCA_CATEGORY,
	TDCA_PERCENT,
	TDCA_TIMEEST,
	TDCA_TIMESPENT,
	TDCA_FILEREF,
	TDCA_COMMENTS,
	TDCA_PROJNAME,
	TDCA_FLAG,
	TDCA_CREATIONDATE,
	TDCA_CREATEDBY,
	TDCA_RISK,			
	TDCA_EXTERNALID,	
	TDCA_COST,			
	TDCA_DEPENDENCY,	
	TDCA_RECURRENCE,	
	TDCA_VERSION,		
	TDCA_POSITION,
	TDCA_ID,
	TDCA_LASTMOD,
	TDCA_DUETIME,
	TDCA_ICON,
	TDCA_STARTTIME,
	TDCA_DONETIME,
	TDCA_TAGS,

	// number of 'real' attributes
	TDCA_ATTRIBUTECOUNT,

	// pseudo attribute
	TDCA_PARENTID,

	// pseudo attributes for SetModified
	TDCA_NEWTASK,
	TDCA_MOVE,
	TDCA_UNDO,
	TDCA_DELETE,
	TDCA_ARCHIVE,
	TDCA_ENCRYPT,
	TDCA_COPY,

	// pseudo attributes for Find Tasks dialog
	TDCA_TASKNAMEORCOMMENTS,
	TDCA_ANYTEXTATTRIBUTE,
	TDCA_DONEDATE_RELATIVE,		// deprecated
	TDCA_DUEDATE_RELATIVE,		// deprecated
	TDCA_STARTDATE_RELATIVE,	// deprecated
	TDCA_CREATIONDATE_RELATIVE,	// deprecated
	TDCA_LASTMOD_RELATIVE,		// deprecated

	// custom attributes
	TDCA_CUSTOMATTRIBDEFS,
	TDCA_CUSTOMATTRIB,
	TDCA_CUSTOMATTRIB_FIRST = TDCA_CUSTOMATTRIB,
	TDCA_CUSTOMATTRIB_LAST = TDCA_CUSTOMATTRIB_FIRST + 128,

	// pseudo attribute for filtering
	TDCA_SELECTION,

	// pseudo attribute for printing
	TDCA_NOTES,

	TDCA_ALL = 0xfffffff0,
};

typedef CArray<TDC_ATTRIBUTE, TDC_ATTRIBUTE> CTDCAttributeArray;

enum FIND_OPERATOR
{
	FO_NONE = -1,
	FO_EQUALS,
	FO_NOT_EQUALS,
	FO_INCLUDES,
	FO_NOT_INCLUDES,
	FO_ON_OR_BEFORE,
	FO_BEFORE,
	FO_ON_OR_AFTER,
	FO_AFTER,
	FO_GREATER_OR_EQUAL,
	FO_GREATER,
	FO_LESS_OR_EQUAL,
	FO_LESS,
	FO_SET,
	FO_NOT_SET,
};

enum FIND_ATTRIBTYPE
{
	FT_NONE = -1,
	FT_STRING,
	FT_INTEGER,
	FT_DOUBLE,
	FT_DATE,
	FT_BOOL,
	FT_TIME,
	FT_DATE_REL, // relative date
};

enum 
{
	TDITU_MINS   = 'I',
	TDITU_HOURS  = 'H',
	TDITU_DAYS   = 'D',
	TDITU_WEEKS  = 'W',
	TDITU_MONTHS = 'M',
	TDITU_YEARS  = 'Y',
};

enum TDI_REGULARITY
{
	TDIR_ONCE,
	TDIR_DAILY,
	TDIR_WEEKLY,
	TDIR_MONTHLY,
	TDIR_YEARLY,

	TDIR_DAY_EVERY		= TDIR_DAILY,		
	TDIR_WEEK_EVERY		= TDIR_WEEKLY,	
	TDIR_MONTH_EVERY	= TDIR_MONTHLY,	
	TDIR_YEAR_EVERY		= TDIR_YEARLY,	

	// new options
	TDIR_DAY_WEEKDAYS,
	TDIR_DAY_RECREATEAFTERNDAYS,
	TDIR_WEEK_RECREATEAFTERNWEEKS,
	TDIR_MONTH_SPECIFICDAY,
	TDIR_MONTH_RECREATEAFTERNMONTHS,
	TDIR_YEAR_SPECIFICDAYMONTH,
	TDIR_YEAR_RECREATEAFTERNYEARS,
};

enum 
{
	TDCCHECKNONE		= 0x0,
	TDCCHECKPARENT		= 0x1,
	TDCCHECKCHILDREN	= 0x2,
	TDCCHECKALL			= 0x3,
};

enum 
{ 
	SET_NOCHANGE	= -1, 
	SET_FAILED		= 0, 
	SET_CHANGE		= 1 
};

enum
{
	MAX_TDPRIORITY = 10,
	MIN_TDPRIORITY = 0,
	MAX_TDRISK = 10,
	MIN_TDRISK = 0,
};

enum TDC_EXPANDCOLLAPSE
{
	TDCEC_ALL,
	TDCEC_SELECTED,
	TDCEC_DUE,
	TDCEC_STARTED,
};

enum FILTER_SHOW
{
	FS_CUSTOM = -1,
	FS_ALL = 100, // to not coincide with previous enum
	FS_NOTDONE,
	FS_DONE, 
	FS_FLAGGED, 
	FS_SELECTED,
};

enum FILTER_DATE
{
	FD_ANY,
	FD_NONE,
	FD_TODAY,
	FD_TOMORROW,
	FD_ENDTHISWEEK, 
	FD_ENDNEXTWEEK, 
	FD_ENDTHISMONTH,
	FD_ENDNEXTMONTH,
	FD_ENDTHISYEAR,
	FD_ENDNEXTYEAR,
	FD_NEXTSEVENDAYS,
	FD_NOW,
};

enum // RESULT_FLAGS
{
	RF_DONE			= 0x0001,
	RF_PARENT		= 0x0002,
	RF_REFERENCE	= 0x0004,
};

enum // FILTER_OPTIONS
{
	FO_ANYCATEGORY	= 0x0001,
	FO_ANYALLOCTO	= 0x0002,
	FO_HIDEPARENTS	= 0x0004,
	FO_HIDEOVERDUE	= 0x0008,
	FO_HIDEDONE		= 0x0010,
	FO_HIDECOLLAPSED= 0x0020,
	FO_SHOWALLSUB	= 0x0040,
	FO_ANYTAG		= 0x0080,
	FO_ANYSTATUS	= 0x0100,
};

enum // FILTER_MISC
{
	FM_ANYPRIORITY	= -1,
	FM_ANYRISK		= -1,
	FM_NOPRIORITY	= -2,
	FM_NORISK		= -2,
};

enum FILTER_TITLE
{
	FT_FILTERONTITLEONLY,
	FT_FILTERONTITLECOMMENTS,
	FT_FILTERONANYTEXT,
};

enum 
{ 
	FB_MULTISELCAT		= 0x01, 
	FB_MULTISELALLOCTO	= 0x02, 
	FB_MULTISELSTAT		= 0x04, 
	FB_MULTISELALLOCBY	= 0x08,
	FB_MULTISELVER		= 0x10,
	FB_MULTISELTAGS		= 0x20,
};

enum TDC_SETTASKDONE
{
	TDC_SETDONE,
	TDC_SETUNDONE,
	TDC_SETLEAVE,
};

enum TDC_SELECTTASK
{
	TDC_SELECTFIRST,
	TDC_SELECTNEXT,
	TDC_SELECTNEXTINCLCURRENT,
	TDC_SELECTPREV,
	TDC_SELECTLAST,
};

enum FTC_VIEW
{
	FTCV_UNSET = -1,
	FTCV_TASKTREE,
	FTCV_TASKLIST,

	FTCV_FIRSTUIEXTENSION = 256,
	FTCV_UIEXTENSION1 = FTCV_FIRSTUIEXTENSION,
	FTCV_UIEXTENSION2,
	FTCV_UIEXTENSION3,
	FTCV_UIEXTENSION4,
	FTCV_UIEXTENSION5,
	FTCV_UIEXTENSION6,
	FTCV_UIEXTENSION7,
	FTCV_UIEXTENSION8,
	FTCV_UIEXTENSION9,
	FTCV_UIEXTENSION10,
	FTCV_UIEXTENSION11,
	FTCV_UIEXTENSION12,
	FTCV_UIEXTENSION13,
	FTCV_UIEXTENSION14,
	FTCV_UIEXTENSION15,
	FTCV_UIEXTENSION16,
	FTCV_LASTUIEXTENSION = FTCV_UIEXTENSION16,
};

enum TDI_RECALCATTRIB
{
	TDIR_PRIORITY		= 0x00000001,
	TDIR_PRIORITYINCDUE	= 0x00000002,
	TDIR_PERCENT		= 0x00000004,
	TDIR_RISK			= 0x00000008,
	TDIR_TIMEESTIMATE	= 0x00000010,
	TDIR_TIMESPENT		= 0x00000020,
	TDIR_COST			= 0x00000040,
	TDIR_CALCULATEDDUE	= 0x00000080,
	TDIR_GOODASDONE		= 0x00000100,
	TDIR_SUBTASKSCOUNT	= 0x00000200, 
	TDIR_SUBTASKSDONE	= 0x00000400,
	TDIR_PATH			= 0x00000800,
	TDIR_POSITION		= 0x00001000,
	TDIR_CATEGORY		= 0x00002000,
	TDIR_ALLOCTO		= 0x00004000,
	TDIR_TAGS			= 0x00008000,
	TDIR_CALCULATEDSTART= 0x00010000,

	TDIR_ALL			= 0xffffffff
};

enum TDC_REMINDER
{
	TDCR_STARTDATE,
	TDCR_DUEDATE,
};

enum TDCUNDOELMOP
{
	TDCUEO_EDIT,
	TDCUEO_ADD,
	TDCUEO_DELETE,
	TDCUEO_MOVE,
};

enum TDCUNDOACTIONTYPE
{
	TDCUAT_NONE = -1,
	TDCUAT_EDIT,
	TDCUAT_ADD,
	TDCUAT_DELETE,
	TDCUAT_PASTE,
	TDCUAT_COPY,
	TDCUAT_MOVE,
	TDCUAT_ARCHIVE,
};

enum TDC_MAXSTATE
{
	TDCMS_NORMAL,
	TDCMS_MAXTASKLIST,
	TDCMS_MAXCOMMENTS,
};

enum TDI_RECURREUSEOPTION
{
	TDIRO_REUSE,
	TDIRO_CREATE,
	TDIRO_ASK,
};

enum TDI_RECURFROMOPTION
{
	TDIRO_DONEDATE,
	TDIRO_DUEDATE,
	TDIRO_STARTDATE,
};

enum // custom attributes
{
	// data type
	TDCCA_STRING			= 0x0000,
	TDCCA_DATE				= 0x0001,
	TDCCA_INTEGER			= 0x0002,
	TDCCA_DOUBLE			= 0x0003,
	TDCCA_BOOL				= 0x0004,
	TDCCA_ICON				= 0x0005,

	TDCCA_DATAMASK			= 0x00ff,

	// optional list type
	TDCCA_NOTALIST			= 0x0000,
	TDCCA_AUTOLIST			= 0x0100,
	TDCCA_FIXEDLIST			= 0x0200,
	TDCCA_AUTOMULTILIST		= 0x0300,
	TDCCA_FIXEDMULTILIST	= 0x0400,

	TDCCA_LISTMASK			= 0xff00,
};

enum TDC_PREPAREPATH 
{ 
	TDCPP_NONE,
	TDCPP_FILE, 
	TDCPP_STORAGE, 
};

enum TDC_TASKS2CLIPBOARD
{ 
	TDCTC_ASHTML, 
	TDCTC_ASTEXT, 
	TDCTC_ASLINK, 
	TDCTC_ASDEPENDS, 
	TDCTC_ASLINKFULL, 
	TDCTC_ASDEPENDSFULL, 
	TDCTC_ASPATH, 
};

#endif // AFX_TDCENUM_H__5951FDE6_508A_4A9D_A55D_D16EB026AEF7__INCLUDED_