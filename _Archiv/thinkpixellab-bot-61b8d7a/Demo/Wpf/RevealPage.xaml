<Page
  xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:sys="clr-namespace:System;assembly=mscorlib"
  xmlns:lib="http://schemas.thinkpixellab.com/2011/xaml/presentation"
  xmlns:core="clr-namespace:PixelLab.Wpf.Demo.Core"
  core:DemoMetadataProperties.DemoName="Reveal"
  core:DemoMetadataProperties.DemoDescription="This is a great example of how a custom widget--namely, Reveal--can be used in a number of places. TreeView and Expander, for example.">
    <Grid>
        <Grid.Resources>
            <sys:String x:Key="Prose">Once upon a time, there was a rabbit. This rabbit ran through the woods, looking for a carrot. He couldn't find one, but he did come upon a deer. The deer looked lonely, so the rabbit bounced up to the deer and asked him what was wrong.</sys:String>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <CheckBox x:Name="Expander" Content="Expand" Margin="5"/>
        <Border Grid.Row="1"
                BorderBrush="Black"
                BorderThickness="1"
                VerticalAlignment="Top"
                Margin="5">
            <lib:Reveal
                IsExpanded="{Binding Path=IsChecked,ElementName=Expander}">
                <TextBlock TextWrapping="Wrap" Text="{StaticResource Prose}" />
            </lib:Reveal>
        </Border>
        <Border Grid.Row="2"
                BorderBrush="Black"
                BorderThickness="1"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Margin="5">
            <lib:Reveal
                HorizontalReveal="FromRightToLeft"
                VerticalReveal="FromBottomToTop"
                IsExpanded="{Binding Path=IsChecked,ElementName=Expander}">
                <TextBlock TextWrapping="Wrap" Text="{StaticResource Prose}" />
            </lib:Reveal>
        </Border>
        <Border Grid.Row="3"
                BorderBrush="Black"
                BorderThickness="1"
                VerticalAlignment="Bottom"
                Margin="5">
            <lib:Reveal
                IsExpanded="{Binding Path=IsChecked,ElementName=Expander}">
                <TextBlock TextWrapping="Wrap" Text="{StaticResource Prose}" />
            </lib:Reveal>
        </Border>
        <Border Grid.Row="4"
                BorderBrush="Black"
                BorderThickness="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Margin="5">
            <lib:Reveal
                HorizontalReveal="FromCenterToEdge"
                VerticalReveal="FromCenterToEdge"
                IsExpanded="{Binding Path=IsChecked,ElementName=Expander}">
                <TextBlock TextWrapping="Wrap" Text="{StaticResource Prose}" />
            </lib:Reveal>
        </Border>

        <TreeView Grid.Column="1" Grid.RowSpan="5" Margin="5">
            <TreeView.Resources>
                <PathGeometry x:Key="TreeArrow">
                    <PathGeometry.Figures>
                        <PathFigureCollection>
                            <PathFigure IsFilled="True"
                                        StartPoint="0 0"
                                        IsClosed="True">
                                <PathFigure.Segments>
                                    <PathSegmentCollection>
                                        <LineSegment Point="0 6"/>
                                        <LineSegment Point="6 0"/>
                                    </PathSegmentCollection>
                                </PathFigure.Segments>
                            </PathFigure>
                        </PathFigureCollection>
                    </PathGeometry.Figures>
                </PathGeometry>
                <Style x:Key="ExpandCollapseToggleStyle"
                       TargetType="{x:Type ToggleButton}">
                    <Setter Property="Focusable"
                            Value="False"/>
                    <Setter Property="Width"
                            Value="16"/>
                    <Setter Property="Height"
                            Value="16"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                <Border Width="16"
                                        Height="16"
                                        Background="Transparent"
                                        Padding="5,5,5,5">
                                    <Path x:Name="ExpandPath"
                                          Fill="Transparent"
                                          Stroke="#FF989898"
                                          Data="{StaticResource TreeArrow}">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="135"
                                                             CenterX="3"
                                                             CenterY="3"/>
                                        </Path.RenderTransform>
                                    </Path>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsMouseOver"
                                             Value="True">
                                        <Setter TargetName="ExpandPath"
                                                Property="Stroke"
                                                Value="#FF1BBBFA"/>
                                        <Setter TargetName="ExpandPath"
                                                Property="Fill"
                                                Value="Transparent"/>
                                    </Trigger>

                                    <Trigger Property="IsChecked"
                                             Value="True">
                                        <Setter TargetName="ExpandPath"
                                                Property="RenderTransform">
                                            <Setter.Value>
                                                <RotateTransform Angle="180"
                                                                 CenterX="3"
                                                                 CenterY="3"/>
                                            </Setter.Value>
                                        </Setter>
                                        <Setter TargetName="ExpandPath"
                                                Property="Fill"
                                                Value="#FF595959"/>
                                        <Setter TargetName="ExpandPath"
                                                Property="Stroke"
                                                Value="#FF262626"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
                <Style TargetType="{x:Type TreeViewItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type TreeViewItem}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="19"
                                                          Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <ToggleButton x:Name="Expander"
                                                  Style="{StaticResource ExpandCollapseToggleStyle}"
                                                  IsChecked="{Binding Path=IsExpanded,RelativeSource={RelativeSource TemplatedParent}}"
                                                  ClickMode="Press"/>
                                    <Border Name="Bd"
                                            Grid.Column="1"
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="{TemplateBinding BorderThickness}"
                                            Padding="{TemplateBinding Padding}"
                                            SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="PART_Header"
                                                          ContentSource="Header"
                                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    </Border>
                                    <lib:Reveal Grid.Row="1"
                                              Grid.Column="1"
                                              Grid.ColumnSpan="2"
                                              HorizontalAlignment="Left"
                                              VerticalAlignment="Top"
                                              VerticalReveal="FromBottomToTop"
                                              IsExpanded="{TemplateBinding IsExpanded}">
                                        <ItemsPresenter />

                                    </lib:Reveal>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="HasItems"
                                             Value="false">
                                        <Setter TargetName="Expander"
                                                Property="Visibility"
                                                Value="Hidden"/>
                                    </Trigger>
                                    <Trigger Property="IsSelected"
                                             Value="true">
                                        <Setter TargetName="Bd"
                                                Property="Background"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsSelected"
                                                       Value="true"/>
                                            <Condition Property="IsSelectionActive"
                                                       Value="false"/>
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="Bd"
                                                Property="Background"
                                                Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                    </MultiTrigger>
                                    <Trigger Property="IsEnabled"
                                             Value="false">
                                        <Setter Property="Foreground"
                                                Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </TreeView.Resources>

            <TreeViewItem Header="Desktop">
                <TreeViewItem Header="Local Drive (C:)">
                    <TreeViewItem Header="Users" />
                    <TreeViewItem Header="WINDOWS">
                        <TreeViewItem Header="System32" />
                    </TreeViewItem>
                </TreeViewItem>
                <TreeViewItem Header="Control Panel">
                    <TreeViewItem Header="Appearance" />
                    <TreeViewItem Header="Network" />
                </TreeViewItem>
            </TreeViewItem>
        </TreeView>
    </Grid>
</Page>
