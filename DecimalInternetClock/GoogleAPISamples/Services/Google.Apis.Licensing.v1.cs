//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4971
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Licensing.v1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    /// <summary>Template for LiscenseAssignment Resource</summary>
    public class LicenseAssignment : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etags;
        
        private string _kind;
        
        private string _productId;
        
        private string _selfLink;
        
        private string _skuId;
        
        private string _userId;
        
        private string _ETag;
        
        /// <summary>ETag of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etags")]
        public virtual string Etags {
            get {
                return this._etags;
            }
            set {
                this._etags = value;
            }
        }
        
        /// <summary>Identifies the resource as a LicenseAssignment.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Name of the product.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("productId")]
        public virtual string ProductId {
            get {
                return this._productId;
            }
            set {
                this._productId = value;
            }
        }
        
        /// <summary>Link to this page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("selfLink")]
        public virtual string SelfLink {
            get {
                return this._selfLink;
            }
            set {
                this._selfLink = value;
            }
        }
        
        /// <summary>Name of the sku of the product.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("skuId")]
        public virtual string SkuId {
            get {
                return this._skuId;
            }
            set {
                this._skuId = value;
            }
        }
        
        /// <summary>Email id of the user.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId {
            get {
                return this._userId;
            }
            set {
                this._userId = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    /// <summary>Template for LicenseAssignment Insert request</summary>
    public class LicenseAssignmentInsert {
        
        private string _userId;
        
        /// <summary>Email id of the user</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("userId")]
        public virtual string UserId {
            get {
                return this._userId;
            }
            set {
                this._userId = value;
            }
        }
    }
    
    /// <summary>LicesnseAssignment List for a given product/sku for a customer.</summary>
    public class LicenseAssignmentList : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<LicenseAssignment> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        /// <summary>ETag of the resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The LicenseAssignments in this page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<LicenseAssignment> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>Identifies the resource as a collection of LicenseAssignments.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
    }
}
namespace Google.Apis.Licensing.v1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class LicensingService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService _service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"etag\":\"\\\"a3GBuXuTtUYW9BV1SIieU5LiL7w/CUdlpVg" +
            "13O3x8WTTIinSF07MIK4\\\"\",\"discoveryVersion\":\"v1\",\"id\":\"licensing:v1\",\"name\":\"lice" +
            "nsing\",\"version\":\"v1\",\"revision\":\"20120724\",\"title\":\"Enterprise License Manager " +
            "API\",\"description\":\"Licensing API to view and manage license for your domain.\",\"" +
            "icons\":{\"x16\":\"http://www.google.com/images/icons/product/search-16.gif\",\"x32\":\"" +
            "http://www.google.com/images/icons/product/search-32.gif\"},\"documentationLink\":\"" +
            "https://developers.google.com/google-apps/licensing/\",\"protocol\":\"rest\",\"baseUrl" +
            "\":\"https://www.googleapis.com/apps/licensing/v1/product/\",\"basePath\":\"/apps/lice" +
            "nsing/v1/product/\",\"rootUrl\":\"https://www.googleapis.com/\",\"servicePath\":\"apps/l" +
            "icensing/v1/product/\",\"batchPath\":\"batch\",\"parameters\":{\"alt\":{\"type\":\"string\",\"" +
            "description\":\"Data format for the response.\",\"default\":\"json\",\"enum\":[\"json\"],\"e" +
            "numDescriptions\":[\"Responses with Content-Type of application/json\"],\"location\":" +
            "\"query\"},\"fields\":{\"type\":\"string\",\"description\":\"Selector specifying which fiel" +
            "ds to include in a partial response.\",\"location\":\"query\"},\"key\":{\"type\":\"string\"" +
            ",\"description\":\"API key. Your API key identifies your project and provides you w" +
            "ith API access, quota, and reports. Required unless you provide an OAuth 2.0 tok" +
            "en.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\",\"description\":\"OAuth 2.0" +
            " token for the current user.\",\"location\":\"query\"},\"prettyPrint\":{\"type\":\"boolean" +
            "\",\"description\":\"Returns response with indentations and line breaks.\",\"default\":" +
            "\"true\",\"location\":\"query\"},\"quotaUser\":{\"type\":\"string\",\"description\":\"Available" +
            " to use for quota purposes for server-side applications. Can be any arbitrary st" +
            "ring assigned to a user, but should not exceed 40 characters. Overrides userIp i" +
            "f both are provided.\",\"location\":\"query\"},\"userIp\":{\"type\":\"string\",\"description" +
            "\":\"IP address of the site where the request originates. Use this if you want to " +
            "enforce per-user limits.\",\"location\":\"query\"}},\"schemas\":{\"LicenseAssignment\":{\"" +
            "id\":\"LicenseAssignment\",\"type\":\"object\",\"description\":\"Template for LiscenseAssi" +
            "gnment Resource\",\"properties\":{\"etags\":{\"type\":\"string\",\"description\":\"ETag of t" +
            "he resource.\"},\"kind\":{\"type\":\"string\",\"description\":\"Identifies the resource as" +
            " a LicenseAssignment.\",\"default\":\"licensing#licenseAssignment\"},\"productId\":{\"ty" +
            "pe\":\"string\",\"description\":\"Name of the product.\",\"annotations\":{\"required\":[\"li" +
            "censing.licenseAssignments.update\"]}},\"selfLink\":{\"type\":\"string\",\"description\":" +
            "\"Link to this page.\"},\"skuId\":{\"type\":\"string\",\"description\":\"Name of the sku of" +
            " the product.\",\"annotations\":{\"required\":[\"licensing.licenseAssignments.update\"]" +
            "}},\"userId\":{\"type\":\"string\",\"description\":\"Email id of the user.\",\"annotations\"" +
            ":{\"required\":[\"licensing.licenseAssignments.update\"]}}}},\"LicenseAssignmentInser" +
            "t\":{\"id\":\"LicenseAssignmentInsert\",\"type\":\"object\",\"description\":\"Template for L" +
            "icenseAssignment Insert request\",\"properties\":{\"userId\":{\"type\":\"string\",\"descri" +
            "ption\":\"Email id of the user\",\"annotations\":{\"required\":[\"licensing.licenseAssig" +
            "nments.insert\"]}}}},\"LicenseAssignmentList\":{\"id\":\"LicenseAssignmentList\",\"type\"" +
            ":\"object\",\"description\":\"LicesnseAssignment List for a given product/sku for a c" +
            "ustomer.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"ETag of the resou" +
            "rce.\"},\"items\":{\"type\":\"array\",\"description\":\"The LicenseAssignments in this pag" +
            "e of results.\",\"items\":{\"$ref\":\"LicenseAssignment\"}},\"kind\":{\"type\":\"string\",\"de" +
            "scription\":\"Identifies the resource as a collection of LicenseAssignments.\",\"def" +
            "ault\":\"licensing#licenseAssignmentList\"},\"nextPageToken\":{\"type\":\"string\",\"descr" +
            "iption\":\"The continuation token, used to page through large result sets. Provide" +
            " this value in a subsequent request to return the next page of results.\"}}}},\"re" +
            "sources\":{\"licenseAssignments\":{\"methods\":{\"delete\":{\"id\":\"licensing.licenseAssi" +
            "gnments.delete\",\"path\":\"{productId}/sku/{skuId}/user/{userId}\",\"httpMethod\":\"DEL" +
            "ETE\",\"description\":\"Revoke License.\",\"parameters\":{\"productId\":{\"type\":\"string\"," +
            "\"description\":\"Name for product\",\"required\":true,\"location\":\"path\"},\"skuId\":{\"ty" +
            "pe\":\"string\",\"description\":\"Name for sku\",\"required\":true,\"location\":\"path\"},\"us" +
            "erId\":{\"type\":\"string\",\"description\":\"email id or unique Id of the user\",\"requir" +
            "ed\":true,\"location\":\"path\"}},\"parameterOrder\":[\"productId\",\"skuId\",\"userId\"]},\"g" +
            "et\":{\"id\":\"licensing.licenseAssignments.get\",\"path\":\"{productId}/sku/{skuId}/use" +
            "r/{userId}\",\"httpMethod\":\"GET\",\"description\":\"Get license assignment of a partic" +
            "ular product and sku for a user\",\"parameters\":{\"productId\":{\"type\":\"string\",\"des" +
            "cription\":\"Name for product\",\"required\":true,\"location\":\"path\"},\"skuId\":{\"type\":" +
            "\"string\",\"description\":\"Name for sku\",\"required\":true,\"location\":\"path\"},\"userId" +
            "\":{\"type\":\"string\",\"description\":\"email id or unique Id of the user\",\"required\":" +
            "true,\"location\":\"path\"}},\"parameterOrder\":[\"productId\",\"skuId\",\"userId\"],\"respon" +
            "se\":{\"$ref\":\"LicenseAssignment\"}},\"insert\":{\"id\":\"licensing.licenseAssignments.i" +
            "nsert\",\"path\":\"{productId}/sku/{skuId}/user\",\"httpMethod\":\"POST\",\"description\":\"" +
            "Assign License.\",\"parameters\":{\"productId\":{\"type\":\"string\",\"description\":\"Name " +
            "for product\",\"required\":true,\"location\":\"path\"},\"skuId\":{\"type\":\"string\",\"descri" +
            "ption\":\"Name for sku\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"pro" +
            "ductId\",\"skuId\"],\"request\":{\"$ref\":\"LicenseAssignmentInsert\"},\"response\":{\"$ref\"" +
            ":\"LicenseAssignment\"}},\"listForProduct\":{\"id\":\"licensing.licenseAssignments.list" +
            "ForProduct\",\"path\":\"{productId}/users\",\"httpMethod\":\"GET\",\"description\":\"List li" +
            "cense assignments for given product of the customer.\",\"parameters\":{\"customerId\"" +
            ":{\"type\":\"string\",\"description\":\"CustomerId represents the customer for whom lic" +
            "enseassignments are queried\",\"required\":true,\"location\":\"query\"},\"maxResults\":{\"" +
            "type\":\"integer\",\"description\":\"Maximum number of campaigns to return at one time" +
            ". Must be positive. Optional. Default value is 100.\",\"default\":\"100\",\"format\":\"u" +
            "int32\",\"minimum\":\"1\",\"maximum\":\"1000\",\"location\":\"query\"},\"pageToken\":{\"type\":\"s" +
            "tring\",\"description\":\"Token to fetch the next page.Optional. By default server w" +
            "ill return first page\",\"default\":\"\",\"location\":\"query\"},\"productId\":{\"type\":\"str" +
            "ing\",\"description\":\"Name for product\",\"required\":true,\"location\":\"path\"}},\"param" +
            "eterOrder\":[\"productId\",\"customerId\"],\"response\":{\"$ref\":\"LicenseAssignmentList\"" +
            "}},\"listForProductAndSku\":{\"id\":\"licensing.licenseAssignments.listForProductAndS" +
            "ku\",\"path\":\"{productId}/sku/{skuId}/users\",\"httpMethod\":\"GET\",\"description\":\"Lis" +
            "t license assignments for given product and sku of the customer.\",\"parameters\":{" +
            "\"customerId\":{\"type\":\"string\",\"description\":\"CustomerId represents the customer " +
            "for whom licenseassignments are queried\",\"required\":true,\"location\":\"query\"},\"ma" +
            "xResults\":{\"type\":\"integer\",\"description\":\"Maximum number of campaigns to return" +
            " at one time. Must be positive. Optional. Default value is 100.\",\"default\":\"100\"" +
            ",\"format\":\"uint32\",\"minimum\":\"1\",\"maximum\":\"1000\",\"location\":\"query\"},\"pageToken" +
            "\":{\"type\":\"string\",\"description\":\"Token to fetch the next page.Optional. By defa" +
            "ult server will return first page\",\"default\":\"\",\"location\":\"query\"},\"productId\":" +
            "{\"type\":\"string\",\"description\":\"Name for product\",\"required\":true,\"location\":\"pa" +
            "th\"},\"skuId\":{\"type\":\"string\",\"description\":\"Name for sku\",\"required\":true,\"loca" +
            "tion\":\"path\"}},\"parameterOrder\":[\"productId\",\"skuId\",\"customerId\"],\"response\":{\"" +
            "$ref\":\"LicenseAssignmentList\"}},\"patch\":{\"id\":\"licensing.licenseAssignments.patc" +
            "h\",\"path\":\"{productId}/sku/{skuId}/user/{userId}\",\"httpMethod\":\"PATCH\",\"descript" +
            "ion\":\"Assign License. This method supports patch semantics.\",\"parameters\":{\"prod" +
            "uctId\":{\"type\":\"string\",\"description\":\"Name for product\",\"required\":true,\"locati" +
            "on\":\"path\"},\"skuId\":{\"type\":\"string\",\"description\":\"Name for sku for which licen" +
            "se would be revoked\",\"required\":true,\"location\":\"path\"},\"userId\":{\"type\":\"string" +
            "\",\"description\":\"email id or unique Id of the user\",\"required\":true,\"location\":\"" +
            "path\"}},\"parameterOrder\":[\"productId\",\"skuId\",\"userId\"],\"request\":{\"$ref\":\"Licen" +
            "seAssignment\"},\"response\":{\"$ref\":\"LicenseAssignment\"}},\"update\":{\"id\":\"licensin" +
            "g.licenseAssignments.update\",\"path\":\"{productId}/sku/{skuId}/user/{userId}\",\"htt" +
            "pMethod\":\"PUT\",\"description\":\"Assign License.\",\"parameters\":{\"productId\":{\"type\"" +
            ":\"string\",\"description\":\"Name for product\",\"required\":true,\"location\":\"path\"},\"s" +
            "kuId\":{\"type\":\"string\",\"description\":\"Name for sku for which license would be re" +
            "voked\",\"required\":true,\"location\":\"path\"},\"userId\":{\"type\":\"string\",\"description" +
            "\":\"email id or unique Id of the user\",\"required\":true,\"location\":\"path\"}},\"param" +
            "eterOrder\":[\"productId\",\"skuId\",\"userId\"],\"request\":{\"$ref\":\"LicenseAssignment\"}" +
            ",\"response\":{\"$ref\":\"LicenseAssignment\"}}}}}}";
        
        public const string Version = "v1";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string _Key;
        
        protected LicensingService(Google.Apis.Discovery.IService _service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this._service = _service;
            this._authenticator = _authenticator;
            this._licenseAssignments = new LicenseAssignmentsResource(this, _authenticator);
        }
        
        public LicensingService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public LicensingService(Google.Apis.Authentication.IAuthenticator _authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(LicensingService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameters(new System.Uri("https://www.googleapis.com/apps/licensing/v1/product/"))), _authenticator) {
        }
        
        public Google.Apis.Authentication.IAuthenticator Authenticator {
            get {
                return this._authenticator;
            }
        }
        
        public virtual string Name {
            get {
                return "licensing";
            }
        }
        
        public virtual string BaseUri {
            get {
                return "https://www.googleapis.com/apps/licensing/v1/product/";
            }
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this._Key;
            }
            set {
                this._Key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this._service.CreateRequest(resource, method);
            if ((string.IsNullOrEmpty(Key) == false)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(_authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            _service.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return _service.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return _service.DeserializeResponse<T>(response);
        }
    }
    
    public class LicenseAssignmentsResource {
        
        private LicensingService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "licenseAssignments";
        
        public LicenseAssignmentsResource(LicensingService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Revoke License.</summary>
        /// <param name="productId">Required - Name for product</param>
        /// <param name="skuId">Required - Name for sku</param>
        /// <param name="userId">Required - email id or unique Id of the user</param>
        public virtual DeleteRequest Delete(string productId, string skuId, string userId) {
            return new DeleteRequest(service, productId, skuId, userId);
        }
        
        /// <summary>Get license assignment of a particular product and sku for a user</summary>
        /// <param name="productId">Required - Name for product</param>
        /// <param name="skuId">Required - Name for sku</param>
        /// <param name="userId">Required - email id or unique Id of the user</param>
        public virtual GetRequest Get(string productId, string skuId, string userId) {
            return new GetRequest(service, productId, skuId, userId);
        }
        
        /// <summary>Assign License.</summary>
        /// <param name="productId">Required - Name for product</param>
        /// <param name="skuId">Required - Name for sku</param>
        public virtual InsertRequest Insert(Google.Apis.Licensing.v1.Data.LicenseAssignmentInsert body, string productId, string skuId) {
            return new InsertRequest(service, body, productId, skuId);
        }
        
        /// <summary>List license assignments for given product of the customer.</summary>
        /// <param name="productId">Required - Name for product</param>
        /// <param name="customerId">Required - CustomerId represents the customer for whom licenseassignments are queried</param>
        public virtual ListForProductRequest ListForProduct(string productId, string customerId) {
            return new ListForProductRequest(service, productId, customerId);
        }
        
        /// <summary>List license assignments for given product and sku of the customer.</summary>
        /// <param name="productId">Required - Name for product</param>
        /// <param name="skuId">Required - Name for sku</param>
        /// <param name="customerId">Required - CustomerId represents the customer for whom licenseassignments are queried</param>
        public virtual ListForProductAndSkuRequest ListForProductAndSku(string productId, string skuId, string customerId) {
            return new ListForProductAndSkuRequest(service, productId, skuId, customerId);
        }
        
        /// <summary>Assign License. This method supports patch semantics.</summary>
        /// <param name="productId">Required - Name for product</param>
        /// <param name="skuId">Required - Name for sku for which license would be revoked</param>
        /// <param name="userId">Required - email id or unique Id of the user</param>
        public virtual PatchRequest Patch(Google.Apis.Licensing.v1.Data.LicenseAssignment body, string productId, string skuId, string userId) {
            return new PatchRequest(service, body, productId, skuId, userId);
        }
        
        /// <summary>Assign License.</summary>
        /// <param name="productId">Required - Name for product</param>
        /// <param name="skuId">Required - Name for sku for which license would be revoked</param>
        /// <param name="userId">Required - email id or unique Id of the user</param>
        public virtual UpdateRequest Update(Google.Apis.Licensing.v1.Data.LicenseAssignment body, string productId, string skuId, string userId) {
            return new UpdateRequest(service, body, productId, skuId, userId);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _productId;
            
            private string _skuId;
            
            private string _userId;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string productId, string skuId, string userId) : 
                    base(service) {
                this._productId = productId;
                this._skuId = skuId;
                this._userId = userId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Name for product</summary>
            [Google.Apis.Util.RequestParameterAttribute("productId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProductId {
                get {
                    return this._productId;
                }
            }
            
            /// <summary>Name for sku</summary>
            [Google.Apis.Util.RequestParameterAttribute("skuId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string SkuId {
                get {
                    return this._skuId;
                }
            }
            
            /// <summary>email id or unique Id of the user</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UserId {
                get {
                    return this._userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "licenseAssignments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Licensing.v1.Data.LicenseAssignment> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _productId;
            
            private string _skuId;
            
            private string _userId;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string productId, string skuId, string userId) : 
                    base(service) {
                this._productId = productId;
                this._skuId = skuId;
                this._userId = userId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Name for product</summary>
            [Google.Apis.Util.RequestParameterAttribute("productId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProductId {
                get {
                    return this._productId;
                }
            }
            
            /// <summary>Name for sku</summary>
            [Google.Apis.Util.RequestParameterAttribute("skuId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string SkuId {
                get {
                    return this._skuId;
                }
            }
            
            /// <summary>email id or unique Id of the user</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UserId {
                get {
                    return this._userId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "licenseAssignments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Licensing.v1.Data.LicenseAssignment> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _productId;
            
            private string _skuId;
            
            private Google.Apis.Licensing.v1.Data.LicenseAssignmentInsert _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Licensing.v1.Data.LicenseAssignmentInsert body, string productId, string skuId) : 
                    base(service) {
                this.Body = body;
                this._productId = productId;
                this._skuId = skuId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Name for product</summary>
            [Google.Apis.Util.RequestParameterAttribute("productId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProductId {
                get {
                    return this._productId;
                }
            }
            
            /// <summary>Name for sku</summary>
            [Google.Apis.Util.RequestParameterAttribute("skuId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string SkuId {
                get {
                    return this._skuId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Licensing.v1.Data.LicenseAssignmentInsert Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "licenseAssignments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListForProductRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Licensing.v1.Data.LicenseAssignmentList> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _customerId;
            
            private System.Nullable<long> _maxResults;
            
            private string _pageToken;
            
            private string _productId;
            
            public ListForProductRequest(Google.Apis.Discovery.IRequestProvider service, string productId, string customerId) : 
                    base(service) {
                this._productId = productId;
                this._customerId = customerId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>CustomerId represents the customer for whom licenseassignments are queried</summary>
            [Google.Apis.Util.RequestParameterAttribute("customerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CustomerId {
                get {
                    return this._customerId;
                }
            }
            
            /// <summary>Maximum number of campaigns to return at one time. Must be positive. Optional. Default value is 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Token to fetch the next page.Optional. By default server will return first page</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>Name for product</summary>
            [Google.Apis.Util.RequestParameterAttribute("productId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProductId {
                get {
                    return this._productId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "licenseAssignments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "listForProduct";
                }
            }
        }
        
        public class ListForProductAndSkuRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Licensing.v1.Data.LicenseAssignmentList> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _customerId;
            
            private System.Nullable<long> _maxResults;
            
            private string _pageToken;
            
            private string _productId;
            
            private string _skuId;
            
            public ListForProductAndSkuRequest(Google.Apis.Discovery.IRequestProvider service, string productId, string skuId, string customerId) : 
                    base(service) {
                this._productId = productId;
                this._skuId = skuId;
                this._customerId = customerId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>CustomerId represents the customer for whom licenseassignments are queried</summary>
            [Google.Apis.Util.RequestParameterAttribute("customerId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CustomerId {
                get {
                    return this._customerId;
                }
            }
            
            /// <summary>Maximum number of campaigns to return at one time. Must be positive. Optional. Default value is 100.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Token to fetch the next page.Optional. By default server will return first page</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>Name for product</summary>
            [Google.Apis.Util.RequestParameterAttribute("productId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProductId {
                get {
                    return this._productId;
                }
            }
            
            /// <summary>Name for sku</summary>
            [Google.Apis.Util.RequestParameterAttribute("skuId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string SkuId {
                get {
                    return this._skuId;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "licenseAssignments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "listForProductAndSku";
                }
            }
        }
        
        public class PatchRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Licensing.v1.Data.LicenseAssignment> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _productId;
            
            private string _skuId;
            
            private string _userId;
            
            private Google.Apis.Licensing.v1.Data.LicenseAssignment _Body;
            
            public PatchRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Licensing.v1.Data.LicenseAssignment body, string productId, string skuId, string userId) : 
                    base(service) {
                this.Body = body;
                this._productId = productId;
                this._skuId = skuId;
                this._userId = userId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Name for product</summary>
            [Google.Apis.Util.RequestParameterAttribute("productId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProductId {
                get {
                    return this._productId;
                }
            }
            
            /// <summary>Name for sku for which license would be revoked</summary>
            [Google.Apis.Util.RequestParameterAttribute("skuId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string SkuId {
                get {
                    return this._skuId;
                }
            }
            
            /// <summary>email id or unique Id of the user</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UserId {
                get {
                    return this._userId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Licensing.v1.Data.LicenseAssignment Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "licenseAssignments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "patch";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Licensing.v1.Data.LicenseAssignment> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _productId;
            
            private string _skuId;
            
            private string _userId;
            
            private Google.Apis.Licensing.v1.Data.LicenseAssignment _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Licensing.v1.Data.LicenseAssignment body, string productId, string skuId, string userId) : 
                    base(service) {
                this.Body = body;
                this._productId = productId;
                this._skuId = skuId;
                this._userId = userId;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Name for product</summary>
            [Google.Apis.Util.RequestParameterAttribute("productId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string ProductId {
                get {
                    return this._productId;
                }
            }
            
            /// <summary>Name for sku for which license would be revoked</summary>
            [Google.Apis.Util.RequestParameterAttribute("skuId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string SkuId {
                get {
                    return this._skuId;
                }
            }
            
            /// <summary>email id or unique Id of the user</summary>
            [Google.Apis.Util.RequestParameterAttribute("userId", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string UserId {
                get {
                    return this._userId;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Licensing.v1.Data.LicenseAssignment Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "licenseAssignments";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public partial class LicensingService {
        
        private const string Resource = "";
        
        private LicenseAssignmentsResource _licenseAssignments;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual LicenseAssignmentsResource LicenseAssignments {
            get {
                return this._licenseAssignments;
            }
        }
    }
}
