//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4971
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Taskqueue.v1beta1.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    public class Task : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _enqueueTimestamp;
        
        private string _id;
        
        private string _kind;
        
        private string _leaseTimestamp;
        
        private string _payloadBase64;
        
        private string _queueName;
        
        private string _ETag;
        
        /// <summary>Time (in seconds since the epoch) at which the task was enqueued.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("enqueueTimestamp")]
        public virtual string EnqueueTimestamp {
            get {
                return this._enqueueTimestamp;
            }
            set {
                this._enqueueTimestamp = value;
            }
        }
        
        /// <summary>Name of the task.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The kind of object returned, in this case set to task.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Time (in seconds since the epoch) at which the task lease will expire. This value is 0 if the task isnt currently leased out to a worker.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("leaseTimestamp")]
        public virtual string LeaseTimestamp {
            get {
                return this._leaseTimestamp;
            }
            set {
                this._leaseTimestamp = value;
            }
        }
        
        /// <summary>A bag of bytes which is the task payload. The payload on the JSON side is always Base64 encoded.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("payloadBase64")]
        public virtual string PayloadBase64 {
            get {
                return this._payloadBase64;
            }
            set {
                this._payloadBase64 = value;
            }
        }
        
        /// <summary>Name of the queue that the task is in.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("queueName")]
        public virtual string QueueName {
            get {
                return this._queueName;
            }
            set {
                this._queueName = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class TaskQueue : Google.Apis.Requests.IDirectResponseSchema {
        
        private TaskQueue.AclData _acl;
        
        private string _id;
        
        private string _kind;
        
        private System.Nullable<long> _maxLeases;
        
        private TaskQueue.StatsData _stats;
        
        private string _ETag;
        
        /// <summary>ACLs that are applicable to this TaskQueue object.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("acl")]
        public virtual TaskQueue.AclData Acl {
            get {
                return this._acl;
            }
            set {
                this._acl = value;
            }
        }
        
        /// <summary>Name of the taskqueue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The kind of REST object returned, in this case taskqueue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>The number of times we should lease out tasks before giving up on them. If unset we lease them out forever until a worker deletes the task.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("maxLeases")]
        public virtual System.Nullable<long> MaxLeases {
            get {
                return this._maxLeases;
            }
            set {
                this._maxLeases = value;
            }
        }
        
        /// <summary>Statistics for the TaskQueue object in question.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("stats")]
        public virtual TaskQueue.StatsData Stats {
            get {
                return this._stats;
            }
            set {
                this._stats = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
        
        /// <summary>ACLs that are applicable to this TaskQueue object.</summary>
        public class AclData {
            
            private System.Collections.Generic.IList<string> _adminEmails;
            
            private System.Collections.Generic.IList<string> _consumerEmails;
            
            private System.Collections.Generic.IList<string> _producerEmails;
            
            /// <summary>Email addresses of users who are &quot;admins&quot; of the TaskQueue. This means they can control the queue, eg set ACLs for the queue.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("adminEmails")]
            public virtual System.Collections.Generic.IList<string> AdminEmails {
                get {
                    return this._adminEmails;
                }
                set {
                    this._adminEmails = value;
                }
            }
            
            /// <summary>Email addresses of users who can &quot;consume&quot; tasks from the TaskQueue. This means they can Dequeue and Delete tasks from the queue.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("consumerEmails")]
            public virtual System.Collections.Generic.IList<string> ConsumerEmails {
                get {
                    return this._consumerEmails;
                }
                set {
                    this._consumerEmails = value;
                }
            }
            
            /// <summary>Email addresses of users who can &quot;produce&quot; tasks into the TaskQueue. This means they can Insert tasks into the queue.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("producerEmails")]
            public virtual System.Collections.Generic.IList<string> ProducerEmails {
                get {
                    return this._producerEmails;
                }
                set {
                    this._producerEmails = value;
                }
            }
        }
        
        /// <summary>Statistics for the TaskQueue object in question.</summary>
        public class StatsData {
            
            private string _leasedLastHour;
            
            private string _leasedLastMinute;
            
            private string _oldestTask;
            
            private System.Nullable<long> _totalTasks;
            
            /// <summary>Number of tasks leased in the last hour.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("leasedLastHour")]
            public virtual string LeasedLastHour {
                get {
                    return this._leasedLastHour;
                }
                set {
                    this._leasedLastHour = value;
                }
            }
            
            /// <summary>Number of tasks leased in the last minute.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("leasedLastMinute")]
            public virtual string LeasedLastMinute {
                get {
                    return this._leasedLastMinute;
                }
                set {
                    this._leasedLastMinute = value;
                }
            }
            
            /// <summary>The timestamp (in seconds since the epoch) of the oldest unfinished task.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("oldestTask")]
            public virtual string OldestTask {
                get {
                    return this._oldestTask;
                }
                set {
                    this._oldestTask = value;
                }
            }
            
            /// <summary>Number of tasks in the queue.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("totalTasks")]
            public virtual System.Nullable<long> TotalTasks {
                get {
                    return this._totalTasks;
                }
                set {
                    this._totalTasks = value;
                }
            }
        }
    }
    
    public class Tasks : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Task> _items;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>The actual list of tasks returned as a result of the lease operation.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Task> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The kind of object returned, a list of tasks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
    
    public class Tasks2 : Google.Apis.Requests.IDirectResponseSchema {
        
        private System.Collections.Generic.IList<Task> _items;
        
        private string _kind;
        
        private string _ETag;
        
        /// <summary>The actual list of tasks currently active in the TaskQueue.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Task> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The kind of object returned, a list of tasks.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        public virtual string ETag {
            get {
                return this._ETag;
            }
            set {
                this._ETag = value;
            }
        }
    }
}
namespace Google.Apis.Taskqueue.v1beta1 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class TaskqueueService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService _service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"etag\":\"\\\"a3GBuXuTtUYW9BV1SIieU5LiL7w/eQA4W8L" +
            "drpJPh_TzlTEM2CnqQ-Y\\\"\",\"discoveryVersion\":\"v1\",\"id\":\"taskqueue:v1beta1\",\"name\":" +
            "\"taskqueue\",\"version\":\"v1beta1\",\"revision\":\"20120501\",\"title\":\"TaskQueue API\",\"d" +
            "escription\":\"Lets you access a Google App Engine Pull Task Queue over REST.\",\"ic" +
            "ons\":{\"x16\":\"http://www.google.com/images/icons/product/app_engine-16.png\",\"x32\"" +
            ":\"http://www.google.com/images/icons/product/app_engine-32.png\"},\"documentationL" +
            "ink\":\"http://code.google.com/appengine/docs/python/taskqueue/rest.html\",\"protoco" +
            "l\":\"rest\",\"baseUrl\":\"https://www.googleapis.com/taskqueue/v1beta1/projects/\",\"ba" +
            "sePath\":\"/taskqueue/v1beta1/projects/\",\"rootUrl\":\"https://www.googleapis.com/\",\"" +
            "servicePath\":\"taskqueue/v1beta1/projects/\",\"batchPath\":\"batch\",\"parameters\":{\"al" +
            "t\":{\"type\":\"string\",\"description\":\"Data format for the response.\",\"default\":\"jso" +
            "n\",\"enum\":[\"json\"],\"enumDescriptions\":[\"Responses with Content-Type of applicati" +
            "on/json\"],\"location\":\"query\"},\"fields\":{\"type\":\"string\",\"description\":\"Selector " +
            "specifying which fields to include in a partial response.\",\"location\":\"query\"},\"" +
            "key\":{\"type\":\"string\",\"description\":\"API key. Your API key identifies your proje" +
            "ct and provides you with API access, quota, and reports. Required unless you pro" +
            "vide an OAuth 2.0 token.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\",\"de" +
            "scription\":\"OAuth 2.0 token for the current user.\",\"location\":\"query\"},\"prettyPr" +
            "int\":{\"type\":\"boolean\",\"description\":\"Returns response with indentations and lin" +
            "e breaks.\",\"default\":\"true\",\"location\":\"query\"},\"quotaUser\":{\"type\":\"string\",\"de" +
            "scription\":\"Available to use for quota purposes for server-side applications. Ca" +
            "n be any arbitrary string assigned to a user, but should not exceed 40 character" +
            "s. Overrides userIp if both are provided.\",\"location\":\"query\"},\"userIp\":{\"type\":" +
            "\"string\",\"description\":\"IP address of the site where the request originates. Use" +
            " this if you want to enforce per-user limits.\",\"location\":\"query\"}},\"auth\":{\"oau" +
            "th2\":{\"scopes\":{\"https://www.googleapis.com/auth/taskqueue\":{\"description\":\"Mana" +
            "ge your Tasks and Taskqueues\"},\"https://www.googleapis.com/auth/taskqueue.consum" +
            "er\":{\"description\":\"Consume Tasks from your Taskqueues\"}}}},\"schemas\":{\"Task\":{\"" +
            "id\":\"Task\",\"type\":\"object\",\"properties\":{\"enqueueTimestamp\":{\"type\":\"string\",\"de" +
            "scription\":\"Time (in seconds since the epoch) at which the task was enqueued.\",\"" +
            "format\":\"int64\"},\"id\":{\"type\":\"string\",\"description\":\"Name of the task.\"},\"kind\"" +
            ":{\"type\":\"string\",\"description\":\"The kind of object returned, in this case set t" +
            "o task.\",\"default\":\"taskqueues#task\"},\"leaseTimestamp\":{\"type\":\"string\",\"descrip" +
            "tion\":\"Time (in seconds since the epoch) at which the task lease will expire. Th" +
            "is value is 0 if the task isnt currently leased out to a worker.\",\"format\":\"int6" +
            "4\"},\"payloadBase64\":{\"type\":\"string\",\"description\":\"A bag of bytes which is the " +
            "task payload. The payload on the JSON side is always Base64 encoded.\"},\"queueNam" +
            "e\":{\"type\":\"string\",\"description\":\"Name of the queue that the task is in.\"}}},\"T" +
            "askQueue\":{\"id\":\"TaskQueue\",\"type\":\"object\",\"properties\":{\"acl\":{\"type\":\"object\"" +
            ",\"description\":\"ACLs that are applicable to this TaskQueue object.\",\"properties\"" +
            ":{\"adminEmails\":{\"type\":\"array\",\"description\":\"Email addresses of users who are " +
            "\\\"admins\\\" of the TaskQueue. This means they can control the queue, eg set ACLs " +
            "for the queue.\",\"items\":{\"type\":\"string\"}},\"consumerEmails\":{\"type\":\"array\",\"des" +
            "cription\":\"Email addresses of users who can \\\"consume\\\" tasks from the TaskQueue" +
            ". This means they can Dequeue and Delete tasks from the queue.\",\"items\":{\"type\":" +
            "\"string\"}},\"producerEmails\":{\"type\":\"array\",\"description\":\"Email addresses of us" +
            "ers who can \\\"produce\\\" tasks into the TaskQueue. This means they can Insert tas" +
            "ks into the queue.\",\"items\":{\"type\":\"string\"}}}},\"id\":{\"type\":\"string\",\"descript" +
            "ion\":\"Name of the taskqueue.\"},\"kind\":{\"type\":\"string\",\"description\":\"The kind o" +
            "f REST object returned, in this case taskqueue.\",\"default\":\"taskqueues#taskqueue" +
            "\"},\"maxLeases\":{\"type\":\"integer\",\"description\":\"The number of times we should le" +
            "ase out tasks before giving up on them. If unset we lease them out forever until" +
            " a worker deletes the task.\",\"format\":\"int32\"},\"stats\":{\"type\":\"object\",\"descrip" +
            "tion\":\"Statistics for the TaskQueue object in question.\",\"properties\":{\"leasedLa" +
            "stHour\":{\"type\":\"string\",\"description\":\"Number of tasks leased in the last hour." +
            "\",\"format\":\"int64\"},\"leasedLastMinute\":{\"type\":\"string\",\"description\":\"Number of" +
            " tasks leased in the last minute.\",\"format\":\"int64\"},\"oldestTask\":{\"type\":\"strin" +
            "g\",\"description\":\"The timestamp (in seconds since the epoch) of the oldest unfin" +
            "ished task.\",\"format\":\"int64\"},\"totalTasks\":{\"type\":\"integer\",\"description\":\"Num" +
            "ber of tasks in the queue.\",\"format\":\"int32\"}}}}},\"Tasks\":{\"id\":\"Tasks\",\"type\":\"" +
            "object\",\"properties\":{\"items\":{\"type\":\"array\",\"description\":\"The actual list of " +
            "tasks returned as a result of the lease operation.\",\"items\":{\"$ref\":\"Task\"}},\"ki" +
            "nd\":{\"type\":\"string\",\"description\":\"The kind of object returned, a list of tasks" +
            ".\",\"default\":\"taskqueue#tasks\"}}},\"Tasks2\":{\"id\":\"Tasks2\",\"type\":\"object\",\"prope" +
            "rties\":{\"items\":{\"type\":\"array\",\"description\":\"The actual list of tasks currentl" +
            "y active in the TaskQueue.\",\"items\":{\"$ref\":\"Task\"}},\"kind\":{\"type\":\"string\",\"de" +
            "scription\":\"The kind of object returned, a list of tasks.\",\"default\":\"taskqueues" +
            "#tasks\"}}}},\"resources\":{\"taskqueues\":{\"methods\":{\"get\":{\"id\":\"taskqueue.taskque" +
            "ues.get\",\"path\":\"{project}/taskqueues/{taskqueue}\",\"httpMethod\":\"GET\",\"descripti" +
            "on\":\"Get detailed information about a TaskQueue.\",\"parameters\":{\"getStats\":{\"typ" +
            "e\":\"boolean\",\"description\":\"Whether to get stats. Optional.\",\"location\":\"query\"}" +
            ",\"project\":{\"type\":\"string\",\"description\":\"The project under which the queue lie" +
            "s.\",\"required\":true,\"location\":\"path\"},\"taskqueue\":{\"type\":\"string\",\"description" +
            "\":\"The id of the taskqueue to get the properties of.\",\"required\":true,\"location\"" +
            ":\"path\"}},\"parameterOrder\":[\"project\",\"taskqueue\"],\"response\":{\"$ref\":\"TaskQueue" +
            "\"},\"scopes\":[\"https://www.googleapis.com/auth/taskqueue\",\"https://www.googleapis" +
            ".com/auth/taskqueue.consumer\"]}}},\"tasks\":{\"methods\":{\"delete\":{\"id\":\"taskqueue." +
            "tasks.delete\",\"path\":\"{project}/taskqueues/{taskqueue}/tasks/{task}\",\"httpMethod" +
            "\":\"DELETE\",\"description\":\"Delete a task from a TaskQueue.\",\"parameters\":{\"projec" +
            "t\":{\"type\":\"string\",\"description\":\"The project under which the queue lies.\",\"req" +
            "uired\":true,\"location\":\"path\"},\"task\":{\"type\":\"string\",\"description\":\"The id of " +
            "the task to delete.\",\"required\":true,\"location\":\"path\"},\"taskqueue\":{\"type\":\"str" +
            "ing\",\"description\":\"The taskqueue to delete a task from.\",\"required\":true,\"locat" +
            "ion\":\"path\"}},\"parameterOrder\":[\"project\",\"taskqueue\",\"task\"],\"scopes\":[\"https:/" +
            "/www.googleapis.com/auth/taskqueue\",\"https://www.googleapis.com/auth/taskqueue.c" +
            "onsumer\"]},\"get\":{\"id\":\"taskqueue.tasks.get\",\"path\":\"{project}/taskqueues/{taskq" +
            "ueue}/tasks/{task}\",\"httpMethod\":\"GET\",\"description\":\"Get a particular task from" +
            " a TaskQueue.\",\"parameters\":{\"project\":{\"type\":\"string\",\"description\":\"The proje" +
            "ct under which the queue lies.\",\"required\":true,\"location\":\"path\"},\"task\":{\"type" +
            "\":\"string\",\"description\":\"The task to get properties of.\",\"required\":true,\"locat" +
            "ion\":\"path\"},\"taskqueue\":{\"type\":\"string\",\"description\":\"The taskqueue in which " +
            "the task belongs.\",\"required\":true,\"location\":\"path\"}},\"parameterOrder\":[\"projec" +
            "t\",\"taskqueue\",\"task\"],\"response\":{\"$ref\":\"Task\"},\"scopes\":[\"https://www.googlea" +
            "pis.com/auth/taskqueue\",\"https://www.googleapis.com/auth/taskqueue.consumer\"]},\"" +
            "lease\":{\"id\":\"taskqueue.tasks.lease\",\"path\":\"{project}/taskqueues/{taskqueue}/ta" +
            "sks/lease\",\"httpMethod\":\"POST\",\"description\":\"Lease 1 or more tasks from a TaskQ" +
            "ueue.\",\"parameters\":{\"leaseSecs\":{\"type\":\"integer\",\"description\":\"The lease in s" +
            "econds.\",\"required\":true,\"format\":\"int32\",\"location\":\"query\"},\"numTasks\":{\"type\"" +
            ":\"integer\",\"description\":\"The number of tasks to lease.\",\"required\":true,\"format" +
            "\":\"int32\",\"location\":\"query\"},\"project\":{\"type\":\"string\",\"description\":\"The proj" +
            "ect under which the queue lies.\",\"required\":true,\"location\":\"path\"},\"taskqueue\":" +
            "{\"type\":\"string\",\"description\":\"The taskqueue to lease a task from.\",\"required\":" +
            "true,\"location\":\"path\"}},\"parameterOrder\":[\"project\",\"taskqueue\",\"numTasks\",\"lea" +
            "seSecs\"],\"response\":{\"$ref\":\"Tasks\"},\"scopes\":[\"https://www.googleapis.com/auth/" +
            "taskqueue\",\"https://www.googleapis.com/auth/taskqueue.consumer\"]},\"list\":{\"id\":\"" +
            "taskqueue.tasks.list\",\"path\":\"{project}/taskqueues/{taskqueue}/tasks\",\"httpMetho" +
            "d\":\"GET\",\"description\":\"List Tasks in a TaskQueue\",\"parameters\":{\"project\":{\"typ" +
            "e\":\"string\",\"description\":\"The project under which the queue lies.\",\"required\":t" +
            "rue,\"location\":\"path\"},\"taskqueue\":{\"type\":\"string\",\"description\":\"The id of the" +
            " taskqueue to list tasks from.\",\"required\":true,\"location\":\"path\"}},\"parameterOr" +
            "der\":[\"project\",\"taskqueue\"],\"response\":{\"$ref\":\"Tasks2\"},\"scopes\":[\"https://www" +
            ".googleapis.com/auth/taskqueue\",\"https://www.googleapis.com/auth/taskqueue.consu" +
            "mer\"]}}}}}";
        
        public const string Version = "v1beta1";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string _Key;
        
        protected TaskqueueService(Google.Apis.Discovery.IService _service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this._service = _service;
            this._authenticator = _authenticator;
            this._taskqueues = new TaskqueuesResource(this, _authenticator);
            this._tasks = new TasksResource(this, _authenticator);
        }
        
        public TaskqueueService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public TaskqueueService(Google.Apis.Authentication.IAuthenticator _authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(TaskqueueService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameters(new System.Uri("https://www.googleapis.com/taskqueue/v1beta1/projects/"))), _authenticator) {
        }
        
        public Google.Apis.Authentication.IAuthenticator Authenticator {
            get {
                return this._authenticator;
            }
        }
        
        public virtual string Name {
            get {
                return "taskqueue";
            }
        }
        
        public virtual string BaseUri {
            get {
                return "https://www.googleapis.com/taskqueue/v1beta1/projects/";
            }
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this._Key;
            }
            set {
                this._Key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this._service.CreateRequest(resource, method);
            if ((string.IsNullOrEmpty(Key) == false)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(_authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            _service.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return _service.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return _service.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>Manage your Tasks and Taskqueues</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/taskqueue")]
            Taskqueue,
            
            /// <summary>Consume Tasks from your Taskqueues</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/taskqueue.consumer")]
            TaskqueueConsumer,
        }
    }
    
    public class TaskqueuesResource {
        
        private TaskqueueService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "taskqueues";
        
        public TaskqueuesResource(TaskqueueService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Get detailed information about a TaskQueue.</summary>
        /// <param name="project">Required - The project under which the queue lies.</param>
        /// <param name="taskqueue">Required - The id of the taskqueue to get the properties of.</param>
        public virtual GetRequest Get(string project, string taskqueue) {
            return new GetRequest(service, project, taskqueue);
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Taskqueue.v1beta1.Data.TaskQueue> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private System.Nullable<bool> _getStats;
            
            private string _project;
            
            private string _taskqueue;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string project, string taskqueue) : 
                    base(service) {
                this._project = project;
                this._taskqueue = taskqueue;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Whether to get stats. Optional.</summary>
            [Google.Apis.Util.RequestParameterAttribute("getStats", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> GetStats {
                get {
                    return this._getStats;
                }
                set {
                    this._getStats = value;
                }
            }
            
            /// <summary>The project under which the queue lies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project {
                get {
                    return this._project;
                }
            }
            
            /// <summary>The id of the taskqueue to get the properties of.</summary>
            [Google.Apis.Util.RequestParameterAttribute("taskqueue", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Taskqueue {
                get {
                    return this._taskqueue;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "taskqueues";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
    }
    
    public class TasksResource {
        
        private TaskqueueService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "tasks";
        
        public TasksResource(TaskqueueService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Delete a task from a TaskQueue.</summary>
        /// <param name="project">Required - The project under which the queue lies.</param>
        /// <param name="taskqueue">Required - The taskqueue to delete a task from.</param>
        /// <param name="task">Required - The id of the task to delete.</param>
        public virtual DeleteRequest Delete(string project, string taskqueue, string task) {
            return new DeleteRequest(service, project, taskqueue, task);
        }
        
        /// <summary>Get a particular task from a TaskQueue.</summary>
        /// <param name="project">Required - The project under which the queue lies.</param>
        /// <param name="taskqueue">Required - The taskqueue in which the task belongs.</param>
        /// <param name="task">Required - The task to get properties of.</param>
        public virtual GetRequest Get(string project, string taskqueue, string task) {
            return new GetRequest(service, project, taskqueue, task);
        }
        
        /// <summary>Lease 1 or more tasks from a TaskQueue.</summary>
        /// <param name="project">Required - The project under which the queue lies.</param>
        /// <param name="taskqueue">Required - The taskqueue to lease a task from.</param>
        /// <param name="numTasks">Required - The number of tasks to lease.</param>
        /// <param name="leaseSecs">Required - The lease in seconds.</param>
        public virtual LeaseRequest Lease(string project, string taskqueue, long numTasks, long leaseSecs) {
            return new LeaseRequest(service, project, taskqueue, numTasks, leaseSecs);
        }
        
        /// <summary>List Tasks in a TaskQueue</summary>
        /// <param name="project">Required - The project under which the queue lies.</param>
        /// <param name="taskqueue">Required - The id of the taskqueue to list tasks from.</param>
        public virtual ListRequest List(string project, string taskqueue) {
            return new ListRequest(service, project, taskqueue);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _project;
            
            private string _task;
            
            private string _taskqueue;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string project, string taskqueue, string task) : 
                    base(service) {
                this._project = project;
                this._taskqueue = taskqueue;
                this._task = task;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The project under which the queue lies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project {
                get {
                    return this._project;
                }
            }
            
            /// <summary>The id of the task to delete.</summary>
            [Google.Apis.Util.RequestParameterAttribute("task", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Task {
                get {
                    return this._task;
                }
            }
            
            /// <summary>The taskqueue to delete a task from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("taskqueue", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Taskqueue {
                get {
                    return this._taskqueue;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "tasks";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class GetRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Taskqueue.v1beta1.Data.Task> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _project;
            
            private string _task;
            
            private string _taskqueue;
            
            public GetRequest(Google.Apis.Discovery.IRequestProvider service, string project, string taskqueue, string task) : 
                    base(service) {
                this._project = project;
                this._taskqueue = taskqueue;
                this._task = task;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The project under which the queue lies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project {
                get {
                    return this._project;
                }
            }
            
            /// <summary>The task to get properties of.</summary>
            [Google.Apis.Util.RequestParameterAttribute("task", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Task {
                get {
                    return this._task;
                }
            }
            
            /// <summary>The taskqueue in which the task belongs.</summary>
            [Google.Apis.Util.RequestParameterAttribute("taskqueue", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Taskqueue {
                get {
                    return this._taskqueue;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "tasks";
                }
            }
            
            protected override string MethodName {
                get {
                    return "get";
                }
            }
        }
        
        public class LeaseRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Taskqueue.v1beta1.Data.Tasks> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private long _leaseSecs;
            
            private long _numTasks;
            
            private string _project;
            
            private string _taskqueue;
            
            public LeaseRequest(Google.Apis.Discovery.IRequestProvider service, string project, string taskqueue, long numTasks, long leaseSecs) : 
                    base(service) {
                this._project = project;
                this._taskqueue = taskqueue;
                this._numTasks = numTasks;
                this._leaseSecs = leaseSecs;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The lease in seconds.</summary>
            [Google.Apis.Util.RequestParameterAttribute("leaseSecs", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long LeaseSecs {
                get {
                    return this._leaseSecs;
                }
            }
            
            /// <summary>The number of tasks to lease.</summary>
            [Google.Apis.Util.RequestParameterAttribute("numTasks", Google.Apis.Util.RequestParameterType.Query)]
            public virtual long NumTasks {
                get {
                    return this._numTasks;
                }
            }
            
            /// <summary>The project under which the queue lies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project {
                get {
                    return this._project;
                }
            }
            
            /// <summary>The taskqueue to lease a task from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("taskqueue", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Taskqueue {
                get {
                    return this._taskqueue;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "tasks";
                }
            }
            
            protected override string MethodName {
                get {
                    return "lease";
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Taskqueue.v1beta1.Data.Tasks2> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _project;
            
            private string _taskqueue;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string project, string taskqueue) : 
                    base(service) {
                this._project = project;
                this._taskqueue = taskqueue;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The project under which the queue lies.</summary>
            [Google.Apis.Util.RequestParameterAttribute("project", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Project {
                get {
                    return this._project;
                }
            }
            
            /// <summary>The id of the taskqueue to list tasks from.</summary>
            [Google.Apis.Util.RequestParameterAttribute("taskqueue", Google.Apis.Util.RequestParameterType.Path)]
            public virtual string Taskqueue {
                get {
                    return this._taskqueue;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "tasks";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public partial class TaskqueueService {
        
        private const string Resource = "";
        
        private TaskqueuesResource _taskqueues;
        
        private TasksResource _tasks;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual TaskqueuesResource Taskqueues {
            get {
                return this._taskqueues;
            }
        }
        
        public virtual TasksResource Tasks {
            get {
                return this._tasks;
            }
        }
    }
}
