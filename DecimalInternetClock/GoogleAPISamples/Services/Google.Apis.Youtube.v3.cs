//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4971
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Google.Apis.Youtube.v3.Data {
    using System;
    using System.Collections;
    using System.Collections.Generic;
    
    
    /// <summary>An activity resource contains information about an action that a channel has taken on YouTube.</summary>
    public class Activity : Google.Apis.Requests.IDirectResponseSchema {
        
        private ActivityContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private ActivitySnippet _snippet;
        
        /// <summary>Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual ActivityContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The eTag of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique ID of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about an activity, including title, description, thumbnails, activity type and group.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual ActivitySnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>Details about the content of an activity: the video that was shared, the channel that was subscribed to, etc.</summary>
    public class ActivityContentDetails {
        
        private ActivityContentDetails.BulletinData _bulletin;
        
        private ActivityContentDetails.CommentData _comment;
        
        private ActivityContentDetails.FavoriteData _favorite;
        
        private ActivityContentDetails.LikeData _like;
        
        private ActivityContentDetails.PlaylistItemData _playlistItem;
        
        private ActivityContentDetails.RecommendationData _recommendation;
        
        private ActivityContentDetails.SocialData _social;
        
        private ActivityContentDetails.SubscriptionData _subscription;
        
        private ActivityContentDetails.UploadData _upload;
        
        /// <summary>Only present if the type is &quot;bulletin&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("bulletin")]
        public virtual ActivityContentDetails.BulletinData Bulletin {
            get {
                return this._bulletin;
            }
            set {
                this._bulletin = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;comment&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("comment")]
        public virtual ActivityContentDetails.CommentData Comment {
            get {
                return this._comment;
            }
            set {
                this._comment = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;favorite&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("favorite")]
        public virtual ActivityContentDetails.FavoriteData Favorite {
            get {
                return this._favorite;
            }
            set {
                this._favorite = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;like&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("like")]
        public virtual ActivityContentDetails.LikeData Like {
            get {
                return this._like;
            }
            set {
                this._like = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;playlistItem&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlistItem")]
        public virtual ActivityContentDetails.PlaylistItemData PlaylistItem {
            get {
                return this._playlistItem;
            }
            set {
                this._playlistItem = value;
            }
        }
        
        /// <summary>Only set if the type is &quot;recommendation&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("recommendation")]
        public virtual ActivityContentDetails.RecommendationData Recommendation {
            get {
                return this._recommendation;
            }
            set {
                this._recommendation = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;social&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("social")]
        public virtual ActivityContentDetails.SocialData Social {
            get {
                return this._social;
            }
            set {
                this._social = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;subscription&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subscription")]
        public virtual ActivityContentDetails.SubscriptionData Subscription {
            get {
                return this._subscription;
            }
            set {
                this._subscription = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;upload&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("upload")]
        public virtual ActivityContentDetails.UploadData Upload {
            get {
                return this._upload;
            }
            set {
                this._upload = value;
            }
        }
        
        /// <summary>Only present if the type is &quot;bulletin&quot;.</summary>
        public class BulletinData {
            
            private ResourceId _resourceId;
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;comment&quot;.</summary>
        public class CommentData {
            
            private ResourceId _resourceId;
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;favorite&quot;.</summary>
        public class FavoriteData {
            
            private ResourceId _resourceId;
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;like&quot;.</summary>
        public class LikeData {
            
            private ResourceId _resourceId;
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;playlistItem&quot;.</summary>
        public class PlaylistItemData {
            
            private string _playlistId;
            
            private ResourceId _resourceId;
            
            /// <summary>ID of the playlist the resource was added to.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("playlistId")]
            public virtual string PlaylistId {
                get {
                    return this._playlistId;
                }
                set {
                    this._playlistId = value;
                }
            }
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only set if the type is &quot;recommendation&quot;.</summary>
        public class RecommendationData {
            
            private string _reason;
            
            private ResourceId _resourceId;
            
            private ResourceId _seedResourceId;
            
            /// <summary>Reason for which the video was recommended.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("reason")]
            public virtual string Reason {
                get {
                    return this._reason;
                }
                set {
                    this._reason = value;
                }
            }
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("seedResourceId")]
            public virtual ResourceId SeedResourceId {
                get {
                    return this._seedResourceId;
                }
                set {
                    this._seedResourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;social&quot;.</summary>
        public class SocialData {
            
            private string _author;
            
            private string _imageUrl;
            
            private string _referenceUrl;
            
            private ResourceId _resourceId;
            
            private string _type;
            
            /// <summary>Author of the post.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("author")]
            public virtual string Author {
                get {
                    return this._author;
                }
                set {
                    this._author = value;
                }
            }
            
            /// <summary>Image of the post author.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("imageUrl")]
            public virtual string ImageUrl {
                get {
                    return this._imageUrl;
                }
                set {
                    this._imageUrl = value;
                }
            }
            
            /// <summary>Url of the social post.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("referenceUrl")]
            public virtual string ReferenceUrl {
                get {
                    return this._referenceUrl;
                }
                set {
                    this._referenceUrl = value;
                }
            }
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
            
            /// <summary>Type of the social network.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("type")]
            public virtual string Type {
                get {
                    return this._type;
                }
                set {
                    this._type = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;subscription&quot;.</summary>
        public class SubscriptionData {
            
            private ResourceId _resourceId;
            
            /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
            public virtual ResourceId ResourceId {
                get {
                    return this._resourceId;
                }
                set {
                    this._resourceId = value;
                }
            }
        }
        
        /// <summary>Only present if the type is &quot;upload&quot;.</summary>
        public class UploadData {
            
            private string _videoId;
            
            /// <summary>ID of the uploaded video.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
            public virtual string VideoId {
                get {
                    return this._videoId;
                }
                set {
                    this._videoId = value;
                }
            }
        }
    }
    
    /// <summary>A paginated list of activities returned as a response to youtube.activities.list calls.</summary>
    public class ActivityListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Activity> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of activities matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Activity> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>Basic details about an activity, including title, description, thumbnails, activity type and group.</summary>
    public class ActivitySnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _groupId;
        
        private string _publishedAt;
        
        private ActivitySnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        private string _type;
        
        /// <summary>Channel publishing the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Id of the group that this activity is part of.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("groupId")]
        public virtual string GroupId {
            get {
                return this._groupId;
            }
            set {
                this._groupId = value;
            }
        }
        
        /// <summary>Date and time the activity was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>Activity thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual ActivitySnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Type of the activity.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("type")]
        public virtual string Type {
            get {
                return this._type;
            }
            set {
                this._type = value;
            }
        }
        
        /// <summary>Activity thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>A channel resource contains information about a single YouTube channel.</summary>
    public class Channel {
        
        private ChannelContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private ChannelSnippet _snippet;
        
        private ChannelStatistics _statistics;
        
        private ChannelTopicDetails _topicDetails;
        
        /// <summary>Details about the content of a channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual ChannelContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The eTag of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique ID of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a channel, including title, description and thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual ChannelSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
        
        /// <summary>Statistics about a channel: number of subscribers, number of videos in the channel, etc.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statistics")]
        public virtual ChannelStatistics Statistics {
            get {
                return this._statistics;
            }
            set {
                this._statistics = value;
            }
        }
        
        /// <summary>Freebase topic information related to the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicDetails")]
        public virtual ChannelTopicDetails TopicDetails {
            get {
                return this._topicDetails;
            }
            set {
                this._topicDetails = value;
            }
        }
    }
    
    /// <summary>Details about the content of a channel.</summary>
    public class ChannelContentDetails {
        
        private ChannelContentDetails.RelatedPlaylistsData _relatedPlaylists;
        
        /// <summary>Auto-generated playlists associated with the channel</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("relatedPlaylists")]
        public virtual ChannelContentDetails.RelatedPlaylistsData RelatedPlaylists {
            get {
                return this._relatedPlaylists;
            }
            set {
                this._relatedPlaylists = value;
            }
        }
        
        /// <summary>Auto-generated playlists associated with the channel</summary>
        public class RelatedPlaylistsData {
            
            private string _favorites;
            
            private string _likes;
            
            private string _uploads;
            
            private string _watchHistory;
            
            private string _watchLater;
            
            /// <summary>The ID of the playlist containing the favorites of this channel.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("favorites")]
            public virtual string Favorites {
                get {
                    return this._favorites;
                }
                set {
                    this._favorites = value;
                }
            }
            
            /// <summary>The ID of the playlist containing the liked videos of this channel.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("likes")]
            public virtual string Likes {
                get {
                    return this._likes;
                }
                set {
                    this._likes = value;
                }
            }
            
            /// <summary>The ID of the playlist containing the uploads of this channel.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("uploads")]
            public virtual string Uploads {
                get {
                    return this._uploads;
                }
                set {
                    this._uploads = value;
                }
            }
            
            /// <summary>The ID of the playlist of the watch history of this channel.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("watchHistory")]
            public virtual string WatchHistory {
                get {
                    return this._watchHistory;
                }
                set {
                    this._watchHistory = value;
                }
            }
            
            /// <summary>The ID of the watch later playlist for this channel</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("watchLater")]
            public virtual string WatchLater {
                get {
                    return this._watchLater;
                }
                set {
                    this._watchLater = value;
                }
            }
        }
    }
    
    /// <summary>A paginated list of channels returned as the response to a youtube.channels.list call.</summary>
    public class ChannelListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Channel> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of channels matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Channel> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>Basic details about a channel, including title, description and thumbnails.</summary>
    public class ChannelSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private ChannelSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Id of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Date and time the channel was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>Channel thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual ChannelSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Channel thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>Statistics about a channel: number of subscribers, number of videos in the channel, etc.</summary>
    public class ChannelStatistics {
        
        private string _commentCount;
        
        private string _subscriberCount;
        
        private string _videoCount;
        
        private string _viewCount;
        
        /// <summary>Number of comments for this channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commentCount")]
        public virtual string CommentCount {
            get {
                return this._commentCount;
            }
            set {
                this._commentCount = value;
            }
        }
        
        /// <summary>Number of subscribers to this channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("subscriberCount")]
        public virtual string SubscriberCount {
            get {
                return this._subscriberCount;
            }
            set {
                this._subscriberCount = value;
            }
        }
        
        /// <summary>Number of videos in the channel.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoCount")]
        public virtual string VideoCount {
            get {
                return this._videoCount;
            }
            set {
                this._videoCount = value;
            }
        }
        
        /// <summary>Number of times the channel has been viewed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewCount")]
        public virtual string ViewCount {
            get {
                return this._viewCount;
            }
            set {
                this._viewCount = value;
            }
        }
    }
    
    /// <summary>Freebase topic information related to the channel.</summary>
    public class ChannelTopicDetails {
        
        private System.Collections.Generic.IList<string> _topicIds;
        
        /// <summary>List of topic ids for this channel *</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicIds")]
        public virtual System.Collections.Generic.IList<string> TopicIds {
            get {
                return this._topicIds;
            }
            set {
                this._topicIds = value;
            }
        }
    }
    
    /// <summary>A guideCategory resource identifies a category that YouTube assigns based on a channel&apos;s content or other indicators, such as the channel&apos;s popularity.</summary>
    public class GuideCategory {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private GuideCategorySnippet _snippet;
        
        /// <summary>The eTag of the guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique ID of the guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual GuideCategorySnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>A paginated list of guide categories returned as the response to a youtube.guideCategories.list call.</summary>
    public class GuideCategoryListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<GuideCategory> _items;
        
        private string _kind;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of categories matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<GuideCategory> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
    }
    
    /// <summary>Basic details about a guide category.</summary>
    public class GuideCategorySnippet {
        
        private string _channelId;
        
        private string _title;
        
        /// <summary>Channel publishing the guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Title of the guide category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
    }
    
    /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
    public class PageInfo {
        
        private System.Nullable<long> _resultsPerPage;
        
        private System.Nullable<long> _totalResults;
        
        /// <summary>The number of results to display for each page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resultsPerPage")]
        public virtual System.Nullable<long> ResultsPerPage {
            get {
                return this._resultsPerPage;
            }
            set {
                this._resultsPerPage = value;
            }
        }
        
        /// <summary>The total number of results.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalResults")]
        public virtual System.Nullable<long> TotalResults {
            get {
                return this._totalResults;
            }
            set {
                this._totalResults = value;
            }
        }
    }
    
    /// <summary>A playlist resource represents a single YouTube playlist.</summary>
    public class Playlist : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private PlaylistSnippet _snippet;
        
        private PlaylistStatus _status;
        
        /// <summary>The eTag of the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique id of the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a playlist, including title, description and thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual PlaylistSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
        
        /// <summary>The status details of a playlist describes whether the playlist is private.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual PlaylistStatus Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
    }
    
    /// <summary>A playlistItem resource refers to another resource, such as a video, that is included in a playlist.</summary>
    public class PlaylistItem : Google.Apis.Requests.IDirectResponseSchema {
        
        private PlaylistItemContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private PlaylistItemSnippet _snippet;
        
        /// <summary>Details about the content of a playlist item, such as the video or the video fragment start and end time included in the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual PlaylistItemContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The eTag of the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique id of the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about an item included in a playlist, including title, description, thumbnails, playlist the item is part of and position of the item inside the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual PlaylistItemSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>Details about the content of a playlist item, such as the video or the video fragment start and end time included in the playlist.</summary>
    public class PlaylistItemContentDetails {
        
        private string _endAt;
        
        private string _note;
        
        private string _startAt;
        
        private string _videoId;
        
        /// <summary>The time video playback ends.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("endAt")]
        public virtual string EndAt {
            get {
                return this._endAt;
            }
            set {
                this._endAt = value;
            }
        }
        
        /// <summary>The user-generated note for this item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("note")]
        public virtual string Note {
            get {
                return this._note;
            }
            set {
                this._note = value;
            }
        }
        
        /// <summary>The time video playback begins.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("startAt")]
        public virtual string StartAt {
            get {
                return this._startAt;
            }
            set {
                this._startAt = value;
            }
        }
        
        /// <summary>ID of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
        public virtual string VideoId {
            get {
                return this._videoId;
            }
            set {
                this._videoId = value;
            }
        }
    }
    
    /// <summary>A paginated list of playlist items returned as the response to a youtube.playlistItems.list call.</summary>
    public class PlaylistItemListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<PlaylistItem> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of playlist items matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<PlaylistItem> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>Basic details about an item included in a playlist, including title, description, thumbnails, playlist the item is part of and position of the item inside the playlist.</summary>
    public class PlaylistItemSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _playlistId;
        
        private System.Nullable<long> _position;
        
        private string _publishedAt;
        
        private ResourceId _resourceId;
        
        private PlaylistItemSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Channel publishing the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>The playlist the item is part of.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlistId")]
        public virtual string PlaylistId {
            get {
                return this._playlistId;
            }
            set {
                this._playlistId = value;
            }
        }
        
        /// <summary>The position of the item within the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("position")]
        public virtual System.Nullable<long> Position {
            get {
                return this._position;
            }
            set {
                this._position = value;
            }
        }
        
        /// <summary>Date and time the playlist item was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
        public virtual ResourceId ResourceId {
            get {
                return this._resourceId;
            }
            set {
                this._resourceId = value;
            }
        }
        
        /// <summary>Playlist item thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual PlaylistItemSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the playlist item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Playlist item thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>A paginated list of playlists returned as the response to a youtube.playlists.list call.</summary>
    public class PlaylistListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Playlist> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of playlists matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Playlist> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>Basic details about a playlist, including title, description and thumbnails.</summary>
    public class PlaylistSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private PlaylistSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Channel publishing the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Date and time the playlist was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>Playlist thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual PlaylistSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Playlist thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>The status details of a playlist describes whether the playlist is private.</summary>
    public class PlaylistStatus {
        
        private string _privacyStatus;
        
        /// <summary>Privacy of the playlist.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privacyStatus")]
        public virtual string PrivacyStatus {
            get {
                return this._privacyStatus;
            }
            set {
                this._privacyStatus = value;
            }
        }
    }
    
    /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
    public class ResourceId {
        
        private string _channelId;
        
        private string _kind;
        
        private string _playlistId;
        
        private string _videoId;
        
        /// <summary>ID of the referred channel. Present only when type is &quot;CHANNEL&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>The kind of the referred resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>ID of the referred playlist. Present only when type is &quot;PLAYLIST&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("playlistId")]
        public virtual string PlaylistId {
            get {
                return this._playlistId;
            }
            set {
                this._playlistId = value;
            }
        }
        
        /// <summary>ID of the referred video. Present only when type is &quot;VIDEO&quot;.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("videoId")]
        public virtual string VideoId {
            get {
                return this._videoId;
            }
            set {
                this._videoId = value;
            }
        }
    }
    
    /// <summary>A paginated list of search results returned as the response to a youtube.search.list call.</summary>
    public class SearchListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<SearchResult> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of results matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<SearchResult> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>A search result contains information about a YouTube video, channel, or playlist that matches the search parameters specified in an API request.</summary>
    public class SearchResult {
        
        private string _etag;
        
        private ResourceId _id;
        
        private string _kind;
        
        private SearchResultSnippet _snippet;
        
        /// <summary>The eTag of the search result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual ResourceId Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual SearchResultSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>Basic details about a search result, including title, description and thumbnails of the item referenced by the search result.</summary>
    public class SearchResultSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private SearchResultSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Channel publishing the found resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the found resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Date and time the found resource was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>Thumbnails for the found resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual SearchResultSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the found resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Thumbnails for the found resource.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>A subscription resource contains information about a YouTube user subscription.</summary>
    public class Subscription : Google.Apis.Requests.IDirectResponseSchema {
        
        private SubscriptionContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private SubscriptionSnippet _snippet;
        
        /// <summary>Details about the content to witch a subscription refers.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual SubscriptionContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The eTag of the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique id of the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a subscription, including title, description and thumbnails of the subscribed item.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual SubscriptionSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>Details about the content to witch a subscription refers.</summary>
    public class SubscriptionContentDetails {
        
        private System.Nullable<long> _newItemCount;
        
        private System.Nullable<long> _totalItemCount;
        
        /// <summary>Number of new items in the subscription since its content was last read.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("newItemCount")]
        public virtual System.Nullable<long> NewItemCount {
            get {
                return this._newItemCount;
            }
            set {
                this._newItemCount = value;
            }
        }
        
        /// <summary>Approximate total number of items the subscription points to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("totalItemCount")]
        public virtual System.Nullable<long> TotalItemCount {
            get {
                return this._totalItemCount;
            }
            set {
                this._totalItemCount = value;
            }
        }
    }
    
    /// <summary>A paginated list of subscriptions returned as the response to a youtube.subscriptions.list call.</summary>
    public class SubscriptionListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Subscription> _items;
        
        private string _kind;
        
        private string _nextPageToken;
        
        private PageInfo _pageInfo;
        
        private string _prevPageToken;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of subscriptions matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Subscription> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Token to the next page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("nextPageToken")]
        public virtual string NextPageToken {
            get {
                return this._nextPageToken;
            }
            set {
                this._nextPageToken = value;
            }
        }
        
        /// <summary>Paging details for lists of resources, including total number of items available and number of resources returned in a single page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("pageInfo")]
        public virtual PageInfo PageInfo {
            get {
                return this._pageInfo;
            }
            set {
                this._pageInfo = value;
            }
        }
        
        /// <summary>Token to the previous page.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("prevPageToken")]
        public virtual string PrevPageToken {
            get {
                return this._prevPageToken;
            }
            set {
                this._prevPageToken = value;
            }
        }
    }
    
    /// <summary>Basic details about a subscription, including title, description and thumbnails of the subscribed item.</summary>
    public class SubscriptionSnippet {
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private ResourceId _resourceId;
        
        private SubscriptionSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Channel publishing the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Date and time the subscription was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>A resource id is a generic reference that points to another YouTube resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("resourceId")]
        public virtual ResourceId ResourceId {
            get {
                return this._resourceId;
            }
            set {
                this._resourceId = value;
            }
        }
        
        /// <summary>Subscription thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual SubscriptionSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the subscription.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Subscription thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>A thumbnail is an image representing a YouTube resource.</summary>
    public class Thumbnail {
        
        private string _url;
        
        /// <summary>The URL for the thumbnail.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("url")]
        public virtual string Url {
            get {
                return this._url;
            }
            set {
                this._url = value;
            }
        }
    }
    
    /// <summary>A video resource represents a single YouTube video.</summary>
    public class Video : Google.Apis.Requests.IDirectResponseSchema {
        
        private VideoContentDetails _contentDetails;
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private VideoPlayer _player;
        
        private VideoSnippet _snippet;
        
        private VideoStatistics _statistics;
        
        private VideoStatus _status;
        
        private VideoTopicDetails _topicDetails;
        
        /// <summary>Details about the media content of a YouTube video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("contentDetails")]
        public virtual VideoContentDetails ContentDetails {
            get {
                return this._contentDetails;
            }
            set {
                this._contentDetails = value;
            }
        }
        
        /// <summary>The eTag of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique id of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Player to be used for a video playback.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("player")]
        public virtual VideoPlayer Player {
            get {
                return this._player;
            }
            set {
                this._player = value;
            }
        }
        
        /// <summary>Basic details about a video, including title, description, uploader, thumbnails and category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual VideoSnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
        
        /// <summary>Statistics about the video, such as the number of times the video was viewed or liked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("statistics")]
        public virtual VideoStatistics Statistics {
            get {
                return this._statistics;
            }
            set {
                this._statistics = value;
            }
        }
        
        /// <summary>The status of a video details the video&apos;s upload status and privacy status.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("status")]
        public virtual VideoStatus Status {
            get {
                return this._status;
            }
            set {
                this._status = value;
            }
        }
        
        /// <summary>Freebase topic information related to the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicDetails")]
        public virtual VideoTopicDetails TopicDetails {
            get {
                return this._topicDetails;
            }
            set {
                this._topicDetails = value;
            }
        }
    }
    
    /// <summary>A videoCategory resource identifies a category that has been or could be associated with uploaded videos.</summary>
    public class VideoCategory {
        
        private string _etag;
        
        private string _id;
        
        private string _kind;
        
        private VideoCategorySnippet _snippet;
        
        /// <summary>The eTag of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>The unique id of the video category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("id")]
        public virtual string Id {
            get {
                return this._id;
            }
            set {
                this._id = value;
            }
        }
        
        /// <summary>The type of this API resource.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
        
        /// <summary>Basic details about a video category, such as its localized title.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("snippet")]
        public virtual VideoCategorySnippet Snippet {
            get {
                return this._snippet;
            }
            set {
                this._snippet = value;
            }
        }
    }
    
    /// <summary>A paginated list of video categories returned as the response to a youtube.videoCategory.list call.</summary>
    public class VideoCategoryListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<VideoCategory> _items;
        
        private string _kind;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of video categories matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<VideoCategory> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
    }
    
    /// <summary>Basic details about a video category, such as its localized title.</summary>
    public class VideoCategorySnippet {
        
        private string _channelId;
        
        private string _title;
        
        /// <summary>Channel publishing the video category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Title of the video category.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
    }
    
    /// <summary>Details about the media content of a YouTube video.</summary>
    public class VideoContentDetails {
        
        private string _duration;
        
        private VideoContentDetails.RegionRestrictionData _regionRestriction;
        
        /// <summary>Duration of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("duration")]
        public virtual string Duration {
            get {
                return this._duration;
            }
            set {
                this._duration = value;
            }
        }
        
        /// <summary>Region restriction of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("regionRestriction")]
        public virtual VideoContentDetails.RegionRestrictionData RegionRestriction {
            get {
                return this._regionRestriction;
            }
            set {
                this._regionRestriction = value;
            }
        }
        
        /// <summary>Region restriction of the video.</summary>
        public class RegionRestrictionData {
            
            private System.Collections.Generic.IList<string> _allowed;
            
            private System.Collections.Generic.IList<string> _blocked;
            
            /// <summary>List of allowed region codes.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("allowed")]
            public virtual System.Collections.Generic.IList<string> Allowed {
                get {
                    return this._allowed;
                }
                set {
                    this._allowed = value;
                }
            }
            
            /// <summary>List of blocked region codes.</summary>
            [Newtonsoft.Json.JsonPropertyAttribute("blocked")]
            public virtual System.Collections.Generic.IList<string> Blocked {
                get {
                    return this._blocked;
                }
                set {
                    this._blocked = value;
                }
            }
        }
    }
    
    /// <summary>A paginated list of videos returned as the response to a youtube.videos.list call.</summary>
    public class VideoListResponse : Google.Apis.Requests.IDirectResponseSchema {
        
        private string _etag;
        
        private System.Collections.Generic.IList<Video> _items;
        
        private string _kind;
        
        /// <summary>The eTag of the response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("etag")]
        public virtual string ETag {
            get {
                return this._etag;
            }
            set {
                this._etag = value;
            }
        }
        
        /// <summary>List of videos matching the request criteria.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("items")]
        public virtual System.Collections.Generic.IList<Video> Items {
            get {
                return this._items;
            }
            set {
                this._items = value;
            }
        }
        
        /// <summary>The type of this API response.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("kind")]
        public virtual string Kind {
            get {
                return this._kind;
            }
            set {
                this._kind = value;
            }
        }
    }
    
    /// <summary>Player to be used for a video playback.</summary>
    public class VideoPlayer {
        
        private string _embedHtml;
        
        /// <summary>Iframe embed for the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("embedHtml")]
        public virtual string EmbedHtml {
            get {
                return this._embedHtml;
            }
            set {
                this._embedHtml = value;
            }
        }
    }
    
    /// <summary>Basic details about a video, including title, description, uploader, thumbnails and category.</summary>
    public class VideoSnippet {
        
        private string _categoryId;
        
        private string _channelId;
        
        private string _description;
        
        private string _publishedAt;
        
        private System.Collections.Generic.IList<string> _tags;
        
        private VideoSnippet.ThumbnailsData _thumbnails;
        
        private string _title;
        
        /// <summary>Video category the video belongs to.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("categoryId")]
        public virtual string CategoryId {
            get {
                return this._categoryId;
            }
            set {
                this._categoryId = value;
            }
        }
        
        /// <summary>Channel publishing the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("channelId")]
        public virtual string ChannelId {
            get {
                return this._channelId;
            }
            set {
                this._channelId = value;
            }
        }
        
        /// <summary>Description of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("description")]
        public virtual string Description {
            get {
                return this._description;
            }
            set {
                this._description = value;
            }
        }
        
        /// <summary>Date and time the video was published at.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("publishedAt")]
        public virtual string PublishedAt {
            get {
                return this._publishedAt;
            }
            set {
                this._publishedAt = value;
            }
        }
        
        /// <summary>Textual tags associated with the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("tags")]
        public virtual System.Collections.Generic.IList<string> Tags {
            get {
                return this._tags;
            }
            set {
                this._tags = value;
            }
        }
        
        /// <summary>Video thumbnails.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("thumbnails")]
        public virtual VideoSnippet.ThumbnailsData Thumbnails {
            get {
                return this._thumbnails;
            }
            set {
                this._thumbnails = value;
            }
        }
        
        /// <summary>Title of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("title")]
        public virtual string Title {
            get {
                return this._title;
            }
            set {
                this._title = value;
            }
        }
        
        /// <summary>Video thumbnails.</summary>
        public class ThumbnailsData : System.Collections.Generic.Dictionary<string, Thumbnail> {
        }
    }
    
    /// <summary>Statistics about the video, such as the number of times the video was viewed or liked.</summary>
    public class VideoStatistics {
        
        private string _commentCount;
        
        private string _dislikeCount;
        
        private string _favoriteCount;
        
        private string _likeCount;
        
        private string _viewCount;
        
        /// <summary>Number of comments for this video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("commentCount")]
        public virtual string CommentCount {
            get {
                return this._commentCount;
            }
            set {
                this._commentCount = value;
            }
        }
        
        /// <summary>Number of times the video was disliked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("dislikeCount")]
        public virtual string DislikeCount {
            get {
                return this._dislikeCount;
            }
            set {
                this._dislikeCount = value;
            }
        }
        
        /// <summary>Number of times the video was added to a user&apos;s favorites list.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("favoriteCount")]
        public virtual string FavoriteCount {
            get {
                return this._favoriteCount;
            }
            set {
                this._favoriteCount = value;
            }
        }
        
        /// <summary>Number of times the video was liked.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("likeCount")]
        public virtual string LikeCount {
            get {
                return this._likeCount;
            }
            set {
                this._likeCount = value;
            }
        }
        
        /// <summary>Number of times the video was viewed.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("viewCount")]
        public virtual string ViewCount {
            get {
                return this._viewCount;
            }
            set {
                this._viewCount = value;
            }
        }
    }
    
    /// <summary>The status of a video details the video&apos;s upload status and privacy status.</summary>
    public class VideoStatus {
        
        private string _failureReason;
        
        private string _privacyStatus;
        
        private string _rejectionReason;
        
        private string _uploadStatus;
        
        /// <summary>Present only if the uploadStatus indicates a failed upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("failureReason")]
        public virtual string FailureReason {
            get {
                return this._failureReason;
            }
            set {
                this._failureReason = value;
            }
        }
        
        /// <summary>Privacy of the video.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("privacyStatus")]
        public virtual string PrivacyStatus {
            get {
                return this._privacyStatus;
            }
            set {
                this._privacyStatus = value;
            }
        }
        
        /// <summary>Present only if the uploadStatus indicates a rejected upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("rejectionReason")]
        public virtual string RejectionReason {
            get {
                return this._rejectionReason;
            }
            set {
                this._rejectionReason = value;
            }
        }
        
        /// <summary>Status of the video upload.</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("uploadStatus")]
        public virtual string UploadStatus {
            get {
                return this._uploadStatus;
            }
            set {
                this._uploadStatus = value;
            }
        }
    }
    
    /// <summary>Freebase topic information related to the video.</summary>
    public class VideoTopicDetails {
        
        private System.Collections.Generic.IList<string> _topicIds;
        
        /// <summary>List of topic ids for this video *</summary>
        [Newtonsoft.Json.JsonPropertyAttribute("topicIds")]
        public virtual System.Collections.Generic.IList<string> TopicIds {
            get {
                return this._topicIds;
            }
            set {
                this._topicIds = value;
            }
        }
    }
}
namespace Google.Apis.Youtube.v3 {
    using System;
    using System.IO;
    using System.Collections.Generic;
    using Google.Apis;
    using Google.Apis.Discovery;
    
    
    public partial class YoutubeService : Google.Apis.Discovery.IRequestProvider {
        
        private Google.Apis.Discovery.IService _service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string DiscoveryDocument = "{\"kind\":\"discovery#restDescription\",\"etag\":\"\\\"a3GBuXuTtUYW9BV1SIieU5LiL7w/pkNhZSW" +
            "16sukGm_y_JuCZkrev_g\\\"\",\"discoveryVersion\":\"v1\",\"id\":\"youtube:v3\",\"name\":\"youtub" +
            "e\",\"canonicalName\":\"YouTube\",\"version\":\"v3\",\"revision\":\"20121022\",\"title\":\"YouTu" +
            "be API\",\"description\":\"Programmatic access to YouTube features.\",\"icons\":{\"x16\":" +
            "\"http://www.google.com/images/icons/product/youtube-16.png\",\"x32\":\"http://www.go" +
            "ogle.com/images/icons/product/youtube-32.png\"},\"documentationLink\":\"https://deve" +
            "lopers.google.com/youtube\",\"protocol\":\"rest\",\"baseUrl\":\"https://www.googleapis.c" +
            "om/youtube/v3/\",\"basePath\":\"/youtube/v3/\",\"rootUrl\":\"https://www.googleapis.com/" +
            "\",\"servicePath\":\"youtube/v3/\",\"batchPath\":\"batch\",\"parameters\":{\"alt\":{\"type\":\"s" +
            "tring\",\"description\":\"Data format for the response.\",\"default\":\"json\",\"enum\":[\"j" +
            "son\"],\"enumDescriptions\":[\"Responses with Content-Type of application/json\"],\"lo" +
            "cation\":\"query\"},\"fields\":{\"type\":\"string\",\"description\":\"Selector specifying wh" +
            "ich fields to include in a partial response.\",\"location\":\"query\"},\"key\":{\"type\":" +
            "\"string\",\"description\":\"API key. Your API key identifies your project and provid" +
            "es you with API access, quota, and reports. Required unless you provide an OAuth" +
            " 2.0 token.\",\"location\":\"query\"},\"oauth_token\":{\"type\":\"string\",\"description\":\"O" +
            "Auth 2.0 token for the current user.\",\"location\":\"query\"},\"prettyPrint\":{\"type\":" +
            "\"boolean\",\"description\":\"Returns response with indentations and line breaks.\",\"d" +
            "efault\":\"true\",\"location\":\"query\"},\"quotaUser\":{\"type\":\"string\",\"description\":\"A" +
            "vailable to use for quota purposes for server-side applications. Can be any arbi" +
            "trary string assigned to a user, but should not exceed 40 characters. Overrides " +
            "userIp if both are provided.\",\"location\":\"query\"},\"userIp\":{\"type\":\"string\",\"des" +
            "cription\":\"IP address of the site where the request originates. Use this if you " +
            "want to enforce per-user limits.\",\"location\":\"query\"}},\"auth\":{\"oauth2\":{\"scopes" +
            "\":{\"https://www.googleapis.com/auth/youtube\":{\"description\":\"Manage your YouTube" +
            " account\"},\"https://www.googleapis.com/auth/youtube.readonly\":{\"description\":\"Vi" +
            "ew your YouTube account\"},\"https://www.googleapis.com/auth/youtube.upload\":{\"des" +
            "cription\":\"Manage your YouTube videos\"},\"https://www.googleapis.com/auth/youtube" +
            "partner\":{\"description\":\"View and manage your assets and associated content on Y" +
            "ouTube\"}}}},\"schemas\":{\"Activity\":{\"id\":\"Activity\",\"type\":\"object\",\"description\"" +
            ":\"An activity resource contains information about an action that a channel has t" +
            "aken on YouTube.\",\"properties\":{\"contentDetails\":{\"$ref\":\"ActivityContentDetails" +
            "\",\"description\":\"Type specific information about the activity.\"},\"etag\":{\"type\":" +
            "\"string\",\"description\":\"The eTag of the activity.\"},\"id\":{\"type\":\"string\",\"descr" +
            "iption\":\"The unique ID of the activity.\"},\"kind\":{\"type\":\"string\",\"description\":" +
            "\"The type of this API response.\",\"default\":\"youtube#activity\"},\"snippet\":{\"$ref\"" +
            ":\"ActivitySnippet\",\"description\":\"Basic details about the activity: title, descr" +
            "iption, thumbnails.\"}}},\"ActivityContentDetails\":{\"id\":\"ActivityContentDetails\"," +
            "\"type\":\"object\",\"description\":\"Details about the content of an activity: the vid" +
            "eo that was shared, the channel that was subscribed to, etc.\",\"properties\":{\"bul" +
            "letin\":{\"type\":\"object\",\"description\":\"Only present if the type is \\\"bulletin\\\"." +
            "\",\"properties\":{\"resourceId\":{\"$ref\":\"ResourceId\",\"description\":\"ID of the resou" +
            "rce this bulletin is about.\"}}},\"comment\":{\"type\":\"object\",\"description\":\"Only p" +
            "resent if the type is \\\"comment\\\".\",\"properties\":{\"resourceId\":{\"$ref\":\"Resource" +
            "Id\",\"description\":\"ID of the commented resource.\"}}},\"favorite\":{\"type\":\"object\"" +
            ",\"description\":\"Only present if the type is \\\"favorite\\\".\",\"properties\":{\"resour" +
            "ceId\":{\"$ref\":\"ResourceId\",\"description\":\"ID of the favorited resource.\"}}},\"lik" +
            "e\":{\"type\":\"object\",\"description\":\"Only present if the type is \\\"like\\\".\",\"prope" +
            "rties\":{\"resourceId\":{\"$ref\":\"ResourceId\",\"description\":\"ID of the rated resourc" +
            "e.\"}}},\"playlistItem\":{\"type\":\"object\",\"description\":\"Only present if the type i" +
            "s \\\"playlistItem\\\".\",\"properties\":{\"playlistId\":{\"type\":\"string\",\"description\":\"" +
            "ID of the playlist the resource was added to.\"},\"resourceId\":{\"$ref\":\"ResourceId" +
            "\",\"description\":\"ID of the resource added to the playlist.\"}}},\"recommendation\":" +
            "{\"type\":\"object\",\"description\":\"Only set if the type is \\\"recommendation\\\".\",\"pr" +
            "operties\":{\"reason\":{\"type\":\"string\",\"description\":\"Reason for which the video w" +
            "as recommended.\"},\"resourceId\":{\"$ref\":\"ResourceId\",\"description\":\"ID of the rec" +
            "ommended resource.\"},\"seedResourceId\":{\"$ref\":\"ResourceId\",\"description\":\"ID of " +
            "the video that caused this recommendation.\"}}},\"social\":{\"type\":\"object\",\"descri" +
            "ption\":\"Only present if the type is \\\"social\\\".\",\"properties\":{\"author\":{\"type\":" +
            "\"string\",\"description\":\"Author of the post.\"},\"imageUrl\":{\"type\":\"string\",\"descr" +
            "iption\":\"Image of the post author.\"},\"referenceUrl\":{\"type\":\"string\",\"descriptio" +
            "n\":\"Url of the social post.\"},\"resourceId\":{\"$ref\":\"ResourceId\",\"description\":\"I" +
            "D of the resource this social activity is about.\"},\"type\":{\"type\":\"string\",\"desc" +
            "ription\":\"Type of the social network.\"}}},\"subscription\":{\"type\":\"object\",\"descr" +
            "iption\":\"Only present if the type is \\\"subscription\\\".\",\"properties\":{\"resourceI" +
            "d\":{\"$ref\":\"ResourceId\",\"description\":\"ID of the resource subscribed to.\"}}},\"up" +
            "load\":{\"type\":\"object\",\"description\":\"Only present if the type is \\\"upload\\\".\",\"" +
            "properties\":{\"videoId\":{\"type\":\"string\",\"description\":\"ID of the uploaded video." +
            "\"}}}}},\"ActivityListResponse\":{\"id\":\"ActivityListResponse\",\"type\":\"object\",\"desc" +
            "ription\":\"A paginated list of activities returned as a response to youtube.activ" +
            "ities.list calls.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag" +
            " of the response.\"},\"items\":{\"type\":\"array\",\"description\":\"List of activities ma" +
            "tching the request criteria.\",\"items\":{\"$ref\":\"Activity\"}},\"kind\":{\"type\":\"strin" +
            "g\",\"description\":\"The type of this API response.\",\"default\":\"youtube#activityLis" +
            "tResponse\"},\"nextPageToken\":{\"type\":\"string\",\"description\":\"Token to the next pa" +
            "ge.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\":\"Paging information for the li" +
            "st result.\"},\"prevPageToken\":{\"type\":\"string\",\"description\":\"Token to the previo" +
            "us page.\"}}},\"ActivitySnippet\":{\"id\":\"ActivitySnippet\",\"type\":\"object\",\"descript" +
            "ion\":\"Basic details about an activity, including title, description, thumbnails," +
            " activity type and group.\",\"properties\":{\"channelId\":{\"type\":\"string\",\"descripti" +
            "on\":\"Channel publishing the activity.\"},\"description\":{\"type\":\"string\",\"descript" +
            "ion\":\"Description of the activity.\"},\"groupId\":{\"type\":\"string\",\"description\":\"I" +
            "d of the group that this activity is part of.\"},\"publishedAt\":{\"type\":\"string\",\"" +
            "description\":\"Date and time the activity was published at.\",\"format\":\"date-time\"" +
            "},\"thumbnails\":{\"type\":\"object\",\"description\":\"Activity thumbnails.\",\"additional" +
            "Properties\":{\"$ref\":\"Thumbnail\",\"description\":\"A map of thumbnails by their name" +
            ".\"}},\"title\":{\"type\":\"string\",\"description\":\"Title of the activity.\"},\"type\":{\"t" +
            "ype\":\"string\",\"description\":\"Type of the activity.\"}}},\"Channel\":{\"id\":\"Channel\"" +
            ",\"type\":\"object\",\"description\":\"A channel resource contains information about a " +
            "single YouTube channel.\",\"properties\":{\"contentDetails\":{\"$ref\":\"ChannelContentD" +
            "etails\",\"description\":\"Information about the channel content: upload playlist id" +
            ", privacy status.\"},\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the chann" +
            "el.\"},\"id\":{\"type\":\"string\",\"description\":\"The unique ID of the channel.\"},\"kind" +
            "\":{\"type\":\"string\",\"description\":\"The type of this API resource.\",\"default\":\"you" +
            "tube#channel\"},\"snippet\":{\"$ref\":\"ChannelSnippet\",\"description\":\"Basic details a" +
            "bout the channel: title, description, and thumbnails.\"},\"statistics\":{\"$ref\":\"Ch" +
            "annelStatistics\",\"description\":\"Statistics about the channel: number of subscrib" +
            "ers, views, and comments.\"},\"topicDetails\":{\"$ref\":\"ChannelTopicDetails\",\"descri" +
            "ption\":\"Information about channel topics\"}}},\"ChannelContentDetails\":{\"id\":\"Chan" +
            "nelContentDetails\",\"type\":\"object\",\"description\":\"Details about the content of a" +
            " channel.\",\"properties\":{\"relatedPlaylists\":{\"type\":\"object\",\"description\":\"Auto" +
            "-generated playlists associated with the channel\",\"properties\":{\"favorites\":{\"ty" +
            "pe\":\"string\",\"description\":\"The ID of the playlist containing the favorites of t" +
            "his channel.\"},\"likes\":{\"type\":\"string\",\"description\":\"The ID of the playlist co" +
            "ntaining the liked videos of this channel.\"},\"uploads\":{\"type\":\"string\",\"descrip" +
            "tion\":\"The ID of the playlist containing the uploads of this channel.\"},\"watchHi" +
            "story\":{\"type\":\"string\",\"description\":\"The ID of the playlist of the watch histo" +
            "ry of this channel.\"},\"watchLater\":{\"type\":\"string\",\"description\":\"The ID of the" +
            " watch later playlist for this channel\"}}}}},\"ChannelListResponse\":{\"id\":\"Channe" +
            "lListResponse\",\"type\":\"object\",\"description\":\"A paginated list of channels retur" +
            "ned as the response to a youtube.channels.list call.\",\"properties\":{\"etag\":{\"typ" +
            "e\":\"string\",\"description\":\"The eTag of the response.\"},\"items\":{\"type\":\"array\",\"" +
            "description\":\"List of channels matching the request criteria.\",\"items\":{\"$ref\":\"" +
            "Channel\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of this API response." +
            "\",\"default\":\"youtube#channelListResponse\"},\"nextPageToken\":{\"type\":\"string\",\"des" +
            "cription\":\"Token to the next page.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\"" +
            ":\"Paging information for the list result.\"},\"prevPageToken\":{\"type\":\"string\",\"de" +
            "scription\":\"Token to the previous page.\"}}},\"ChannelSnippet\":{\"id\":\"ChannelSnipp" +
            "et\",\"type\":\"object\",\"description\":\"Basic details about a channel, including titl" +
            "e, description and thumbnails.\",\"properties\":{\"channelId\":{\"type\":\"string\",\"desc" +
            "ription\":\"Id of the channel.\"},\"description\":{\"type\":\"string\",\"description\":\"Des" +
            "cription of the channel.\"},\"publishedAt\":{\"type\":\"string\",\"description\":\"Date an" +
            "d time the channel was published at.\",\"format\":\"date-time\"},\"thumbnails\":{\"type\"" +
            ":\"object\",\"description\":\"Channel thumbnails.\",\"additionalProperties\":{\"$ref\":\"Th" +
            "umbnail\",\"description\":\"A map of thumbnails by their name.\"}},\"title\":{\"type\":\"s" +
            "tring\",\"description\":\"Title of the channel.\"}}},\"ChannelStatistics\":{\"id\":\"Chann" +
            "elStatistics\",\"type\":\"object\",\"description\":\"Statistics about a channel: number " +
            "of subscribers, number of videos in the channel, etc.\",\"properties\":{\"commentCou" +
            "nt\":{\"type\":\"string\",\"description\":\"Number of comments for this channel.\",\"forma" +
            "t\":\"uint64\"},\"subscriberCount\":{\"type\":\"string\",\"description\":\"Number of subscri" +
            "bers to this channel.\",\"format\":\"uint64\"},\"videoCount\":{\"type\":\"string\",\"descrip" +
            "tion\":\"Number of videos in the channel.\",\"format\":\"uint64\"},\"viewCount\":{\"type\":" +
            "\"string\",\"description\":\"Number of times the channel has been viewed.\",\"format\":\"" +
            "uint64\"}}},\"ChannelTopicDetails\":{\"id\":\"ChannelTopicDetails\",\"type\":\"object\",\"de" +
            "scription\":\"Freebase topic information related to the channel.\",\"properties\":{\"t" +
            "opicIds\":{\"type\":\"array\",\"description\":\"List of topic ids for this channel *\",\"i" +
            "tems\":{\"type\":\"string\"}}}},\"GuideCategory\":{\"id\":\"GuideCategory\",\"type\":\"object\"" +
            ",\"description\":\"A guideCategory resource identifies a category that YouTube assi" +
            "gns based on a channel\'s content or other indicators, such as the channel\'s popu" +
            "larity.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the gu" +
            "ide category.\"},\"id\":{\"type\":\"string\",\"description\":\"The unique ID of the guide " +
            "category.\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of this API resource" +
            ".\",\"default\":\"youtube#guideCategory\"},\"snippet\":{\"$ref\":\"GuideCategorySnippet\",\"" +
            "description\":\"Snippet of the category.\"}}},\"GuideCategoryListResponse\":{\"id\":\"Gu" +
            "ideCategoryListResponse\",\"type\":\"object\",\"description\":\"A paginated list of guid" +
            "e categories returned as the response to a youtube.guideCategories.list call.\",\"" +
            "properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the response.\"}," +
            "\"items\":{\"type\":\"array\",\"description\":\"List of categories matching the request c" +
            "riteria.\",\"items\":{\"$ref\":\"GuideCategory\"}},\"kind\":{\"type\":\"string\",\"description" +
            "\":\"The type of this API response.\",\"default\":\"youtube#guideCategoryListResponse\"" +
            "}}},\"GuideCategorySnippet\":{\"id\":\"GuideCategorySnippet\",\"type\":\"object\",\"descrip" +
            "tion\":\"Basic details about a guide category.\",\"properties\":{\"channelId\":{\"type\":" +
            "\"string\",\"description\":\"Channel publishing the guide category.\",\"default\":\"UCBR8" +
            "-60-B28hp2BmDPdntcQ\"},\"title\":{\"type\":\"string\",\"description\":\"Title of the guide" +
            " category.\"}}},\"PageInfo\":{\"id\":\"PageInfo\",\"type\":\"object\",\"description\":\"Paging" +
            " details for lists of resources, including total number of items available and n" +
            "umber of resources returned in a single page.\",\"properties\":{\"resultsPerPage\":{\"" +
            "type\":\"integer\",\"description\":\"The number of results to display for each page.\"," +
            "\"format\":\"int32\"},\"totalResults\":{\"type\":\"integer\",\"description\":\"The total numb" +
            "er of results.\",\"format\":\"int32\"}}},\"Playlist\":{\"id\":\"Playlist\",\"type\":\"object\"," +
            "\"description\":\"A playlist resource represents a single YouTube playlist.\",\"prope" +
            "rties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the playlist.\"},\"id\":" +
            "{\"type\":\"string\",\"description\":\"The unique id of the playlist.\"},\"kind\":{\"type\":" +
            "\"string\",\"description\":\"The type of this API resource.\",\"default\":\"youtube#playl" +
            "ist\"},\"snippet\":{\"$ref\":\"PlaylistSnippet\",\"description\":\"Basic details about the" +
            " playlist: title, description, thumbnails.\"},\"status\":{\"$ref\":\"PlaylistStatus\",\"" +
            "description\":\"Status of the playlist: only privacy_status for now.\"}}},\"Playlist" +
            "Item\":{\"id\":\"PlaylistItem\",\"type\":\"object\",\"description\":\"A playlistItem resourc" +
            "e refers to another resource, such as a video, that is included in a playlist.\"," +
            "\"properties\":{\"contentDetails\":{\"$ref\":\"PlaylistItemContentDetails\",\"description" +
            "\":\"Content details about the playlist item: start and end clipping time.\"},\"etag" +
            "\":{\"type\":\"string\",\"description\":\"The eTag of the playlist item.\"},\"id\":{\"type\":" +
            "\"string\",\"description\":\"The unique id of the playlist item.\"},\"kind\":{\"type\":\"st" +
            "ring\",\"description\":\"The type of this API resource.\",\"default\":\"youtube#playlist" +
            "Item\"},\"snippet\":{\"$ref\":\"PlaylistItemSnippet\",\"description\":\"Basic details abou" +
            "t the playlist item: title, description, thumbnails.\"}}},\"PlaylistItemContentDet" +
            "ails\":{\"id\":\"PlaylistItemContentDetails\",\"type\":\"object\",\"description\":\"Details " +
            "about the content of a playlist item, such as the video or the video fragment st" +
            "art and end time included in the playlist.\",\"properties\":{\"endAt\":{\"type\":\"strin" +
            "g\",\"description\":\"The time video playback ends.\"},\"note\":{\"type\":\"string\",\"descr" +
            "iption\":\"The user-generated note for this item.\"},\"startAt\":{\"type\":\"string\",\"de" +
            "scription\":\"The time video playback begins.\"},\"videoId\":{\"type\":\"string\",\"descri" +
            "ption\":\"ID of the video.\"}}},\"PlaylistItemListResponse\":{\"id\":\"PlaylistItemListR" +
            "esponse\",\"type\":\"object\",\"description\":\"A paginated list of playlist items retur" +
            "ned as the response to a youtube.playlistItems.list call.\",\"properties\":{\"etag\":" +
            "{\"type\":\"string\",\"description\":\"The eTag of the response.\"},\"items\":{\"type\":\"arr" +
            "ay\",\"description\":\"List of playlist items matching the request criteria.\",\"items" +
            "\":{\"$ref\":\"PlaylistItem\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of th" +
            "is API response.\",\"default\":\"youtube#playlistItemListResponse\"},\"nextPageToken\":" +
            "{\"type\":\"string\",\"description\":\"Token to the next page.\"},\"pageInfo\":{\"$ref\":\"Pa" +
            "geInfo\",\"description\":\"Paging information for the list result.\"},\"prevPageToken\"" +
            ":{\"type\":\"string\",\"description\":\"Token to the previous page.\"}}},\"PlaylistItemSn" +
            "ippet\":{\"id\":\"PlaylistItemSnippet\",\"type\":\"object\",\"description\":\"Basic details " +
            "about an item included in a playlist, including title, description, thumbnails, " +
            "playlist the item is part of and position of the item inside the playlist.\",\"pro" +
            "perties\":{\"channelId\":{\"type\":\"string\",\"description\":\"Channel publishing the pla" +
            "ylist item.\"},\"description\":{\"type\":\"string\",\"description\":\"Description of the p" +
            "laylist item.\"},\"playlistId\":{\"type\":\"string\",\"description\":\"The playlist the it" +
            "em is part of.\",\"annotations\":{\"required\":[\"youtube.playlistItems.insert\"]}},\"po" +
            "sition\":{\"type\":\"integer\",\"description\":\"The position of the item within the pla" +
            "ylist.\",\"format\":\"uint32\"},\"publishedAt\":{\"type\":\"string\",\"description\":\"Date an" +
            "d time the playlist item was published at.\",\"format\":\"date-time\"},\"resourceId\":{" +
            "\"$ref\":\"ResourceId\",\"description\":\"The ID of the resource referenced by the play" +
            "list item.\"},\"thumbnails\":{\"type\":\"object\",\"description\":\"Playlist item thumbnai" +
            "ls.\",\"additionalProperties\":{\"$ref\":\"Thumbnail\",\"description\":\"A map of thumbnai" +
            "ls by their name.\"}},\"title\":{\"type\":\"string\",\"description\":\"Title of the playli" +
            "st item.\"}}},\"PlaylistListResponse\":{\"id\":\"PlaylistListResponse\",\"type\":\"object\"" +
            ",\"description\":\"A paginated list of playlists returned as the response to a yout" +
            "ube.playlists.list call.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"T" +
            "he eTag of the response.\"},\"items\":{\"type\":\"array\",\"description\":\"List of playli" +
            "sts matching the request criteria.\",\"items\":{\"$ref\":\"Playlist\"}},\"kind\":{\"type\":" +
            "\"string\",\"description\":\"The type of this API response.\",\"default\":\"youtube#playl" +
            "istListResponse\"},\"nextPageToken\":{\"type\":\"string\",\"description\":\"Token to the n" +
            "ext page.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\":\"Paging information for " +
            "the list result.\"},\"prevPageToken\":{\"type\":\"string\",\"description\":\"Token to the " +
            "previous page.\"}}},\"PlaylistSnippet\":{\"id\":\"PlaylistSnippet\",\"type\":\"object\",\"de" +
            "scription\":\"Basic details about a playlist, including title, description and thu" +
            "mbnails.\",\"properties\":{\"channelId\":{\"type\":\"string\",\"description\":\"Channel publ" +
            "ishing the playlist.\"},\"description\":{\"type\":\"string\",\"description\":\"Description" +
            " of the playlist.\"},\"publishedAt\":{\"type\":\"string\",\"description\":\"Date and time " +
            "the playlist was published at.\",\"format\":\"date-time\"},\"thumbnails\":{\"type\":\"obje" +
            "ct\",\"description\":\"Playlist thumbnails.\",\"additionalProperties\":{\"$ref\":\"Thumbna" +
            "il\",\"description\":\"A map of thumbnails by their name.\"}},\"title\":{\"type\":\"string" +
            "\",\"description\":\"Title of the playlist.\"}}},\"PlaylistStatus\":{\"id\":\"PlaylistStat" +
            "us\",\"type\":\"object\",\"description\":\"The status details of a playlist describes wh" +
            "ether the playlist is private.\",\"properties\":{\"privacyStatus\":{\"type\":\"string\",\"" +
            "description\":\"Privacy of the playlist.\"}}},\"ResourceId\":{\"id\":\"ResourceId\",\"type" +
            "\":\"object\",\"description\":\"A resource id is a generic reference that points to an" +
            "other YouTube resource.\",\"properties\":{\"channelId\":{\"type\":\"string\",\"description" +
            "\":\"ID of the referred channel. Present only when type is \\\"CHANNEL\\\".\"},\"kind\":{" +
            "\"type\":\"string\",\"description\":\"The kind of the referred resource.\"},\"playlistId\"" +
            ":{\"type\":\"string\",\"description\":\"ID of the referred playlist. Present only when " +
            "type is \\\"PLAYLIST\\\".\"},\"videoId\":{\"type\":\"string\",\"description\":\"ID of the refe" +
            "rred video. Present only when type is \\\"VIDEO\\\".\"}}},\"SearchListResponse\":{\"id\":" +
            "\"SearchListResponse\",\"type\":\"object\",\"description\":\"A paginated list of search r" +
            "esults returned as the response to a youtube.search.list call.\",\"properties\":{\"e" +
            "tag\":{\"type\":\"string\",\"description\":\"The eTag of the response.\"},\"items\":{\"type\"" +
            ":\"array\",\"description\":\"List of results matching the request criteria.\",\"items\":" +
            "{\"$ref\":\"SearchResult\"}},\"kind\":{\"type\":\"string\",\"description\":\"The type of this" +
            " API response.\",\"default\":\"youtube#searchListResponse\"},\"nextPageToken\":{\"type\":" +
            "\"string\",\"description\":\"Token to the next page.\"},\"pageInfo\":{\"$ref\":\"PageInfo\"," +
            "\"description\":\"Paging information for the search result.\"},\"prevPageToken\":{\"typ" +
            "e\":\"string\",\"description\":\"Token to the previous page.\"}}},\"SearchResult\":{\"id\":" +
            "\"SearchResult\",\"type\":\"object\",\"description\":\"A search result contains informati" +
            "on about a YouTube video, channel, or playlist that matches the search parameter" +
            "s specified in an API request.\",\"properties\":{\"etag\":{\"type\":\"string\",\"descripti" +
            "on\":\"The eTag of the search result.\"},\"id\":{\"$ref\":\"ResourceId\",\"description\":\"T" +
            "he id of the resource.\"},\"kind\":{\"type\":\"string\",\"description\":\"The type of this" +
            " API resource.\",\"default\":\"youtube#searchResult\"},\"snippet\":{\"$ref\":\"SearchResul" +
            "tSnippet\",\"description\":\"Basic details about the search result: title, descripti" +
            "on, author.\"}}},\"SearchResultSnippet\":{\"id\":\"SearchResultSnippet\",\"type\":\"object" +
            "\",\"description\":\"Basic details about a search result, including title, descripti" +
            "on and thumbnails of the item referenced by the search result.\",\"properties\":{\"c" +
            "hannelId\":{\"type\":\"string\",\"description\":\"Channel publishing the found resource." +
            "\"},\"description\":{\"type\":\"string\",\"description\":\"Description of the found resour" +
            "ce.\"},\"publishedAt\":{\"type\":\"string\",\"description\":\"Date and time the found reso" +
            "urce was published at.\",\"format\":\"date-time\"},\"thumbnails\":{\"type\":\"object\",\"des" +
            "cription\":\"Thumbnails for the found resource.\",\"additionalProperties\":{\"$ref\":\"T" +
            "humbnail\",\"description\":\"A map of thumbnails by their name.\"}},\"title\":{\"type\":\"" +
            "string\",\"description\":\"Title of the found resource.\"}}},\"Subscription\":{\"id\":\"Su" +
            "bscription\",\"type\":\"object\",\"description\":\"A subscription resource contains info" +
            "rmation about a YouTube user subscription.\",\"properties\":{\"contentDetails\":{\"$re" +
            "f\":\"SubscriptionContentDetails\",\"description\":\"Basic statistics about the subscr" +
            "iption\"},\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the subscription.\"}," +
            "\"id\":{\"type\":\"string\",\"description\":\"The unique id of the subscription.\"},\"kind\"" +
            ":{\"type\":\"string\",\"description\":\"The type of this API resource.\",\"default\":\"yout" +
            "ube#subscription\"},\"snippet\":{\"$ref\":\"SubscriptionSnippet\",\"description\":\"Basic " +
            "details about the subscription\"}}},\"SubscriptionContentDetails\":{\"id\":\"Subscript" +
            "ionContentDetails\",\"type\":\"object\",\"description\":\"Details about the content to w" +
            "itch a subscription refers.\",\"properties\":{\"newItemCount\":{\"type\":\"integer\",\"des" +
            "cription\":\"Number of new items in the subscription since its content was last re" +
            "ad.\",\"format\":\"uint32\"},\"totalItemCount\":{\"type\":\"integer\",\"description\":\"Approx" +
            "imate total number of items the subscription points to.\",\"format\":\"uint32\"}}},\"S" +
            "ubscriptionListResponse\":{\"id\":\"SubscriptionListResponse\",\"type\":\"object\",\"descr" +
            "iption\":\"A paginated list of subscriptions returned as the response to a youtube" +
            ".subscriptions.list call.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"" +
            "The eTag of the response.\"},\"items\":{\"type\":\"array\",\"description\":\"List of subsc" +
            "riptions matching the request criteria.\",\"items\":{\"$ref\":\"Subscription\"}},\"kind\"" +
            ":{\"type\":\"string\",\"description\":\"The type of this API response.\",\"default\":\"yout" +
            "ube#subscriptionListResponse\"},\"nextPageToken\":{\"type\":\"string\",\"description\":\"T" +
            "oken to the next page.\"},\"pageInfo\":{\"$ref\":\"PageInfo\",\"description\":\"Paging inf" +
            "ormation for the list result.\"},\"prevPageToken\":{\"type\":\"string\",\"description\":\"" +
            "Token to the previous page.\"}}},\"SubscriptionSnippet\":{\"id\":\"SubscriptionSnippet" +
            "\",\"type\":\"object\",\"description\":\"Basic details about a subscription, including t" +
            "itle, description and thumbnails of the subscribed item.\",\"properties\":{\"channel" +
            "Id\":{\"type\":\"string\",\"description\":\"Channel publishing the subscription.\"},\"desc" +
            "ription\":{\"type\":\"string\",\"description\":\"Description of the subscription.\"},\"pub" +
            "lishedAt\":{\"type\":\"string\",\"description\":\"Date and time the subscription was pub" +
            "lished at.\",\"format\":\"date-time\"},\"resourceId\":{\"$ref\":\"ResourceId\",\"description" +
            "\":\"The resource subscribed to.\"},\"thumbnails\":{\"type\":\"object\",\"description\":\"Su" +
            "bscription thumbnails.\",\"additionalProperties\":{\"$ref\":\"Thumbnail\",\"description\"" +
            ":\"A map of thumbnails by their name.\"}},\"title\":{\"type\":\"string\",\"description\":\"" +
            "Title of the subscription.\"}}},\"Thumbnail\":{\"id\":\"Thumbnail\",\"type\":\"object\",\"de" +
            "scription\":\"A thumbnail is an image representing a YouTube resource.\",\"propertie" +
            "s\":{\"url\":{\"type\":\"string\",\"description\":\"The URL for the thumbnail.\"}}},\"Video\"" +
            ":{\"id\":\"Video\",\"type\":\"object\",\"description\":\"A video resource represents a sing" +
            "le YouTube video.\",\"properties\":{\"contentDetails\":{\"$ref\":\"VideoContentDetails\"," +
            "\"description\":\"Information about the video content, media file.\"},\"etag\":{\"type\"" +
            ":\"string\",\"description\":\"The eTag of the video.\"},\"id\":{\"type\":\"string\",\"descrip" +
            "tion\":\"The unique id of the video.\"},\"kind\":{\"type\":\"string\",\"description\":\"The " +
            "type of this API resource.\",\"default\":\"youtube#video\"},\"player\":{\"$ref\":\"VideoPl" +
            "ayer\",\"description\":\"Information used to play the video.\"},\"snippet\":{\"$ref\":\"Vi" +
            "deoSnippet\",\"description\":\"Basic details about the video: title, description, th" +
            "umbnails.\"},\"statistics\":{\"$ref\":\"VideoStatistics\",\"description\":\"Statistics abo" +
            "ut the video: number of views, ratings.\"},\"status\":{\"$ref\":\"VideoStatus\",\"descri" +
            "ption\":\"Status of the video upload, privacy status.\"},\"topicDetails\":{\"$ref\":\"Vi" +
            "deoTopicDetails\",\"description\":\"Topics related to the video\"}}},\"VideoCategory\":" +
            "{\"id\":\"VideoCategory\",\"type\":\"object\",\"description\":\"A videoCategory resource id" +
            "entifies a category that has been or could be associated with uploaded videos.\"," +
            "\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the video.\"},\"i" +
            "d\":{\"type\":\"string\",\"description\":\"The unique id of the video category.\"},\"kind\"" +
            ":{\"type\":\"string\",\"description\":\"The type of this API resource.\",\"default\":\"yout" +
            "ube#videoCategory\"},\"snippet\":{\"$ref\":\"VideoCategorySnippet\",\"description\":\"Basi" +
            "c details about the video category.\"}}},\"VideoCategoryListResponse\":{\"id\":\"Video" +
            "CategoryListResponse\",\"type\":\"object\",\"description\":\"A paginated list of video c" +
            "ategories returned as the response to a youtube.videoCategory.list call.\",\"prope" +
            "rties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the response.\"},\"item" +
            "s\":{\"type\":\"array\",\"description\":\"List of video categories matching the request " +
            "criteria.\",\"items\":{\"$ref\":\"VideoCategory\"}},\"kind\":{\"type\":\"string\",\"descriptio" +
            "n\":\"The type of this API response.\",\"default\":\"youtube#videoCategoryListResponse" +
            "\"}}},\"VideoCategorySnippet\":{\"id\":\"VideoCategorySnippet\",\"type\":\"object\",\"descri" +
            "ption\":\"Basic details about a video category, such as its localized title.\",\"pro" +
            "perties\":{\"channelId\":{\"type\":\"string\",\"description\":\"Channel publishing the vid" +
            "eo category.\",\"default\":\"UCBR8-60-B28hp2BmDPdntcQ\"},\"title\":{\"type\":\"string\",\"de" +
            "scription\":\"Title of the video category.\"}}},\"VideoContentDetails\":{\"id\":\"VideoC" +
            "ontentDetails\",\"type\":\"object\",\"description\":\"Details about the media content of" +
            " a YouTube video.\",\"properties\":{\"duration\":{\"type\":\"string\",\"description\":\"Dura" +
            "tion of the video.\"},\"regionRestriction\":{\"type\":\"object\",\"description\":\"Region " +
            "restriction of the video.\",\"properties\":{\"allowed\":{\"type\":\"array\",\"description\"" +
            ":\"List of allowed region codes.\",\"items\":{\"type\":\"string\"}},\"blocked\":{\"type\":\"a" +
            "rray\",\"description\":\"List of blocked region codes.\",\"items\":{\"type\":\"string\"}}}}" +
            "}},\"VideoListResponse\":{\"id\":\"VideoListResponse\",\"type\":\"object\",\"description\":\"" +
            "A paginated list of videos returned as the response to a youtube.videos.list cal" +
            "l.\",\"properties\":{\"etag\":{\"type\":\"string\",\"description\":\"The eTag of the respons" +
            "e.\"},\"items\":{\"type\":\"array\",\"description\":\"List of videos matching the request " +
            "criteria.\",\"items\":{\"$ref\":\"Video\"}},\"kind\":{\"type\":\"string\",\"description\":\"The " +
            "type of this API response.\",\"default\":\"youtube#videoListResponse\"}}},\"VideoPlaye" +
            "r\":{\"id\":\"VideoPlayer\",\"type\":\"object\",\"description\":\"Player to be used for a vi" +
            "deo playback.\",\"properties\":{\"embedHtml\":{\"type\":\"string\",\"description\":\"Iframe " +
            "embed for the video.\"}}},\"VideoSnippet\":{\"id\":\"VideoSnippet\",\"type\":\"object\",\"de" +
            "scription\":\"Basic details about a video, including title, description, uploader," +
            " thumbnails and category.\",\"properties\":{\"categoryId\":{\"type\":\"string\",\"descript" +
            "ion\":\"Video category the video belongs to.\"},\"channelId\":{\"type\":\"string\",\"descr" +
            "iption\":\"Channel publishing the video.\"},\"description\":{\"type\":\"string\",\"descrip" +
            "tion\":\"Description of the video.\"},\"publishedAt\":{\"type\":\"string\",\"description\":" +
            "\"Date and time the video was published at.\",\"format\":\"date-time\"},\"tags\":{\"type\"" +
            ":\"array\",\"description\":\"Textual tags associated with the video.\",\"items\":{\"type\"" +
            ":\"string\"}},\"thumbnails\":{\"type\":\"object\",\"description\":\"Video thumbnails.\",\"add" +
            "itionalProperties\":{\"$ref\":\"Thumbnail\",\"description\":\"A map of thumbnails by the" +
            "ir name.\"}},\"title\":{\"type\":\"string\",\"description\":\"Title of the video.\"}}},\"Vid" +
            "eoStatistics\":{\"id\":\"VideoStatistics\",\"type\":\"object\",\"description\":\"Statistics " +
            "about the video, such as the number of times the video was viewed or liked.\",\"pr" +
            "operties\":{\"commentCount\":{\"type\":\"string\",\"description\":\"Number of comments for" +
            " this video.\",\"format\":\"uint64\"},\"dislikeCount\":{\"type\":\"string\",\"description\":\"" +
            "Number of times the video was disliked.\",\"format\":\"uint64\"},\"favoriteCount\":{\"ty" +
            "pe\":\"string\",\"description\":\"Number of times the video was added to a user\'s favo" +
            "rites list.\",\"format\":\"uint64\"},\"likeCount\":{\"type\":\"string\",\"description\":\"Numb" +
            "er of times the video was liked.\",\"format\":\"uint64\"},\"viewCount\":{\"type\":\"string" +
            "\",\"description\":\"Number of times the video was viewed.\",\"format\":\"uint64\"}}},\"Vi" +
            "deoStatus\":{\"id\":\"VideoStatus\",\"type\":\"object\",\"description\":\"The status of a vi" +
            "deo details the video\'s upload status and privacy status.\",\"properties\":{\"failur" +
            "eReason\":{\"type\":\"string\",\"description\":\"Present only if the uploadStatus indica" +
            "tes a failed upload.\"},\"privacyStatus\":{\"type\":\"string\",\"description\":\"Privacy o" +
            "f the video.\"},\"rejectionReason\":{\"type\":\"string\",\"description\":\"Present only if" +
            " the uploadStatus indicates a rejected upload.\"},\"uploadStatus\":{\"type\":\"string\"" +
            ",\"description\":\"Status of the video upload.\"}}},\"VideoTopicDetails\":{\"id\":\"Video" +
            "TopicDetails\",\"type\":\"object\",\"description\":\"Freebase topic information related " +
            "to the video.\",\"properties\":{\"topicIds\":{\"type\":\"array\",\"description\":\"List of t" +
            "opic ids for this video *\",\"items\":{\"type\":\"string\"}}}}},\"resources\":{\"activitie" +
            "s\":{\"methods\":{\"insert\":{\"id\":\"youtube.activities.insert\",\"path\":\"activities\",\"h" +
            "ttpMethod\":\"POST\",\"description\":\"Post a channel bulletin.\",\"parameters\":{\"onBeha" +
            "lfOfContentOwner\":{\"type\":\"string\",\"description\":\"The authenticated user acts on" +
            " behalf of this content owner.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"des" +
            "cription\":\"One or more parts to return on the current request.\",\"required\":true," +
            "\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"request\":{\"$ref\":\"Activity\"},\"re" +
            "sponse\":{\"$ref\":\"Activity\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\"]" +
            "},\"list\":{\"id\":\"youtube.activities.list\",\"path\":\"activities\",\"httpMethod\":\"GET\"," +
            "\"description\":\"Browse the YouTube channel activity collection.\",\"parameters\":{\"c" +
            "hannelId\":{\"type\":\"string\",\"description\":\"YouTube ID of the channel.\",\"location\"" +
            ":\"query\"},\"home\":{\"type\":\"string\",\"description\":\"Flag indicating to return user\'" +
            "s homepage feed.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"descriptio" +
            "n\":\"Maximum number of results to return\",\"default\":\"5\",\"format\":\"uint32\",\"minimu" +
            "m\":\"0\",\"maximum\":\"50\",\"location\":\"query\"},\"mine\":{\"type\":\"string\",\"description\":" +
            "\"Flag indicating to return user\'s activities.\",\"location\":\"query\"},\"onBehalfOfCo" +
            "ntentOwner\":{\"type\":\"string\",\"description\":\"The authenticated user acts on behal" +
            "f of this content owner.\",\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"desc" +
            "ription\":\"Token for the page selection.\",\"location\":\"query\"},\"part\":{\"type\":\"str" +
            "ing\",\"description\":\"Activity parts to include in the returned response. Valid va" +
            "lues are: id, snippet and contentDetails.\",\"required\":true,\"location\":\"query\"},\"" +
            "publishedAfter\":{\"type\":\"string\",\"description\":\"Only return activities published" +
            " after given date (inclusive).\",\"format\":\"date-time\",\"location\":\"query\"},\"publis" +
            "hedBefore\":{\"type\":\"string\",\"description\":\"Only return activities published befo" +
            "re given date (exclusive).\",\"format\":\"date-time\",\"location\":\"query\"}},\"parameter" +
            "Order\":[\"part\"],\"response\":{\"$ref\":\"ActivityListResponse\"},\"scopes\":[\"https://ww" +
            "w.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtube.readonly" +
            "\"]}}},\"channels\":{\"methods\":{\"list\":{\"id\":\"youtube.channels.list\",\"path\":\"channe" +
            "ls\",\"httpMethod\":\"GET\",\"description\":\"Browse the YouTube channel collection. Eit" +
            "her the \'id\' or \'mine\' parameter must be set.\",\"parameters\":{\"categoryId\":{\"type" +
            "\":\"string\",\"description\":\"Filter to retrieve the channels within the given categ" +
            "ory ID.\",\"location\":\"query\"},\"id\":{\"type\":\"string\",\"description\":\"YouTube IDs of" +
            " the channels to be returned.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer" +
            "\",\"description\":\"Maximum number of results to return\",\"default\":\"5\",\"format\":\"ui" +
            "nt32\",\"minimum\":\"0\",\"maximum\":\"50\",\"location\":\"query\"},\"mine\":{\"type\":\"string\",\"" +
            "description\":\"Filter to only channels owned by authenticated user.\",\"location\":\"" +
            "query\"},\"mySubscribers\":{\"type\":\"string\",\"description\":\"Filter to channels that " +
            "subscribed to the channel of the authenticated user.\",\"location\":\"query\"},\"onBeh" +
            "alfOfContentOwner\":{\"type\":\"string\",\"description\":\"The authenticated user acts o" +
            "n behalf of this content owner.\",\"location\":\"query\"},\"pageToken\":{\"type\":\"string" +
            "\",\"description\":\"Token for the page selection.\",\"location\":\"query\"},\"part\":{\"typ" +
            "e\":\"string\",\"description\":\"Channel parts to include in the returned response. Va" +
            "lid values are: id, snippet, contentDetails and topicDetails.\",\"required\":true,\"" +
            "location\":\"query\"}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\":\"ChannelListRes" +
            "ponse\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googlea" +
            "pis.com/auth/youtube.readonly\",\"https://www.googleapis.com/auth/youtubepartner\"]" +
            "}}},\"guideCategories\":{\"methods\":{\"list\":{\"id\":\"youtube.guideCategories.list\",\"p" +
            "ath\":\"guideCategories\",\"httpMethod\":\"GET\",\"description\":\"Browse the YouTube guid" +
            "e category collection.\",\"parameters\":{\"hl\":{\"type\":\"string\",\"description\":\"Langu" +
            "age for the returned channelCategories.\",\"default\":\"en-US\",\"location\":\"query\"},\"" +
            "id\":{\"type\":\"string\",\"description\":\"Comma-separated YouTube IDs of the channelCa" +
            "tegories to be returned.\",\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"" +
            "string\",\"description\":\"The authenticated user acts on behalf of this content own" +
            "er.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"Guide category p" +
            "arts to include in the returned response. Valid values are: id and snippet.\",\"re" +
            "quired\":true,\"location\":\"query\"},\"regionCode\":{\"type\":\"string\",\"description\":\"Re" +
            "turn the channelCategories in the given region code.\",\"location\":\"query\"}},\"para" +
            "meterOrder\":[\"part\"],\"response\":{\"$ref\":\"GuideCategoryListResponse\"},\"scopes\":[\"" +
            "https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtub" +
            "e.readonly\",\"https://www.googleapis.com/auth/youtubepartner\"]}}},\"playlistItems\"" +
            ":{\"methods\":{\"delete\":{\"id\":\"youtube.playlistItems.delete\",\"path\":\"playlistItems" +
            "\",\"httpMethod\":\"DELETE\",\"description\":\"Deletes playlist items by IDs.\",\"paramete" +
            "rs\":{\"id\":{\"type\":\"string\",\"description\":\"YouTube IDs of the playlist items to b" +
            "e deleted.\",\"required\":true,\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\"" +
            ":\"string\",\"description\":\"The authenticated user acts on behalf of this content o" +
            "wner.\",\"location\":\"query\"}},\"parameterOrder\":[\"id\"],\"scopes\":[\"https://www.googl" +
            "eapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"inse" +
            "rt\":{\"id\":\"youtube.playlistItems.insert\",\"path\":\"playlistItems\",\"httpMethod\":\"PO" +
            "ST\",\"description\":\"Insert a resource into a playlist.\",\"parameters\":{\"onBehalfOf" +
            "ContentOwner\":{\"type\":\"string\",\"description\":\"The authenticated user acts on beh" +
            "alf of this content owner.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"descrip" +
            "tion\":\"One or more parts to return on the current request.\",\"required\":true,\"loc" +
            "ation\":\"query\"}},\"parameterOrder\":[\"part\"],\"request\":{\"$ref\":\"PlaylistItem\"},\"re" +
            "sponse\":{\"$ref\":\"PlaylistItem\"},\"scopes\":[\"https://www.googleapis.com/auth/youtu" +
            "be\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"list\":{\"id\":\"youtube.pla" +
            "ylistItems.list\",\"path\":\"playlistItems\",\"httpMethod\":\"GET\",\"description\":\"Browse" +
            " the YouTube playlist collection.\",\"parameters\":{\"id\":{\"type\":\"string\",\"descript" +
            "ion\":\"YouTube IDs of the playlist items to be returned.\",\"location\":\"query\"},\"ma" +
            "xResults\":{\"type\":\"integer\",\"description\":\"Maximum number of results to return\"," +
            "\"default\":\"5\",\"format\":\"uint32\",\"minimum\":\"0\",\"maximum\":\"50\",\"location\":\"query\"}" +
            ",\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The authenticated user" +
            " acts on behalf of this content owner.\",\"location\":\"query\"},\"pageToken\":{\"type\":" +
            "\"string\",\"description\":\"Token for the page selection.\",\"location\":\"query\"},\"part" +
            "\":{\"type\":\"string\",\"description\":\"Playlist item parts to include in the returned" +
            " response. Valid values are: id, snippet and contentDetails.\",\"required\":true,\"l" +
            "ocation\":\"query\"},\"playlistId\":{\"type\":\"string\",\"description\":\"Retrieves playlis" +
            "t items from the given playlist id.\",\"location\":\"query\"}},\"parameterOrder\":[\"par" +
            "t\"],\"response\":{\"$ref\":\"PlaylistItemListResponse\"},\"scopes\":[\"https://www.google" +
            "apis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtube.readonly\",\"https" +
            "://www.googleapis.com/auth/youtubepartner\"]},\"update\":{\"id\":\"youtube.playlistIte" +
            "ms.update\",\"path\":\"playlistItems\",\"httpMethod\":\"PUT\",\"description\":\"Update a pla" +
            "ylist item.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"descriptio" +
            "n\":\"The authenticated user acts on behalf of this content owner.\",\"location\":\"qu" +
            "ery\"},\"part\":{\"type\":\"string\",\"description\":\"One or more parts to return on the " +
            "current request.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[\"part\"]" +
            ",\"request\":{\"$ref\":\"PlaylistItem\"},\"response\":{\"$ref\":\"PlaylistItem\"},\"scopes\":[" +
            "\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtu" +
            "bepartner\"]}}},\"playlists\":{\"methods\":{\"delete\":{\"id\":\"youtube.playlists.delete\"" +
            ",\"path\":\"playlists\",\"httpMethod\":\"DELETE\",\"description\":\"Deletes playlists by ID" +
            "s.\",\"parameters\":{\"id\":{\"type\":\"string\",\"description\":\"YouTube IDs of the playli" +
            "sts to be deleted.\",\"required\":true,\"location\":\"query\"},\"onBehalfOfContentOwner\"" +
            ":{\"type\":\"string\",\"description\":\"The authenticated user acts on behalf of this c" +
            "ontent owner.\",\"location\":\"query\"}},\"parameterOrder\":[\"id\"],\"scopes\":[\"https://w" +
            "ww.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"" +
            "]},\"insert\":{\"id\":\"youtube.playlists.insert\",\"path\":\"playlists\",\"httpMethod\":\"PO" +
            "ST\",\"description\":\"Create a playlist.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"" +
            "type\":\"string\",\"description\":\"The authenticated user acts on behalf of this cont" +
            "ent owner.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"One or mo" +
            "re parts to return on the current request.\",\"required\":true,\"location\":\"query\"}}" +
            ",\"parameterOrder\":[\"part\"],\"request\":{\"$ref\":\"Playlist\"},\"response\":{\"$ref\":\"Pla" +
            "ylist\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googlea" +
            "pis.com/auth/youtubepartner\"]},\"list\":{\"id\":\"youtube.playlists.list\",\"path\":\"pla" +
            "ylists\",\"httpMethod\":\"GET\",\"description\":\"Browse the YouTube playlist collection" +
            ".\",\"parameters\":{\"channelId\":{\"type\":\"string\",\"description\":\"Flag indicating onl" +
            "y return the playlists of the specified channel ID.\",\"location\":\"query\"},\"id\":{\"" +
            "type\":\"string\",\"description\":\"Comma-separated YouTube IDs of the playlists to be" +
            " returned.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"integer\",\"description\":\"Ma" +
            "ximum number of results to return\",\"default\":\"5\",\"format\":\"uint32\",\"minimum\":\"0\"" +
            ",\"maximum\":\"50\",\"location\":\"query\"},\"mine\":{\"type\":\"string\",\"description\":\"Flag " +
            "indicating only return the playlists of the authenticated user.\",\"location\":\"que" +
            "ry\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The authenticated " +
            "user acts on behalf of this content owner.\",\"location\":\"query\"},\"pageToken\":{\"ty" +
            "pe\":\"string\",\"description\":\"Token for the page selection.\",\"location\":\"query\"},\"" +
            "part\":{\"type\":\"string\",\"description\":\"Playlist parts to include in the returned " +
            "response. Valid values are: id, snippet and status.\",\"required\":true,\"location\":" +
            "\"query\"}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\":\"PlaylistListResponse\"},\"" +
            "scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/a" +
            "uth/youtube.readonly\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"update" +
            "\":{\"id\":\"youtube.playlists.update\",\"path\":\"playlists\",\"httpMethod\":\"PUT\",\"descri" +
            "ption\":\"Update a playlist.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"stri" +
            "ng\",\"description\":\"The authenticated user acts on behalf of this content owner.\"" +
            ",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"One or more parts to" +
            " return on the current request.\",\"required\":true,\"location\":\"query\"}},\"parameter" +
            "Order\":[\"part\"],\"request\":{\"$ref\":\"Playlist\"},\"response\":{\"$ref\":\"Playlist\"},\"sc" +
            "opes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/aut" +
            "h/youtubepartner\"]}}},\"search\":{\"methods\":{\"list\":{\"id\":\"youtube.search.list\",\"p" +
            "ath\":\"search\",\"httpMethod\":\"GET\",\"description\":\"Universal search for youtube.\",\"" +
            "parameters\":{\"maxResults\":{\"type\":\"integer\",\"description\":\"Maximum number of sea" +
            "rch results to return per page.\",\"default\":\"5\",\"format\":\"uint32\",\"minimum\":\"0\",\"" +
            "maximum\":\"50\",\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"des" +
            "cription\":\"The authenticated user acts on behalf of this content owner.\",\"locati" +
            "on\":\"query\"},\"order\":{\"type\":\"string\",\"description\":\"Sort order.\",\"default\":\"SEA" +
            "RCH_SORT_RELEVANCE\",\"enum\":[\"date\",\"rating\",\"relevance\",\"view_count\"],\"enumDescr" +
            "iptions\":[\"Sort according to the date.\",\"Sort according to the rating.\",\"Sort ac" +
            "cording to the relevance.\",\"Sort according to the view count.\"],\"location\":\"quer" +
            "y\"},\"pageToken\":{\"type\":\"string\",\"description\":\"Token for the page selection.\",\"" +
            "location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"Search result parts to" +
            " include in the returned response. Valid values are: id and snippet.\",\"required\"" +
            ":true,\"location\":\"query\"},\"published\":{\"type\":\"string\",\"description\":\"Only searc" +
            "h for resources uploaded at a specific pediod\",\"enum\":[\"any\",\"thisMonth\",\"thisWe" +
            "ek\",\"today\"],\"enumDescriptions\":[\"No filter on the release date\",\"Videos uploade" +
            "d this month\",\"Videos uploaded this week\",\"Videos uploaded today\"],\"location\":\"q" +
            "uery\"},\"q\":{\"type\":\"string\",\"description\":\"Query to search in Youtube.\",\"locatio" +
            "n\":\"query\"},\"relatedToVideo\":{\"type\":\"string\",\"description\":\"Search for resource" +
            "s related to this video. Need to be used with type set to \'video\'\",\"location\":\"q" +
            "uery\"},\"topicId\":{\"type\":\"string\",\"description\":\"Only search for resources with " +
            "the specified topic\",\"location\":\"query\"},\"type\":{\"type\":\"string\",\"description\":\"" +
            "Type of resource to search.\",\"default\":\"video,channel,playlist\",\"location\":\"quer" +
            "y\"},\"videoCaption\":{\"type\":\"string\",\"description\":\"Add a filter on the the prese" +
            "nce of captions on the videos.\",\"enum\":[\"any\",\"closedCaption\",\"none\"],\"enumDescr" +
            "iptions\":[\"No filter on the captions.\",\"Videos with closed captions.\",\"Videos wi" +
            "thout captions.\"],\"location\":\"query\"},\"videoDefinition\":{\"type\":\"string\",\"descri" +
            "ption\":\"Add a filter for the definition of the videos.\",\"enum\":[\"any\",\"high\",\"st" +
            "andard\"],\"enumDescriptions\":[\"No filter on the definition.\",\"Videos in high defi" +
            "nition.\",\"Videos in standard definition.\"],\"location\":\"query\"},\"videoDimension\":" +
            "{\"type\":\"string\",\"description\":\"Add a filter for the number of dimensions in the" +
            " videos.\",\"enum\":[\"2d\",\"3d\",\"any\"],\"enumDescriptions\":[\"Videos in two dimensions" +
            ".\",\"Videos in three dimensions.\",\"No filter on the dimension.\"],\"location\":\"quer" +
            "y\"},\"videoDuration\":{\"type\":\"string\",\"description\":\"Add a filter on the duration" +
            " of the videos.\",\"enum\":[\"any\",\"long\",\"medium\",\"short\"],\"enumDescriptions\":[\"No " +
            "filter on the duration.\",\"Videos with a duration longer than 20 minutes.\",\"Video" +
            "s with a duration between 4 and 20 minutes.\",\"Videos with a duration under 4 min" +
            "utes.\"],\"location\":\"query\"},\"videoLicense\":{\"type\":\"string\",\"description\":\"Add a" +
            " filter on the licensing of the videos.\",\"enum\":[\"any\",\"creativeCommon\",\"youtube" +
            "\"],\"enumDescriptions\":[\"No filter on the license.\",\"Videos under the Creative Co" +
            "mmon license.\",\"Videos under the YouTube license.\"],\"location\":\"query\"}},\"parame" +
            "terOrder\":[\"part\"],\"response\":{\"$ref\":\"SearchListResponse\"},\"scopes\":[\"https://w" +
            "ww.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtube.readonl" +
            "y\",\"https://www.googleapis.com/auth/youtubepartner\"]}}},\"subscriptions\":{\"method" +
            "s\":{\"delete\":{\"id\":\"youtube.subscriptions.delete\",\"path\":\"subscriptions\",\"httpMe" +
            "thod\":\"DELETE\",\"description\":\"Deletes subscriptions by IDs.\",\"parameters\":{\"id\":" +
            "{\"type\":\"string\",\"description\":\"YouTube IDs of the subscription to be deleted.\"," +
            "\"required\":true,\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"d" +
            "escription\":\"The authenticated user acts on behalf of this content owner.\",\"loca" +
            "tion\":\"query\"}},\"parameterOrder\":[\"id\"],\"scopes\":[\"https://www.googleapis.com/au" +
            "th/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"insert\":{\"id\":\"y" +
            "outube.subscriptions.insert\",\"path\":\"subscriptions\",\"httpMethod\":\"POST\",\"descrip" +
            "tion\":\"Insert a subscription.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"s" +
            "tring\",\"description\":\"The authenticated user acts on behalf of this content owne" +
            "r.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"One or more parts" +
            " to return on the current request.\",\"required\":true,\"location\":\"query\"}},\"parame" +
            "terOrder\":[\"part\"],\"request\":{\"$ref\":\"Subscription\"},\"response\":{\"$ref\":\"Subscri" +
            "ption\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googlea" +
            "pis.com/auth/youtubepartner\"]},\"list\":{\"id\":\"youtube.subscriptions.list\",\"path\":" +
            "\"subscriptions\",\"httpMethod\":\"GET\",\"description\":\"Browses the subscriptions coll" +
            "ection.\",\"parameters\":{\"channelId\":{\"type\":\"string\",\"description\":\"Only return s" +
            "ubscriptions to given channelId.\",\"location\":\"query\"},\"forChannelId\":{\"type\":\"st" +
            "ring\",\"description\":\"Comma separated list of channel IDs to return subscriptions" +
            " for.\",\"location\":\"query\"},\"id\":{\"type\":\"string\",\"description\":\"YouTube IDs of t" +
            "he subscriptions to be returned.\",\"location\":\"query\"},\"maxResults\":{\"type\":\"inte" +
            "ger\",\"description\":\"Maximum number of search results to return per page.\",\"defau" +
            "lt\":\"5\",\"format\":\"uint32\",\"minimum\":\"0\",\"maximum\":\"50\",\"location\":\"query\"},\"mine" +
            "\":{\"type\":\"string\",\"description\":\"Flag indicating only return the subscriptions " +
            "of the authenticated user.\",\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\"" +
            ":\"string\",\"description\":\"The authenticated user acts on behalf of this content o" +
            "wner.\",\"location\":\"query\"},\"order\":{\"type\":\"string\",\"description\":\"Sort order.\"," +
            "\"default\":\"SUBSCRIPTION_ORDER_RELEVANCE\",\"enum\":[\"alphabetical\",\"relevance\",\"unr" +
            "ead\"],\"enumDescriptions\":[\"Sort alphabetically\",\"Sort by relevance.\",\"Sort by or" +
            "der of activity.\"],\"location\":\"query\"},\"pageToken\":{\"type\":\"string\",\"description" +
            "\":\"Token for the page selection.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"d" +
            "escription\":\"Subscription parts to include in the returned response. Valid value" +
            "s are: id, snippet and contentDetails.\",\"required\":true,\"location\":\"query\"}},\"pa" +
            "rameterOrder\":[\"part\"],\"response\":{\"$ref\":\"SubscriptionListResponse\"},\"scopes\":[" +
            "\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtu" +
            "bepartner\"]}}},\"videoCategories\":{\"methods\":{\"list\":{\"id\":\"youtube.videoCategori" +
            "es.list\",\"path\":\"videoCategories\",\"httpMethod\":\"GET\",\"description\":\"Browse list " +
            "of video categories.\",\"parameters\":{\"hl\":{\"type\":\"string\",\"description\":\"Languag" +
            "e used for the title of the categories.\",\"default\":\"en_US\",\"location\":\"query\"},\"" +
            "id\":{\"type\":\"string\",\"description\":\"IDs of the categories to be returned.\",\"loca" +
            "tion\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"string\",\"description\":\"The auth" +
            "enticated user acts on behalf of this content owner.\",\"location\":\"query\"},\"part\"" +
            ":{\"type\":\"string\",\"description\":\"Video category parts to include in the returned" +
            " response. Valid values are: id and snippet.\",\"required\":true,\"location\":\"query\"" +
            "},\"regionCode\":{\"type\":\"string\",\"description\":\"Return all the categories in this" +
            " region.\",\"location\":\"query\"}},\"parameterOrder\":[\"part\"],\"response\":{\"$ref\":\"Vid" +
            "eoCategoryListResponse\"},\"scopes\":[\"https://www.googleapis.com/auth/youtube\",\"ht" +
            "tps://www.googleapis.com/auth/youtube.readonly\",\"https://www.googleapis.com/auth" +
            "/youtubepartner\"]}}},\"videos\":{\"methods\":{\"delete\":{\"id\":\"youtube.videos.delete\"" +
            ",\"path\":\"videos\",\"httpMethod\":\"DELETE\",\"description\":\"Delete a YouTube video.\",\"" +
            "parameters\":{\"id\":{\"type\":\"string\",\"description\":\"YouTube ID of the video to be " +
            "deleted.\",\"required\":true,\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"type\":\"" +
            "string\",\"description\":\"The authenticated user acts on behalf of this content own" +
            "er.\",\"location\":\"query\"}},\"parameterOrder\":[\"id\"],\"scopes\":[\"https://www.googlea" +
            "pis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"insert" +
            "\":{\"id\":\"youtube.videos.insert\",\"path\":\"videos\",\"httpMethod\":\"POST\",\"description" +
            "\":\"Upload a video to YouTube.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"s" +
            "tring\",\"description\":\"The authenticated user acts on behalf of this content owne" +
            "r.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"One or more parts" +
            " to return on the current request.\",\"required\":true,\"location\":\"query\"}},\"parame" +
            "terOrder\":[\"part\"],\"request\":{\"$ref\":\"Video\"},\"response\":{\"$ref\":\"Video\"},\"scope" +
            "s\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/y" +
            "outube.upload\"],\"supportsMediaUpload\":true,\"mediaUpload\":{\"accept\":[\"application" +
            "/octet-stream\",\"video/*\"],\"maxSize\":\"64GB\",\"protocols\":{\"simple\":{\"multipart\":tr" +
            "ue,\"path\":\"/upload/youtube/v3/videos\"},\"resumable\":{\"multipart\":true,\"path\":\"/re" +
            "sumable/upload/youtube/v3/videos\"}}}},\"list\":{\"id\":\"youtube.videos.list\",\"path\":" +
            "\"videos\",\"httpMethod\":\"GET\",\"description\":\"Browse the YouTube video collection.\"" +
            ",\"parameters\":{\"id\":{\"type\":\"string\",\"description\":\"YouTube IDs of the videos to" +
            " be returned.\",\"required\":true,\"location\":\"query\"},\"onBehalfOfContentOwner\":{\"ty" +
            "pe\":\"string\",\"description\":\"The authenticated user acts on behalf of this conten" +
            "t owner.\",\"location\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"Video parts" +
            " to include in the returned response. Valid values are: id, snippet, contentDeta" +
            "ils, player, statistics, status and topicDetails.\",\"required\":true,\"location\":\"q" +
            "uery\"}},\"parameterOrder\":[\"id\",\"part\"],\"response\":{\"$ref\":\"VideoListResponse\"},\"" +
            "scopes\":[\"https://www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/a" +
            "uth/youtube.readonly\",\"https://www.googleapis.com/auth/youtubepartner\"]},\"update" +
            "\":{\"id\":\"youtube.videos.update\",\"path\":\"videos\",\"httpMethod\":\"PUT\",\"description\"" +
            ":\"Update a video.\",\"parameters\":{\"onBehalfOfContentOwner\":{\"type\":\"string\",\"desc" +
            "ription\":\"The authenticated user acts on behalf of this content owner.\",\"locatio" +
            "n\":\"query\"},\"part\":{\"type\":\"string\",\"description\":\"One or more parts to return o" +
            "n the current request.\",\"required\":true,\"location\":\"query\"}},\"parameterOrder\":[\"" +
            "part\"],\"request\":{\"$ref\":\"Video\"},\"response\":{\"$ref\":\"Video\"},\"scopes\":[\"https:/" +
            "/www.googleapis.com/auth/youtube\",\"https://www.googleapis.com/auth/youtubepartne" +
            "r\"]}}}}}";
        
        public const string Version = "v3";
        
        public static Google.Apis.Discovery.DiscoveryVersion DiscoveryVersionUsed = Google.Apis.Discovery.DiscoveryVersion.Version_1_0;
        
        private string _Key;
        
        protected YoutubeService(Google.Apis.Discovery.IService _service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this._service = _service;
            this._authenticator = _authenticator;
            this._activities = new ActivitiesResource(this, _authenticator);
            this._channels = new ChannelsResource(this, _authenticator);
            this._guideCategories = new GuideCategoriesResource(this, _authenticator);
            this._playlistItems = new PlaylistItemsResource(this, _authenticator);
            this._playlists = new PlaylistsResource(this, _authenticator);
            this._search = new SearchResource(this, _authenticator);
            this._subscriptions = new SubscriptionsResource(this, _authenticator);
            this._videoCategories = new VideoCategoriesResource(this, _authenticator);
            this._videos = new VideosResource(this, _authenticator);
        }
        
        public YoutubeService() : 
                this(Google.Apis.Authentication.NullAuthenticator.Instance) {
        }
        
        public YoutubeService(Google.Apis.Authentication.IAuthenticator _authenticator) : 
                this(new Google.Apis.Discovery.DiscoveryService(new Google.Apis.Discovery.StringDiscoveryDevice(DiscoveryDocument)).GetService(YoutubeService.DiscoveryVersionUsed, new Google.Apis.Discovery.FactoryParameters(new System.Uri("https://www.googleapis.com/youtube/v3/"))), _authenticator) {
        }
        
        public Google.Apis.Authentication.IAuthenticator Authenticator {
            get {
                return this._authenticator;
            }
        }
        
        public virtual string Name {
            get {
                return "youtube";
            }
        }
        
        public virtual string BaseUri {
            get {
                return "https://www.googleapis.com/youtube/v3/";
            }
        }
        
        /// <summary>Sets the API-Key (or DeveloperKey) which this service uses for all requests</summary>
        public virtual string Key {
            get {
                return this._Key;
            }
            set {
                this._Key = value;
            }
        }
        
        public virtual Google.Apis.Requests.IRequest CreateRequest(string resource, string method) {
            Google.Apis.Requests.IRequest request = this._service.CreateRequest(resource, method);
            if ((string.IsNullOrEmpty(Key) == false)) {
                request = request.WithKey(this.Key);
            }
            return request.WithAuthentication(_authenticator);
        }
        
        public virtual void RegisterSerializer(Google.Apis.ISerializer serializer) {
            _service.Serializer = serializer;
        }
        
        public virtual string SerializeObject(object obj) {
            return _service.SerializeRequest(obj);
        }
        
        public virtual T DeserializeResponse<T>(Google.Apis.Requests.IResponse response)
         {
            return _service.DeserializeResponse<T>(response);
        }
        
        /// <summary>A list of all OAuth2.0 scopes. Each of these scopes relates to a permission or group of permissions that different methods of this API may need.</summary>
        public enum Scopes {
            
            /// <summary>Manage your YouTube account</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtube")]
            Youtube,
            
            /// <summary>View your YouTube account</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtube.readonly")]
            YoutubeReadonly,
            
            /// <summary>Manage your YouTube videos</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtube.upload")]
            YoutubeUpload,
            
            /// <summary>View and manage your assets and associated content on YouTube</summary>
            [Google.Apis.Util.StringValueAttribute("https://www.googleapis.com/auth/youtubepartner")]
            Youtubepartner,
        }
    }
    
    public class ActivitiesResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "activities";
        
        public ActivitiesResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Post a channel bulletin.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Activity body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Browse the YouTube channel activity collection.</summary>
        /// <param name="part">Required - Activity parts to include in the returned response. Valid values are: id, snippet and contentDetails.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Activity> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Activity _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Activity body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Activity Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activities";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.ActivityListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _channelId;
            
            private string _home;
            
            private System.Nullable<long> _maxResults;
            
            private string _mine;
            
            private string _onBehalfOfContentOwner;
            
            private string _pageToken;
            
            private string _part;
            
            private string _publishedAfter;
            
            private string _publishedBefore;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>YouTube ID of the channel.</summary>
            [Google.Apis.Util.RequestParameterAttribute("channelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ChannelId {
                get {
                    return this._channelId;
                }
                set {
                    this._channelId = value;
                }
            }
            
            /// <summary>Flag indicating to return user's homepage feed.</summary>
            [Google.Apis.Util.RequestParameterAttribute("home", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Home {
                get {
                    return this._home;
                }
                set {
                    this._home = value;
                }
            }
            
            /// <summary>Maximum number of results to return</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Flag indicating to return user's activities.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>Activity parts to include in the returned response. Valid values are: id, snippet and contentDetails.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Only return activities published after given date (inclusive).</summary>
            [Google.Apis.Util.RequestParameterAttribute("publishedAfter", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PublishedAfter {
                get {
                    return this._publishedAfter;
                }
                set {
                    this._publishedAfter = value;
                }
            }
            
            /// <summary>Only return activities published before given date (exclusive).</summary>
            [Google.Apis.Util.RequestParameterAttribute("publishedBefore", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PublishedBefore {
                get {
                    return this._publishedBefore;
                }
                set {
                    this._publishedBefore = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "activities";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class ChannelsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "channels";
        
        public ChannelsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Browse the YouTube channel collection. Either the &apos;id&apos; or &apos;mine&apos; parameter must be set.</summary>
        /// <param name="part">Required - Channel parts to include in the returned response. Valid values are: id, snippet, contentDetails and topicDetails.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.ChannelListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _categoryId;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private string _mine;
            
            private string _mySubscribers;
            
            private string _onBehalfOfContentOwner;
            
            private string _pageToken;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Filter to retrieve the channels within the given category ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("categoryId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string CategoryId {
                get {
                    return this._categoryId;
                }
                set {
                    this._categoryId = value;
                }
            }
            
            /// <summary>YouTube IDs of the channels to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>Maximum number of results to return</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Filter to only channels owned by authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>Filter to channels that subscribed to the channel of the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mySubscribers", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string MySubscribers {
                get {
                    return this._mySubscribers;
                }
                set {
                    this._mySubscribers = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>Channel parts to include in the returned response. Valid values are: id, snippet, contentDetails and topicDetails.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "channels";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class GuideCategoriesResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "guideCategories";
        
        public GuideCategoriesResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Browse the YouTube guide category collection.</summary>
        /// <param name="part">Required - Guide category parts to include in the returned response. Valid values are: id and snippet.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.GuideCategoryListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _hl;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            private string _regionCode;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Language for the returned channelCategories.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hl", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Hl {
                get {
                    return this._hl;
                }
                set {
                    this._hl = value;
                }
            }
            
            /// <summary>Comma-separated YouTube IDs of the channelCategories to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Guide category parts to include in the returned response. Valid values are: id and snippet.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Return the channelCategories in the given region code.</summary>
            [Google.Apis.Util.RequestParameterAttribute("regionCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RegionCode {
                get {
                    return this._regionCode;
                }
                set {
                    this._regionCode = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "guideCategories";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class PlaylistItemsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "playlistItems";
        
        public PlaylistItemsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes playlist items by IDs.</summary>
        /// <param name="id">Required - YouTube IDs of the playlist items to be deleted.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Insert a resource into a playlist.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Browse the YouTube playlist collection.</summary>
        /// <param name="part">Required - Playlist item parts to include in the returned response. Valid values are: id, snippet and contentDetails.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>Update a playlist item.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual UpdateRequest Update(Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) {
            return new UpdateRequest(service, body, part);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>YouTube IDs of the playlist items to be deleted.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistItem> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.PlaylistItem _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.PlaylistItem Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistItemListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private string _onBehalfOfContentOwner;
            
            private string _pageToken;
            
            private string _part;
            
            private string _playlistId;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>YouTube IDs of the playlist items to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>Maximum number of results to return</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>Playlist item parts to include in the returned response. Valid values are: id, snippet and contentDetails.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Retrieves playlist items from the given playlist id.</summary>
            [Google.Apis.Util.RequestParameterAttribute("playlistId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PlaylistId {
                get {
                    return this._playlistId;
                }
                set {
                    this._playlistId = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistItem> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.PlaylistItem _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.PlaylistItem body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.PlaylistItem Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlistItems";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class PlaylistsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "playlists";
        
        public PlaylistsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes playlists by IDs.</summary>
        /// <param name="id">Required - YouTube IDs of the playlists to be deleted.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Create a playlist.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Playlist body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Browse the YouTube playlist collection.</summary>
        /// <param name="part">Required - Playlist parts to include in the returned response. Valid values are: id, snippet and status.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>Update a playlist.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual UpdateRequest Update(Google.Apis.Youtube.v3.Data.Playlist body, string part) {
            return new UpdateRequest(service, body, part);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>YouTube IDs of the playlists to be deleted.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Playlist> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Playlist _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Playlist body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Playlist Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.PlaylistListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _channelId;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private string _mine;
            
            private string _onBehalfOfContentOwner;
            
            private string _pageToken;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Flag indicating only return the playlists of the specified channel ID.</summary>
            [Google.Apis.Util.RequestParameterAttribute("channelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ChannelId {
                get {
                    return this._channelId;
                }
                set {
                    this._channelId = value;
                }
            }
            
            /// <summary>Comma-separated YouTube IDs of the playlists to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>Maximum number of results to return</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Flag indicating only return the playlists of the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>Playlist parts to include in the returned response. Valid values are: id, snippet and status.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Playlist> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Playlist _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Playlist body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Playlist Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "playlists";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public class SearchResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "search";
        
        public SearchResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Universal search for youtube.</summary>
        /// <param name="part">Required - Search result parts to include in the returned response. Valid values are: id and snippet.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>Sort order.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Order {
            
            /// <summary>Sort according to the date.</summary>
            [Google.Apis.Util.StringValueAttribute("date")]
            Date,
            
            /// <summary>Sort according to the rating.</summary>
            [Google.Apis.Util.StringValueAttribute("rating")]
            Rating,
            
            /// <summary>Sort according to the relevance.</summary>
            [Google.Apis.Util.StringValueAttribute("relevance")]
            Relevance,
            
            /// <summary>Sort according to the view count.</summary>
            [Google.Apis.Util.StringValueAttribute("view_count")]
            View_count,
        }
        
        /// <summary>Only search for resources uploaded at a specific pediod</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Published {
            
            /// <summary>No filter on the release date</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Videos uploaded this month</summary>
            [Google.Apis.Util.StringValueAttribute("thisMonth")]
            ThisMonth,
            
            /// <summary>Videos uploaded this week</summary>
            [Google.Apis.Util.StringValueAttribute("thisWeek")]
            ThisWeek,
            
            /// <summary>Videos uploaded today</summary>
            [Google.Apis.Util.StringValueAttribute("today")]
            Today,
        }
        
        /// <summary>Add a filter on the the presence of captions on the videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoCaption {
            
            /// <summary>No filter on the captions.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Videos with closed captions.</summary>
            [Google.Apis.Util.StringValueAttribute("closedCaption")]
            ClosedCaption,
            
            /// <summary>Videos without captions.</summary>
            [Google.Apis.Util.StringValueAttribute("none")]
            None,
        }
        
        /// <summary>Add a filter for the definition of the videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoDefinition {
            
            /// <summary>No filter on the definition.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Videos in high definition.</summary>
            [Google.Apis.Util.StringValueAttribute("high")]
            High,
            
            /// <summary>Videos in standard definition.</summary>
            [Google.Apis.Util.StringValueAttribute("standard")]
            Standard,
        }
        
        /// <summary>Add a filter for the number of dimensions in the videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoDimension {
            
            /// <summary>Videos in two dimensions.</summary>
            [Google.Apis.Util.StringValueAttribute("2d")]
            D,
            
            /// <summary>Videos in three dimensions.</summary>
            [Google.Apis.Util.StringValueAttribute("3d")]
            DValue,
            
            /// <summary>No filter on the dimension.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
        }
        
        /// <summary>Add a filter on the duration of the videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoDuration {
            
            /// <summary>No filter on the duration.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Videos with a duration longer than 20 minutes.</summary>
            [Google.Apis.Util.StringValueAttribute("long")]
            Long,
            
            /// <summary>Videos with a duration between 4 and 20 minutes.</summary>
            [Google.Apis.Util.StringValueAttribute("medium")]
            Medium,
            
            /// <summary>Videos with a duration under 4 minutes.</summary>
            [Google.Apis.Util.StringValueAttribute("short")]
            Short,
        }
        
        /// <summary>Add a filter on the licensing of the videos.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum VideoLicense {
            
            /// <summary>No filter on the license.</summary>
            [Google.Apis.Util.StringValueAttribute("any")]
            Any,
            
            /// <summary>Videos under the Creative Common license.</summary>
            [Google.Apis.Util.StringValueAttribute("creativeCommon")]
            CreativeCommon,
            
            /// <summary>Videos under the YouTube license.</summary>
            [Google.Apis.Util.StringValueAttribute("youtube")]
            Youtube,
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.SearchListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private System.Nullable<long> _maxResults;
            
            private string _onBehalfOfContentOwner;
            
            private System.Nullable<Order> _order;
            
            private string _pageToken;
            
            private string _part;
            
            private System.Nullable<Published> _published;
            
            private string _q;
            
            private string _relatedToVideo;
            
            private string _topicId;
            
            private string _type;
            
            private System.Nullable<VideoCaption> _videoCaption;
            
            private System.Nullable<VideoDefinition> _videoDefinition;
            
            private System.Nullable<VideoDimension> _videoDimension;
            
            private System.Nullable<VideoDuration> _videoDuration;
            
            private System.Nullable<VideoLicense> _videoLicense;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Maximum number of search results to return per page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Sort order.</summary>
            [Google.Apis.Util.RequestParameterAttribute("order", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Order> Order {
                get {
                    return this._order;
                }
                set {
                    this._order = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>Search result parts to include in the returned response. Valid values are: id and snippet.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Only search for resources uploaded at a specific pediod</summary>
            [Google.Apis.Util.RequestParameterAttribute("published", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Published> Published {
                get {
                    return this._published;
                }
                set {
                    this._published = value;
                }
            }
            
            /// <summary>Query to search in Youtube.</summary>
            [Google.Apis.Util.RequestParameterAttribute("q", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Q {
                get {
                    return this._q;
                }
                set {
                    this._q = value;
                }
            }
            
            /// <summary>Search for resources related to this video. Need to be used with type set to 'video'</summary>
            [Google.Apis.Util.RequestParameterAttribute("relatedToVideo", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RelatedToVideo {
                get {
                    return this._relatedToVideo;
                }
                set {
                    this._relatedToVideo = value;
                }
            }
            
            /// <summary>Only search for resources with the specified topic</summary>
            [Google.Apis.Util.RequestParameterAttribute("topicId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string TopicId {
                get {
                    return this._topicId;
                }
                set {
                    this._topicId = value;
                }
            }
            
            /// <summary>Type of resource to search.</summary>
            [Google.Apis.Util.RequestParameterAttribute("type", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Type {
                get {
                    return this._type;
                }
                set {
                    this._type = value;
                }
            }
            
            /// <summary>Add a filter on the the presence of captions on the videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoCaption", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoCaption> VideoCaption {
                get {
                    return this._videoCaption;
                }
                set {
                    this._videoCaption = value;
                }
            }
            
            /// <summary>Add a filter for the definition of the videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoDefinition", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoDefinition> VideoDefinition {
                get {
                    return this._videoDefinition;
                }
                set {
                    this._videoDefinition = value;
                }
            }
            
            /// <summary>Add a filter for the number of dimensions in the videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoDimension", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoDimension> VideoDimension {
                get {
                    return this._videoDimension;
                }
                set {
                    this._videoDimension = value;
                }
            }
            
            /// <summary>Add a filter on the duration of the videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoDuration", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoDuration> VideoDuration {
                get {
                    return this._videoDuration;
                }
                set {
                    this._videoDuration = value;
                }
            }
            
            /// <summary>Add a filter on the licensing of the videos.</summary>
            [Google.Apis.Util.RequestParameterAttribute("videoLicense", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<VideoLicense> VideoLicense {
                get {
                    return this._videoLicense;
                }
                set {
                    this._videoLicense = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "search";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class SubscriptionsResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "subscriptions";
        
        public SubscriptionsResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Deletes subscriptions by IDs.</summary>
        /// <param name="id">Required - YouTube IDs of the subscription to be deleted.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Insert a subscription.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Subscription body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Browses the subscriptions collection.</summary>
        /// <param name="part">Required - Subscription parts to include in the returned response. Valid values are: id, snippet and contentDetails.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        /// <summary>Sort order.</summary>
        [System.ComponentModel.TypeConverterAttribute(typeof(Google.Apis.Util.EnumStringValueTypeConverter))]
        public enum Order {
            
            /// <summary>Sort alphabetically</summary>
            [Google.Apis.Util.StringValueAttribute("alphabetical")]
            Alphabetical,
            
            /// <summary>Sort by relevance.</summary>
            [Google.Apis.Util.StringValueAttribute("relevance")]
            Relevance,
            
            /// <summary>Sort by order of activity.</summary>
            [Google.Apis.Util.StringValueAttribute("unread")]
            Unread,
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>YouTube IDs of the subscription to be deleted.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "subscriptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Subscription> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Subscription _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Subscription body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Subscription Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "subscriptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.SubscriptionListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _channelId;
            
            private string _forChannelId;
            
            private string _id;
            
            private System.Nullable<long> _maxResults;
            
            private string _mine;
            
            private string _onBehalfOfContentOwner;
            
            private System.Nullable<Order> _order;
            
            private string _pageToken;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Only return subscriptions to given channelId.</summary>
            [Google.Apis.Util.RequestParameterAttribute("channelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ChannelId {
                get {
                    return this._channelId;
                }
                set {
                    this._channelId = value;
                }
            }
            
            /// <summary>Comma separated list of channel IDs to return subscriptions for.</summary>
            [Google.Apis.Util.RequestParameterAttribute("forChannelId", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string ForChannelId {
                get {
                    return this._forChannelId;
                }
                set {
                    this._forChannelId = value;
                }
            }
            
            /// <summary>YouTube IDs of the subscriptions to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>Maximum number of search results to return per page.</summary>
            [Google.Apis.Util.RequestParameterAttribute("maxResults", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<long> MaxResults {
                get {
                    return this._maxResults;
                }
                set {
                    this._maxResults = value;
                }
            }
            
            /// <summary>Flag indicating only return the subscriptions of the authenticated user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("mine", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Mine {
                get {
                    return this._mine;
                }
                set {
                    this._mine = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Sort order.</summary>
            [Google.Apis.Util.RequestParameterAttribute("order", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<Order> Order {
                get {
                    return this._order;
                }
                set {
                    this._order = value;
                }
            }
            
            /// <summary>Token for the page selection.</summary>
            [Google.Apis.Util.RequestParameterAttribute("pageToken", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string PageToken {
                get {
                    return this._pageToken;
                }
                set {
                    this._pageToken = value;
                }
            }
            
            /// <summary>Subscription parts to include in the returned response. Valid values are: id, snippet and contentDetails.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "subscriptions";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class VideoCategoriesResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "videoCategories";
        
        public VideoCategoriesResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Browse list of video categories.</summary>
        /// <param name="part">Required - Video category parts to include in the returned response. Valid values are: id and snippet.</param>
        public virtual ListRequest List(string part) {
            return new ListRequest(service, part);
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.VideoCategoryListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _hl;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            private string _regionCode;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string part) : 
                    base(service) {
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>Language used for the title of the categories.</summary>
            [Google.Apis.Util.RequestParameterAttribute("hl", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Hl {
                get {
                    return this._hl;
                }
                set {
                    this._hl = value;
                }
            }
            
            /// <summary>IDs of the categories to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
                set {
                    this._id = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Video category parts to include in the returned response. Valid values are: id and snippet.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Return all the categories in this region.</summary>
            [Google.Apis.Util.RequestParameterAttribute("regionCode", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string RegionCode {
                get {
                    return this._regionCode;
                }
                set {
                    this._regionCode = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videoCategories";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
    }
    
    public class VideosResource {
        
        private YoutubeService service;
        
        private Google.Apis.Authentication.IAuthenticator _authenticator;
        
        private const string Resource = "videos";
        
        public VideosResource(YoutubeService service, Google.Apis.Authentication.IAuthenticator _authenticator) {
            this.service = service;
            this._authenticator = _authenticator;
        }
        
        /// <summary>Delete a YouTube video.</summary>
        /// <param name="id">Required - YouTube ID of the video to be deleted.</param>
        public virtual DeleteRequest Delete(string id) {
            return new DeleteRequest(service, id);
        }
        
        /// <summary>Upload a video to YouTube.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertRequest Insert(Google.Apis.Youtube.v3.Data.Video body, string part) {
            return new InsertRequest(service, body, part);
        }
        
        /// <summary>Upload a video to YouTube.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual InsertMediaUpload Insert(Google.Apis.Youtube.v3.Data.Video body, string part, System.IO.Stream stream, string contentType) {
            return new InsertMediaUpload(service, body, part, stream, contentType);
        }
        
        /// <summary>Browse the YouTube video collection.</summary>
        /// <param name="id">Required - YouTube IDs of the videos to be returned.</param>
        /// <param name="part">Required - Video parts to include in the returned response. Valid values are: id, snippet, contentDetails, player, statistics, status and topicDetails.</param>
        public virtual ListRequest List(string id, string part) {
            return new ListRequest(service, id, part);
        }
        
        /// <summary>Update a video.</summary>
        /// <param name="part">Required - One or more parts to return on the current request.</param>
        public virtual UpdateRequest Update(Google.Apis.Youtube.v3.Data.Video body, string part) {
            return new UpdateRequest(service, body, part);
        }
        
        public class DeleteRequest : Google.Apis.Requests.ServiceRequest<string> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            public DeleteRequest(Google.Apis.Discovery.IRequestProvider service, string id) : 
                    base(service) {
                this._id = id;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>YouTube ID of the video to be deleted.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "delete";
                }
            }
        }
        
        public class InsertRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Video> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Video _Body;
            
            public InsertRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Video body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Video Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "insert";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
        
        public class InsertMediaUpload : Google.Apis.Upload.ResumableUpload<Google.Apis.Youtube.v3.Data.Video, Google.Apis.Youtube.v3.Data.Video> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            public InsertMediaUpload(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Video body, string part, System.IO.Stream stream, string contentType) : 
                    base(service.BaseUri, "/upload/youtube/v3/videos", "POST", stream, contentType) {
                this.Body = body;
                this.Authenticator = service.Authenticator;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
        }
        
        public class ListRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.VideoListResponse> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _id;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            public ListRequest(Google.Apis.Discovery.IRequestProvider service, string id, string part) : 
                    base(service) {
                this._id = id;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>YouTube IDs of the videos to be returned.</summary>
            [Google.Apis.Util.RequestParameterAttribute("id", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Id {
                get {
                    return this._id;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>Video parts to include in the returned response. Valid values are: id, snippet, contentDetails, player, statistics, status and topicDetails.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "list";
                }
            }
        }
        
        public class UpdateRequest : Google.Apis.Requests.ServiceRequest<Google.Apis.Youtube.v3.Data.Video> {
            
            private string _oauth_token;
            
            private System.Nullable<bool> _prettyPrint;
            
            private string _onBehalfOfContentOwner;
            
            private string _part;
            
            private Google.Apis.Youtube.v3.Data.Video _Body;
            
            public UpdateRequest(Google.Apis.Discovery.IRequestProvider service, Google.Apis.Youtube.v3.Data.Video body, string part) : 
                    base(service) {
                this.Body = body;
                this._part = part;
            }
            
            /// <summary>OAuth 2.0 token for the current user.</summary>
            [Google.Apis.Util.RequestParameterAttribute("oauth_token", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Oauth_token {
                get {
                    return this._oauth_token;
                }
                set {
                    this._oauth_token = value;
                }
            }
            
            /// <summary>Returns response with indentations and line breaks.</summary>
            [Google.Apis.Util.RequestParameterAttribute("prettyPrint", Google.Apis.Util.RequestParameterType.Query)]
            public virtual System.Nullable<bool> PrettyPrint {
                get {
                    return this._prettyPrint;
                }
                set {
                    this._prettyPrint = value;
                }
            }
            
            /// <summary>The authenticated user acts on behalf of this content owner.</summary>
            [Google.Apis.Util.RequestParameterAttribute("onBehalfOfContentOwner", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string OnBehalfOfContentOwner {
                get {
                    return this._onBehalfOfContentOwner;
                }
                set {
                    this._onBehalfOfContentOwner = value;
                }
            }
            
            /// <summary>One or more parts to return on the current request.</summary>
            [Google.Apis.Util.RequestParameterAttribute("part", Google.Apis.Util.RequestParameterType.Query)]
            public virtual string Part {
                get {
                    return this._part;
                }
            }
            
            /// <summary>Gets/Sets the Body of this Request.</summary>
            public virtual Google.Apis.Youtube.v3.Data.Video Body {
                get {
                    return this._Body;
                }
                set {
                    this._Body = value;
                }
            }
            
            protected override string ResourcePath {
                get {
                    return "videos";
                }
            }
            
            protected override string MethodName {
                get {
                    return "update";
                }
            }
            
            protected override object GetBody() {
                return this.Body;
            }
        }
    }
    
    public partial class YoutubeService {
        
        private const string Resource = "";
        
        private ActivitiesResource _activities;
        
        private ChannelsResource _channels;
        
        private GuideCategoriesResource _guideCategories;
        
        private PlaylistItemsResource _playlistItems;
        
        private PlaylistsResource _playlists;
        
        private SearchResource _search;
        
        private SubscriptionsResource _subscriptions;
        
        private VideoCategoriesResource _videoCategories;
        
        private VideosResource _videos;
        
        private Google.Apis.Discovery.IRequestProvider service {
            get {
                return this;
            }
        }
        
        public virtual ActivitiesResource Activities {
            get {
                return this._activities;
            }
        }
        
        public virtual ChannelsResource Channels {
            get {
                return this._channels;
            }
        }
        
        public virtual GuideCategoriesResource GuideCategories {
            get {
                return this._guideCategories;
            }
        }
        
        public virtual PlaylistItemsResource PlaylistItems {
            get {
                return this._playlistItems;
            }
        }
        
        public virtual PlaylistsResource Playlists {
            get {
                return this._playlists;
            }
        }
        
        public virtual SearchResource Search {
            get {
                return this._search;
            }
        }
        
        public virtual SubscriptionsResource Subscriptions {
            get {
                return this._subscriptions;
            }
        }
        
        public virtual VideoCategoriesResource VideoCategories {
            get {
                return this._videoCategories;
            }
        }
        
        public virtual VideosResource Videos {
            get {
                return this._videos;
            }
        }
    }
}
