<Window x:Class="DecimalInternetClock.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:my="clr-namespace:DecimalInternetClock"
    xmlns:colorPicker="clr-namespace:ColorPicker;assembly=ColorPicker"
    xmlns:prop="clr-namespace:DecimalInternetClock.Properties"
        xmlns:vc="clr-namespace:DecimalInternetClock.ValueConverters"
    Title="DecimalInternetClock"
        x:Name="this" WindowStyle="None" AllowsTransparency="True"
        Icon="Resources\Blank.png"
        DataContext="{Binding Source={x:Static prop:Settings.Default}}"
        FontFamily="{Binding Path=DisplayFontFamily}"
        Topmost="{Binding Path=AlwaysOnTop}"
        ShowInTaskbar="{Binding Path=ShowInTaskBar}"
        ResizeMode="{Binding Path=ResizeMode}"
        Style="{DynamicResource WindowStyle}">
    <!--BUG: nem működik az ikon itt-->
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                      Source="Resources/Styles/ScrollViewer.xaml">
                </ResourceDictionary>
                <ResourceDictionary
                      Source="Resources/Styles/Window.xaml">
                </ResourceDictionary>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Window.ContextMenu>

        <ContextMenu Name="contextMenu">
            <MenuItem Header="Close" Click="ExitMenuItem_Click" />
            <MenuItem Header="Set Foreground" Click="ForeColor_Click" />
            <MenuItem Header="Set Background" Click="BackColor_Click" />
            <MenuItem Header="Options" Name="miOption" Click="miOption_Click" />
            <MenuItem Header="Touch Test" Name="miTouchTest" Click="miTouchTest_Click"/>
        </ContextMenu>
    </Window.ContextMenu>

    <Grid Name="windowContent" MouseLeftButtonDown="Grid_MouseLeftButtonDown">

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <!--<RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>-->

            <RowDefinition Height="20" MinHeight="20"/>
        </Grid.RowDefinitions>
        <!--Window Header-->
        <Grid MinHeight="30" Height="30" MaxHeight="50" Visibility="{Binding WindowHeaderVisibility}">
            <Border>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#3F7F7F7F" Offset="0"/>
                        <GradientStop Color="#3FFFFFFF" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Viewbox HorizontalAlignment="Left" VerticalAlignment="Center">
                <!--<Image Source="Blank.png"/>-->
            </Viewbox>
            <TextBlock TextAlignment="Center"
                   TextElement.FontSize="12" VerticalAlignment="Center" Background="Transparent">
            <TextBlock.Text>
                <Binding ElementName="this" Path="Title" Mode="OneWay"/>
            </TextBlock.Text>
            </TextBlock>
            <Button Click="ExitMenuItem_Click" HorizontalAlignment="Right" Background="Transparent">
                <TextBlock Margin="5">X</TextBlock>
            </Button>
        </Grid>
        <!--Window Content-->
        <ScrollViewer Grid.Row="1"
                      VerticalScrollBarVisibility="Auto"
                      Style="{StaticResource ScrollViewerStyle}"
                      x:Name="_scrollViewer">
            <StackPanel Orientation="Vertical"
                        MouseLeftButtonDown="Grid_MouseLeftButtonDown"
                        >
                <my:DecimalClock Grid.Row="1" Background="Transparent"
                         Visibility="{Binding Path=DecimalClockVisibility}">

                    <my:DecimalClock.DecimalTime>
                        <Binding ElementName="this" Path="DecimalTime.Time" Mode="OneWay"></Binding>
                    </my:DecimalClock.DecimalTime>
                    <!--<my:DecimalClock.ForeColor>
                <Binding ElementName="this" Path="ForeColor"/>
            </my:DecimalClock.ForeColor>
            <my:DecimalClock.Transparency>
                <Binding ElementName="this" Path="Transparency"/>
            </my:DecimalClock.Transparency>-->
                </my:DecimalClock>
                <my:BinaryClock Grid.Row="2" Background="Transparent"
                        Visibility="{Binding Path=BinaryClockVisibility}">
                    <my:BinaryClock.DecimalTime>
                        <Binding ElementName="this" Path="DecimalTime.Time" Mode="OneWay"></Binding>
                    </my:BinaryClock.DecimalTime>
                    <!--<my:BinaryClock.ForeColor>
                <Binding ElementName="this" Path="ForeColor"/>
            </my:BinaryClock.ForeColor>
            <my:BinaryClock.Transparency>
                <Binding ElementName="this" Path="Transparency"/>
            </my:BinaryClock.Transparency>-->
                </my:BinaryClock>
                <my:BinaryRing Visibility="{Binding Path=BinaryRingVisibility}"
                               Grid.Row="3"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch"
                               RenderTransformOrigin="0.5 0.5"
                               x:Name="_bRing">
                    <my:BinaryRing.DecimalTime>
                        <Binding ElementName="this"
                         Path="DecimalTime.Time"
                         Mode="OneWay"/>
                    </my:BinaryRing.DecimalTime>
                    <my:BinaryRing.RenderTransform>
                        <RotateTransform Angle="{Binding ElementName=this, Path=RotateAngle}"></RotateTransform>
                    </my:BinaryRing.RenderTransform>
                    <!--<my:BinaryRing.Foreground>
                <SolidColorBrush>
                    <SolidColorBrush.Color>
                        <Binding ElementName="this" Path="ForeColor"/>
                    </SolidColorBrush.Color>
                </SolidColorBrush>
            </my:BinaryRing.Foreground>-->
                </my:BinaryRing>

                <TextBox Name="textBox"
                 Background="#01000000"
                 Grid.Row="4"
                 Margin="2"
                 TextWrapping="Wrap"
                 VerticalScrollBarVisibility="Auto"
                 AcceptsReturn="True"
                 BorderBrush="Transparent"
                 Visibility="{Binding Path=TextBoxVisibility}"
                 >
                    <!--<TextBox.BorderBrush>
                <Binding ElementName="this" Path="Foreground"/>
            </TextBox.BorderBrush>-->
                    <TextBox.Foreground>
                        <Binding ElementName="this" Path="Foreground"/>
                    </TextBox.Foreground>
                    <!--<TextBox.Text>
                <Binding Path="Text" Mode="TwoWay"/>
            </TextBox.Text>-->
                </TextBox>

            </StackPanel>
        </ScrollViewer>
    </Grid>
</Window>