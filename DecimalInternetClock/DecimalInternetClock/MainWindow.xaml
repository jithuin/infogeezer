<Window x:Class="DecimalInternetClock.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:my="clr-namespace:DecimalInternetClock"
    xmlns:colorPicker="clr-namespace:ColorPicker;assembly=ColorPicker"
    xmlns:prop="clr-namespace:DecimalInternetClock.Properties"
    Title="DecimalInternetClock"
        x:Name="this" WindowStyle="None" AllowsTransparency="True" 
        Icon="Resources\Blank.png"
        FontFamily="Aurabesh">
    <!--BUG: nem működik az ikon itt-->
    <Window.Resources>
        <prop:Settings x:Key="Settings" x:Name="Set"/>
    </Window.Resources>
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="ResizeMode" Value="CanResizeWithGrip"></Setter>
            <Style.Triggers>
                <DataTrigger Value="False">
                    <DataTrigger.Binding>
                        <Binding Source="{x:Static prop:Settings.Default}" Path="CanResize" />
                    </DataTrigger.Binding>
                    <Setter Property="ResizeMode" Value="CanResize" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>
    <Window.Topmost>
        <Binding Source="{x:Static prop:Settings.Default}" Path="AlwaysOnTop" />
    </Window.Topmost>
    <Window.ShowInTaskbar>
        <Binding Source="{x:Static prop:Settings.Default}" Path="ShowInTaskBar">

        </Binding>
    </Window.ShowInTaskbar>
    <!--<Window.BindingGroup>
        <BindingGroup Name="{x:Null}" NotifyOnValidationError="False" />
    </Window.BindingGroup>-->
    <Window.ContextMenu>

        <ContextMenu Name="contextMenu">
            <MenuItem Header="Close" Click="ExitMenuItem_Click"></MenuItem>
            <MenuItem Header="Set Foreground" Click="ForeColor_Click" />
            <MenuItem Header="Set Background" Click="BackColor_Click" />
            <MenuItem >
                <MenuItem.Header>
                    <CheckBox>
                        <CheckBox.Content>
                            AlwaysOnTop
                        </CheckBox.Content>
                        <CheckBox.IsChecked>
                            <Binding Source="{x:Static prop:Settings.Default}" Path="AlwaysOnTop" Mode="TwoWay"/>
                        </CheckBox.IsChecked>
                    </CheckBox>
                    <!--<Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="0">Always On Top</TextBlock>
                        <TextBlock Text="x" VerticalAlignment="Center" Margin="0,0,10,0">
                            <TextBlock.Visibility>
                                <Binding ElementName="this" Path="AlwaysOnTop" Mode="OneWay">
                                    <Binding.Converter>
                                        <my:BooleanToVisibilityConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </TextBlock.Visibility>
                        </TextBlock>

                    </Grid>-->
                </MenuItem.Header>
            </MenuItem>
            <MenuItem >
                <MenuItem.Header>
                    <CheckBox>
                        <CheckBox.Content>
                            ShowInTaskbar
                        </CheckBox.Content>
                        <CheckBox.IsChecked>
                            <Binding Source="{x:Static prop:Settings.Default}" Path="ShowInTaskBar" Mode="TwoWay"/>
                        </CheckBox.IsChecked>
                    </CheckBox>
                    <!--<Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" Margin="0">ShowInTaskbar</TextBlock>
                        <TextBlock Text="x" VerticalAlignment="Center" Margin="0,0,10,0">
                            <TextBlock.Visibility>
                                <Binding ElementName="this" Path="ShowInTaskbar" Mode="OneWay">
                                    <Binding.Converter>
                                        <my:BooleanToVisibilityConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </TextBlock.Visibility>
                        </TextBlock>

                    </Grid>-->
                </MenuItem.Header>
            </MenuItem>
            <!--<MenuItem Click="ShowWindowHeader_MenuItem_Click">-->
            <MenuItem>
                <MenuItem.Header>
                    <CheckBox Name="ShowWindowHeader_CheckBox">
                        <CheckBox.Content>
                            ShowWindowHeader
                        </CheckBox.Content>
                        <CheckBox.IsChecked>
                            <Binding Source="{x:Static prop:Settings.Default}" Path="ShowWindowHeader" Mode="TwoWay"/>
                        </CheckBox.IsChecked>
                    </CheckBox>
                    <!--<Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0">ShowWindowHeader</TextBlock>
                        <TextBlock Text="x" VerticalAlignment="Center" Margin="0,0,10,0">
                            <TextBlock.Visibility>
                                <Binding ElementName="this" Path="ShowWindowHeader" Mode="OneWay">
                                    <Binding.Converter>
                                        <my:BooleanToVisibilityConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </TextBlock.Visibility>
                        </TextBlock>

                    </Grid>-->
                </MenuItem.Header>
            </MenuItem>
            <MenuItem Name="CanResize_CheckBox">
                <MenuItem.Header>
                    <CheckBox>
                        <CheckBox.Content>
                            CanResize
                        </CheckBox.Content>
                        <CheckBox.IsChecked>

                            <Binding Source="{x:Static prop:Settings.Default}" Path="CanResize" Mode="TwoWay"/>
                        </CheckBox.IsChecked>
                    </CheckBox>
                    <!--<Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0">CanResize</TextBlock>
                        <TextBlock Text="x" VerticalAlignment="Center" Margin="0,0,10,0">
                            <TextBlock.Visibility>
                                <Binding ElementName="this" Path="CanResize" Mode="OneWay">
                                    <Binding.Converter>
                                        <my:BooleanToVisibilityConverter/>
                                    </Binding.Converter>
                                </Binding>
                            </TextBlock.Visibility>
                        </TextBlock>

                    </Grid>-->
                </MenuItem.Header>
            </MenuItem>
        </ContextMenu>
    </Window.ContextMenu>

    <Grid Name="windowContent" MouseLeftButtonDown="Grid_MouseLeftButtonDown">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="2*"/>
            <RowDefinition Height="20" MinHeight="20"/>
        </Grid.RowDefinitions>

        <!--Window Header-->
        <Grid MinHeight="30" Height="30" MaxHeight="50">
            <Grid.Style>
                <Style>
                    <Style.Triggers>
                        <DataTrigger Value="False">
                            <DataTrigger.Binding>
                                <Binding ElementName="ShowWindowHeader_CheckBox" Path="IsChecked">
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter Property="Grid.Visibility" Value="Collapsed"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <!--<Grid.Visibility>
                <Binding ElementName="this" Path="ShowWindowHeader" Mode="OneWay">
                    <Binding.Converter>
                        <my:BooleanToVisibilityConverter/>
                    </Binding.Converter>
                </Binding>
            </Grid.Visibility>-->
            <Border>
                <Border.Background>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                        <GradientStop Color="#3F7F7F7F" Offset="0"/>
                        <GradientStop Color="#3FFFFFFF" Offset="1"/>
                    </LinearGradientBrush>
                </Border.Background>
            </Border>
            <Viewbox HorizontalAlignment="Left" VerticalAlignment="Center">
                <Image Source="Blank.png"/>
            </Viewbox>
            <TextBlock TextAlignment="Center" 
                   TextElement.FontSize="12" VerticalAlignment="Center" Background="Transparent">
            <TextBlock.Text>
                <Binding ElementName="this" Path="Title" Mode="OneWay"/>
            </TextBlock.Text>
            </TextBlock>
            <Button Click="ExitMenuItem_Click" HorizontalAlignment="Right" Background="Transparent">
                <TextBlock Margin="5">X</TextBlock>
            </Button>
        </Grid>

        <!--Window Content-->
        <my:DecimalClock Grid.Row="1" Background="Transparent">
            <my:DecimalClock.DecimalTime>
                <Binding ElementName="this" Path="DecimalTime" Mode="OneWay"></Binding>
            </my:DecimalClock.DecimalTime>
            <!--<my:DecimalClock.ForeColor>
                <Binding ElementName="this" Path="ForeColor"/>
            </my:DecimalClock.ForeColor>
            <my:DecimalClock.Transparency>
                <Binding ElementName="this" Path="Transparency"/>
            </my:DecimalClock.Transparency>-->
        </my:DecimalClock>
        <my:BinaryClock Grid.Row="2" Background="Transparent">
            <my:BinaryClock.DecimalTime>
                <Binding ElementName="this" Path="DecimalTime" Mode="OneWay"></Binding>
            </my:BinaryClock.DecimalTime>
            <!--<my:BinaryClock.ForeColor>
                <Binding ElementName="this" Path="ForeColor"/>
            </my:BinaryClock.ForeColor>
            <my:BinaryClock.Transparency>
                <Binding ElementName="this" Path="Transparency"/>
            </my:BinaryClock.Transparency>-->
        </my:BinaryClock>
        <my:BinaryRing Grid.Row="3" 
                       HorizontalAlignment="Stretch" 
                       VerticalAlignment="Stretch">
            <my:BinaryRing.DecimalTime>
                <Binding ElementName="this" 
                         Path="DecimalTime" 
                         Mode="OneWay"/>
            </my:BinaryRing.DecimalTime>
            <!--<my:BinaryRing.Foreground>
                <SolidColorBrush>
                    <SolidColorBrush.Color>
                        <Binding ElementName="this" Path="ForeColor"/>
                    </SolidColorBrush.Color>
                </SolidColorBrush>
            </my:BinaryRing.Foreground>-->
        </my:BinaryRing>
        <TextBox Name="textBox"
                 Background="#01000000" 
                 Grid.Row="4" 
                 Margin="2" 
                 TextWrapping="Wrap" 
                 VerticalScrollBarVisibility="Auto" 
                 AcceptsReturn="True" 
                 BorderBrush="Transparent"
                 
                 >
            <!--<TextBox.BorderBrush>
                <Binding ElementName="this" Path="Foreground"/>
            </TextBox.BorderBrush>-->
            <TextBox.Foreground>
                <Binding ElementName="this" Path="Foreground"/>
            </TextBox.Foreground>
            <TextBox.Text>
                <Binding Source="{x:Static prop:Settings.Default}" Path="Text" Mode="OneTime"/>
            </TextBox.Text>
        </TextBox>
    </Grid>
</Window>
